Search.setIndex({"alltitles": {"3 Powerful Ways to Create PySpark DataFrames": [[56, "powerful-ways-to-create-pyspark-dataframes"]], "A Function Should Have Fewer Than Four Arguments": [[6, "a-function-should-have-fewer-than-four-arguments"]], "A Function Should Only Do One Task": [[6, "a-function-should-only-do-one-task"]], "About The Author": [[72, "about-the-author"]], "Abstract Classes: Declare Methods without Implementation": [[1, "abstract-classes-declare-methods-without-implementation"]], "Accelerate String Matching with RapidFuzz": [[53, "accelerate-string-matching-with-rapidfuzz"]], "Access a Group of Rows with loc and iloc": [[34, "access-a-group-of-rows-with-loc-and-iloc"]], "Add Progress Bar to Your List Comprehension": [[68, "add-progress-bar-to-your-list-comprehension"]], "Add Statistical Significance Annotations on Seaborn Plots": [[60, "add-statistical-significance-annotations-on-seaborn-plots"]], "Align Pandas Objects for Effective Data Manipulation": [[39, "align-pandas-objects-for-effective-data-manipulation"]], "Alternative Approach": [[62, null]], "Analyze the Memory Usage of Your Python Code": [[65, "analyze-the-memory-usage-of-your-python-code"]], "Apply Functions to Elements in a List": [[7, null]], "Apply Multiple Functions to a DataFrame with Pipe": [[28, "apply-multiple-functions-to-a-dataframe-with-pipe"]], "Apply a Function to a Column of a DataFrame": [[28, "apply-a-function-to-a-column-of-a-dataframe"]], "Apply a Function to a DataFrame Elementwise": [[28, "apply-a-function-to-a-dataframe-elementwise"]], "Assign IDs to Test Cases": [[38, "assign-ids-to-test-cases"], [58, "assign-ids-to-test-cases"]], "Assign Name to a Pandas Aggregation": [[39, "assign-name-to-a-pandas-aggregation"]], "Assign Names to Values": [[6, "assign-names-to-values"]], "Assign Values to Multiple New Columns": [[28, "assign-values-to-multiple-new-columns"]], "Astral: Organize Your Github Stars with Ease": [[67, "astral-organize-your-github-stars-with-ease"]], "AutoGluon: Fast and Accurate ML in 3 Lines of Code": [[51, "autogluon-fast-and-accurate-ml-in-3-lines-of-code"]], "Automate CSV Parsing with DuckDB\u2019s read_csv": [[46, "automate-csv-parsing-with-duckdb-s-read-csv"]], "Automate Time Series Feature Engineering with tsfresh": [[59, "automate-time-series-feature-engineering-with-tsfresh"]], "Automatically Adjust Annotations in Matplotlib for Readability": [[60, "automatically-adjust-annotations-in-matplotlib-for-readability"]], "Autoscraper: Automate Web Scraping in Python": [[49, "autoscraper-automate-web-scraping-in-python"]], "Avoid Duplication in Your Code": [[6, "avoid-duplication-in-your-code"]], "Avoid Side Effects When Using List in a Function": [[6, "avoid-side-effects-when-using-list-in-a-function"]], "Avoid Using Flags as a Function\u2019s Parameters": [[6, "avoid-using-flags-as-a-function-s-parameters"]], "Avoiding Data Leakage in Time Series Data": [[47, "avoiding-data-leakage-in-time-series-data"]], "Avoiding Surprises with Mutable Default Arguments in Python": [[6, "avoiding-surprises-with-mutable-default-arguments-in-python"]], "BERTopic: Harnessing BERT for Interpretable Topic Modeling": [[53, "bertopic-harnessing-bert-for-interpretable-topic-modeling"]], "Backtesting: Assess Trading Strategy Performance Effortlessly in Python": [[59, "backtesting-assess-trading-strategy-performance-effortlessly-in-python"]], "Basic Operations": [[25, "basic-operations"]], "Beartype: Fast, Efficient Runtime Type Checking for Python": [[65, "beartype-fast-efficient-runtime-type-checking-for-python"]], "BertTopic: Enhance Topic Models with Expert-Defined Themes": [[53, "berttopic-enhance-topic-models-with-expert-defined-themes"]], "BertViz: Visualize NLP Model Attention Patterns": [[53, "bertviz-visualize-nlp-model-attention-patterns"]], "Best Practices for PySpark DataFrame Comparison Testing": [[56, "best-practices-for-pyspark-dataframe-comparison-testing"]], "Better Outputs": [[64, null]], "Better Pandas": [[44, null]], "Beyond Keywords: Building a Semantic Recipe Search Engine": [[53, "beyond-keywords-building-a-semantic-recipe-search-engine"]], "Beyond Parquet: Reliable Data Storage with Delta Lake": [[45, "beyond-parquet-reliable-data-storage-with-delta-lake"]], "Beyond Point Estimates: Leverage Prediction Intervals for Robust Forecasting": [[59, "beyond-point-estimates-leverage-prediction-intervals-for-robust-forecasting"]], "Bloxs: Create an Attractive Display in Your Jupyter Notebook": [[60, "bloxs-create-an-attractive-display-in-your-jupyter-notebook"]], "Box: Using Dot Notation to Access Keys in a Python Dictionary": [[62, "box-using-dot-notation-to-access-keys-in-a-python-dictionary"]], "Calculate the Difference Between Rows of a pandas DataFrame": [[34, "calculate-the-difference-between-rows-of-a-pandas-dataframe"]], "Camelot: PDF Table Extraction for Humans": [[64, "camelot-pdf-table-extraction-for-humans"]], "ChainMap: Combine Multiple Dictionaries into One Unit": [[17, "chainmap-combine-multiple-dictionaries-into-one-unit"]], "Chaining": [[24, "chaining"]], "Change Values": [[28, null]], "Check if Two File Paths Are the Same": [[22, "check-if-two-file-paths-are-the-same"]], "Check if Two NumPy Arrays Are Equal": [[41, "check-if-two-numpy-arrays-are-equal"]], "Checklist: Create Data to Test Your NLP Model": [[53, "checklist-create-data-to-test-your-nlp-model"]], "Choose a Descriptive Name Over a Short One When Naming Your Function": [[38, "choose-a-descriptive-name-over-a-short-one-when-naming-your-function"], [58, "choose-a-descriptive-name-over-a-short-one-when-naming-your-function"]], "Chroma: The Lightning-Fast Solution to Text Embeddings and Querying": [[53, "chroma-the-lightning-fast-solution-to-text-embeddings-and-querying"]], "Chronos: Unleashing Pre-trained Language Models for Time Series Forecasting": [[59, "chronos-unleashing-pre-trained-language-models-for-time-series-forecasting"]], "Classes": [[1, null]], "Clean Iterables Unpacking in Python": [[11, "clean-iterables-unpacking-in-python"]], "Code Review": [[65, null]], "Code Speed": [[2, null]], "Collections": [[17, null]], "Color the Background of a pandas DataFrame in a Gradient Style": [[37, "color-the-background-of-a-pandas-dataframe-in-a-gradient-style"]], "Combine Multiple DataFrames": [[29, null]], "Combine Reduce and Operator Methods": [[19, "combine-reduce-and-operator-methods"]], "Combine SQL and Python Efficiently with Ibis": [[44, "combine-sql-and-python-efficiently-with-ibis"]], "Compare Between Two Data Classes": [[18, "compare-between-two-data-classes"]], "Compare Dependencies of Two Requirements Files": [[66, "compare-dependencies-of-two-requirements-files"]], "Compare The Execution Time Between 2 Functions": [[2, "compare-the-execution-time-between-2-functions"]], "Comparing Python Command Line Interface Tools: Argparse, Click, and Typer": [[64, "comparing-python-command-line-interface-tools-argparse-click-and-typer"]], "Concurrently Execute Tasks on Separate CPUs": [[2, "concurrently-execute-tasks-on-separate-cpus"]], "Condense an If-Else Statement into One Line": [[6, "condense-an-if-else-statement-into-one-line"]], "Confirm Whether a Variable Is a Number": [[12, "confirm-whether-a-variable-is-a-number"]], "Control the Number of Printed Decimals with f-Strings": [[15, "control-the-number-of-printed-decimals-with-f-strings"], [36, "control-the-number-of-printed-decimals-with-f-strings"]], "Convert Names into a Generalized Format": [[53, "convert-names-into-a-generalized-format"]], "Cool Tools": [[61, null]], "Copy on Write Mode in pandas 2.0": [[30, "copy-on-write-mode-in-pandas-2-0"]], "Create Dynamic SQL Statements with Python string Template": [[43, "create-dynamic-sql-statements-with-python-string-template"]], "Create Sound Notifications in Python in One Line of Code": [[69, "create-sound-notifications-in-python-in-one-line-of-code"]], "Create a DataFrame": [[30, null]], "Create a New Directory and File": [[22, "create-a-new-directory-and-file"]], "Create a Readable Machine Learning Pipeline in One Line of Code": [[51, "create-a-readable-machine-learning-pipeline-in-one-line-of-code"]], "Customized Methods": [[24, "customized-methods"]], "DVC: A Data Version Control Tool for Your Data Science Projects": [[52, "dvc-a-data-version-control-tool-for-your-data-science-projects"]], "Data Classes": [[18, null]], "Data Classes vs Normal Classes": [[18, "data-classes-vs-normal-classes"]], "Data Science Tools": [[42, null]], "DataFrame rolling: Find The Average of The Previous n Datapoints Using pandas": [[32, "dataframe-rolling-find-the-average-of-the-previous-n-datapoints-using-pandas"]], "DataFrame.copy(): Make a Copy of a DataFrame": [[30, "dataframe-copy-make-a-copy-of-a-dataframe"]], "DataFrame.cumsum: Get Cumulative Sum Over Each Column": [[34, "dataframe-cumsum-get-cumulative-sum-over-each-column"]], "DataFrame.diff and DataFrame.shift: Take the Difference Between Rows Within a Column in pandas": [[34, "dataframe-diff-and-dataframe-shift-take-the-difference-between-rows-within-a-column-in-pandas"]], "DataFrame.groupby.sample: Get a Random Sample of Items from Each Category in a Column": [[39, "dataframe-groupby-sample-get-a-random-sample-of-items-from-each-category-in-a-column"]], "DataFrame.insert: Insert a Column Into a DataFrame at a Specified Location": [[29, "dataframe-insert-insert-a-column-into-a-dataframe-at-a-specified-location"]], "Datacommons: Get Statistics about a Location in One Line of Code": [[49, "datacommons-get-statistics-about-a-location-in-one-line-of-code"]], "Datetime": [[3, null]], "Debug Your Python Code with an Equal Sign in an f-String": [[15, "debug-your-python-code-with-an-equal-sign-in-an-f-string"], [36, "debug-your-python-code-with-an-equal-sign-in-an-f-string"]], "Decomposing High-Dimensional Data into Two or Three Dimensions": [[51, "decomposing-high-dimensional-data-into-two-or-three-dimensions"]], "Decorator in Python": [[5, "decorator-in-python"]], "DeepDiff Find Deep Differences of Python Objects": [[38, "deepdiff-find-deep-differences-of-python-objects"], [58, "deepdiff-find-deep-differences-of-python-objects"]], "DeepEval: Unit Testing for Your LLM Model": [[38, "deepeval-unit-testing-for-your-llm-model"], [58, "deepeval-unit-testing-for-your-llm-model"]], "Deepchecks: Check Category Mismatch Between Train and Test Set": [[38, "deepchecks-check-category-mismatch-between-train-and-test-set"], [58, "deepchecks-check-category-mismatch-between-train-and-test-set"]], "Defaultdict: Create a Dictionary with Values that are List": [[17, "defaultdict-create-a-dictionary-with-values-that-are-list"]], "Defaultdict: Return a Default Value When a Key is Not Available": [[17, "defaultdict-return-a-default-value-when-a-key-is-not-available"]], "Delta Lake": [[45, null]], "Derivatives, Integrals, and Limit": [[25, "derivatives-integrals-and-limit"]], "Detect Issues in AI Models with Giskard Scans": [[50, "detect-issues-in-ai-models-with-giskard-scans"]], "Dictdiffer: Find the Differences Between Two Dictionaries": [[62, "dictdiffer-find-the-differences-between-two-dictionaries"]], "Dictionary": [[4, null]], "Difference Between NumPy\u2019s All and Any Methods": [[41, "difference-between-numpys-all-and-any-methods"]], "Difference between list append and list extend": [[9, "difference-between-list-append-and-list-extend"]], "Distinguishing Instance-Level and Class Methods": [[1, "distinguishing-instance-level-and-class-methods"]], "Distributed Data Joining with Shuffle Joins in PySpark": [[56, "distributed-data-joining-with-shuffle-joins-in-pyspark"]], "Distributed Machine Learning with MLlib": [[51, "distributed-machine-learning-with-mllib"]], "Divide a Large pandas DataFrame into Chunks": [[30, "divide-a-large-pandas-dataframe-into-chunks"]], "Don\u2019t Hard-Code. Use Hydra Instead": [[63, "dont-hard-code-use-hydra-instead"]], "Don\u2019t Use Multiple OR Operators. Use in Instead": [[6, "don-t-use-multiple-or-operators-use-in-instead"]], "Double dict.get: Get Values in a Nested Dictionary with Missing Keys": [[4, "double-dict-get-get-values-in-a-nested-dictionary-with-missing-keys"]], "Double numpy.argsort: Get Rank of Values in an Array": [[41, "double-numpy-argsort-get-rank-of-values-in-an-array"]], "Download a File on GitHub Using wget": [[67, "download-a-file-on-github-using-wget"]], "Drag-and-Drop Visualizations with PyGWalker": [[60, "drag-and-drop-visualizations-with-pygwalker"]], "Drop Correlated Features": [[47, "drop-correlated-features"]], "DuckDB": [[46, null]], "DuckDB: Query Pandas DataFrames Faster with Columnar Storage": [[43, "duckdb-query-pandas-dataframes-faster-with-columnar-storage"], [46, "duckdb-query-pandas-dataframes-faster-with-columnar-storage"]], "Dynamic Report Generation with Jinja Templates": [[64, "dynamic-report-generation-with-jinja-templates"]], "Efficient Data Appending in Parquet Files: Delta Lake vs. Pandas": [[45, "efficient-data-appending-in-parquet-files-delta-lake-vs-pandas"]], "Efficient Data Updates and Scanning with Delta Lake": [[45, "efficient-data-updates-and-scanning-with-delta-lake"]], "Efficient Feature Transformation with make_column_transformer in scikit-learn": [[47, "efficient-feature-transformation-with-make-column-transformer-in-scikit-learn"]], "Efficient Keyword Extraction and Replacement with FlashText": [[53, "efficient-keyword-extraction-and-replacement-with-flashtext"]], "Efficient Python Tricks and Tools for Data Scientists": [[72, null]], "Efficient SQL Operations with DuckDB on Pandas DataFrames": [[43, "efficient-sql-operations-with-duckdb-on-pandas-dataframes"], [46, "efficient-sql-operations-with-duckdb-on-pandas-dataframes"]], "Efficient String Data Handling in pandas 2.0 with PyArrow Arrays": [[31, "efficient-string-data-handling-in-pandas-2-0-with-pyarrow-arrays"]], "Efficient Testing of Python Class with setUp Method": [[38, "efficient-testing-of-python-class-with-setup-method"], [58, "efficient-testing-of-python-class-with-setup-method"]], "Efficiently Checking Object Types in Python": [[6, "efficiently-checking-object-types-in-python"]], "Efficiently Generate Falsified Examples for Unit Tests with Pandera and Hypothesis": [[38, "efficiently-generate-falsified-examples-for-unit-tests-with-pandera-and-hypothesis"], [58, "efficiently-generate-falsified-examples-for-unit-tests-with-pandera-and-hypothesis"]], "Efficiently Handle Large Datasets with DuckDB and PyArrow": [[43, "efficiently-handle-large-datasets-with-duckdb-and-pyarrow"], [46, "efficiently-handle-large-datasets-with-duckdb-and-pyarrow"]], "Efficiently Resume Work After Breaks with Failing Tests": [[38, "efficiently-resume-work-after-breaks-with-failing-tests"], [58, "efficiently-resume-work-after-breaks-with-failing-tests"]], "Embrace the Open-Closed Principle to Design Extensible Classes": [[1, "embrace-the-open-closed-principle-to-design-extensible-classes"]], "Embracing Duck Typing for Cleaner, More Adaptable Data Science Code": [[1, "embracing-duck-typing-for-cleaner-more-adaptable-data-science-code"]], "Encode Categorical Data Using Frequency": [[47, "encode-categorical-data-using-frequency"]], "Encode Categorical Values in a Pandas DataFrame": [[28, "encode-categorical-values-in-a-pandas-dataframe"]], "Encode Rare Labels with Feature-engine": [[47, "encode-rare-labels-with-feature-engine"]], "Enforce Data Quality with Delta Lake Constraints": [[45, "enforce-data-quality-with-delta-lake-constraints"]], "Enhance Code Modularity and Reusability with Temporary Views in PySpark": [[56, "enhance-code-modularity-and-reusability-with-temporary-views-in-pyspark"]], "Enhance Code Readability with Python Dataclasses and Match Statements": [[13, "enhance-code-readability-with-python-dataclasses-and-match-statements"]], "Enhance Code Readability with Single Point of Return": [[5, "enhance-code-readability-with-single-point-of-return"]], "Enhance Number Readability with f-Strings and Comma Formatting": [[15, "enhance-number-readability-with-f-strings-and-comma-formatting"], [36, "enhance-number-readability-with-f-strings-and-comma-formatting"]], "Enhancing Data Handling with scikit-learn\u2019s DataFrame Support": [[47, "enhancing-data-handling-with-scikit-learn-s-dataframe-support"]], "Enhancing Readability in DataFrame Merging With Custom Suffixes": [[29, "enhancing-readability-in-dataframe-merging-with-custom-suffixes"]], "Ensure Data Integrity with Getters and Setters in Python": [[1, "ensure-data-integrity-with-getters-and-setters-in-python"]], "Enumerate: Get Counter and Value While Looping": [[6, "enumerate-get-counter-and-value-while-looping"]], "Environment Management": [[66, null]], "Equations": [[25, "equations"]], "Estimate Prediction Intervals in Scikit-Learn Models with MAPIE": [[51, "estimate-prediction-intervals-in-scikit-learn-models-with-mapie"]], "Evidently: Detect and Visualize Data Drift": [[60, "evidently-detect-and-visualize-data-drift"]], "Execute a Fixture Only Once per Session": [[38, "execute-a-fixture-only-once-per-session"], [58, "execute-a-fixture-only-once-per-session"]], "Execute a Function n Times": [[24, "execute-a-function-n-times"]], "Expand, Factor, and Simplify": [[25, "expand-factor-and-simplify"]], "Expanding English Contractions in Text": [[53, "expanding-english-contractions-in-text"]], "Extended Iterable Unpacking: Ignore Multiple Values when Unpacking a Python Iterable": [[11, "extended-iterable-unpacking-ignore-multiple-values-when-unpacking-a-python-iterable"]], "Extract Dates from Text with Datefinder": [[59, "extract-dates-from-text-with-datefinder"]], "Extract PDF Text Precisely with PyPDF": [[48, "extract-pdf-text-precisely-with-pypdf"]], "Extract holiday from date column": [[59, "extract-holiday-from-date-column"]], "Fastai\u2019s add_datepart: Add Relevant DateTime Features in One Line of Code": [[59, "fastai-s-add-datepart-add-relevant-datetime-features-in-one-line-of-code"]], "Fastai\u2019s df_shrink: Shrink DataFrame\u2019s Memory Usage in One Line of Code": [[57, "fastai-s-df-shrink-shrink-dataframe-s-memory-usage-in-one-line-of-code"]], "Faster Data Analysis with Polars: A Guide to Lazy Execution": [[54, "faster-data-analysis-with-polars-a-guide-to-lazy-execution"]], "Feature Engineer": [[47, null]], "Feature Extraction": [[48, null]], "Filter Rows or Columns": [[33, null]], "Filter a pandas DataFrame Based on Index\u2019s Name": [[33, "filter-a-pandas-dataframe-based-on-index-s-name"]], "Find Item Index Using a Function": [[24, "find-item-index-using-a-function"]], "Find Objects With Matching Style": [[24, "find-objects-with-matching-style"]], "Fine-Grained Traceback in Python 3.11": [[13, "fine-grained-traceback-in-python-3-11"]], "Fix Unnamed:0 When Reading a CSV in pandas": [[30, "fix-unnamed-0-when-reading-a-csv-in-pandas"]], "Flicking: Safe Model Deserialization in Python": [[62, "flicking-safe-model-deserialization-in-python"]], "Fluke: The Easiest Way to Move Data Around": [[52, "fluke-the-easiest-way-to-move-data-around"]], "Format Dates in Python f-Strings": [[15, "format-dates-in-python-f-strings"], [36, "format-dates-in-python-f-strings"]], "Format the Text Display Value of Cells": [[37, "format-the-text-display-value-of-cells"]], "Formulaic: Write Clear Feature Engineering Code": [[48, "formulaic-write-clear-feature-engineering-code"]], "Forward Fill in pandas: Use the Previous Value to Fill the Current Missing Value": [[28, "forward-fill-in-pandas-use-the-previous-value-to-fill-the-current-missing-value"]], "FreezeGun: Freezing Time for Reliable Python Testing": [[38, "freezegun-freezing-time-for-reliable-python-testing"], [58, "freezegun-freezing-time-for-reliable-python-testing"]], "From Complex SQL to Simple Merges: Delta Lake\u2019s Upsert Solution": [[45, "from-complex-sql-to-simple-merges-delta-lake-s-upsert-solution"]], "From Python to Paper: Visualizing Calculations with Handcalcs": [[64, "from-python-to-paper-visualizing-calculations-with-handcalcs"]], "From Selenium to Helium: Writing Cleaner Browser Automation Code": [[69, "from-selenium-to-helium-writing-cleaner-browser-automation-code"]], "FugueSQL: Use SQL to Work with Pandas, Spark, and Dask DataFrames": [[43, "fuguesql-use-sql-to-work-with-pandas-spark-and-dask-dataframes"]], "Function": [[5, null]], "FunctionTransformer: Build Robust Preprocessing Pipelines with Custom Transformations": [[47, "functiontransformer-build-robust-preprocessing-pipelines-with-custom-transformations"]], "Functools": [[19, null]], "GLiNER: The Lightweight Alternative to LLMs for Custom NER": [[53, "gliner-the-lightweight-alternative-to-llms-for-custom-ner"]], "Galatic: Clean and Analyze Massive Text Datasets": [[53, "galatic-clean-and-analyze-massive-text-datasets"]], "Generate a Tree View with rich": [[64, "generate-a-tree-view-with-rich"]], "Generating Synthetic Tabular Data with TabGAN": [[49, "generating-synthetic-tabular-data-with-tabgan"]], "Generative Pre-trained Forecasting with TimeGPT": [[59, "generative-pre-trained-forecasting-with-timegpt"]], "Geopy: Extract Location Based on Python String": [[48, "geopy-extract-location-based-on-python-string"]], "Get Access to Files from Home Directory": [[22, "get-access-to-files-from-home-directory"]], "Get Certain Values From a DataFrame": [[34, null]], "Get Count and Percentage of a Value in a Column": [[34, "get-count-and-percentage-of-a-value-in-a-column"]], "Get Data": [[49, null]], "Get Elements": [[8, null]], "Get Google News Using Python": [[49, "get-google-news-using-python"]], "Get Multiples of a Number Using Modulus": [[12, "get-multiples-of-a-number-using-modulus"]], "Get Nested Dictionary\u2019s Attribute": [[24, "get-nested-dictionarys-attribute"]], "Get Nested Object Value": [[24, "get-nested-object-value"]], "Get Rows within a Year Range": [[32, "get-rows-within-a-year-range"]], "Get the Index of the Max Value in a NumPy Array": [[41, "get-the-index-of-the-max-value-in-a-numpy-array"]], "Get the N Largest Values for Each Category in a DataFrame": [[39, "get-the-n-largest-values-for-each-category-in-a-dataframe"]], "Get the Parent of the Current Path with pathlib": [[22, "get-the-parent-of-the-current-path-with-pathlib"]], "Get the Path Relative to Another Path": [[22, "get-the-path-relative-to-another-path"]], "Get the Sum of All Columns in a pandas DataFrame": [[34, "get-the-sum-of-all-columns-in-a-pandas-dataframe"]], "Git and GitHub": [[67, null]], "GitHub CLI: Brings GitHub to Your Terminal": [[67, "github-cli-brings-github-to-your-terminal"]], "GluonTS: Probabilistic Time Series Modeling in Python": [[59, "gluonts-probabilistic-time-series-modeling-in-python"]], "Good Python Practices": [[6, null]], "Graphviz: Create a Flowchart to Capture Your Ideas in Python": [[60, "graphviz-create-a-flowchart-to-capture-your-ideas-in-python"]], "Great Tables: Create Scientific-Looking Tables in Python": [[64, "great-tables-create-scientific-looking-tables-in-python"]], "Group DataFrame\u2019s Rows into a List Using groupby": [[39, "group-dataframe-s-rows-into-a-list-using-groupby"]], "Handling Static and Dynamic Features in Time Series Forecasting with MLForecast": [[59, "handling-static-and-dynamic-features-in-time-series-forecasting-with-mlforecast"]], "Harness Polars and Delta Lake for Blazing Fast Performance": [[54, "harness-polars-and-delta-lake-for-blazing-fast-performance"]], "HiPlot - High Dimensional Interactive Plotting": [[60, "hiplot-high-dimensional-interactive-plotting"]], "Hierarchical Forecasting in Python": [[59, "hierarchical-forecasting-in-python"]], "Highlight Your pandas DataFrame for Easier Analysis": [[37, "highlight-your-pandas-dataframe-for-easier-analysis"]], "How to Build a Recommendation Engine Using Surprise in Python": [[51, "how-to-build-a-recommendation-engine-using-surprise-in-python"]], "How to Handle Misspellings in Real-World Datasets": [[47, "how-to-handle-misspellings-in-real-world-datasets"]], "How to Pass an Arbitrary Number of Arguments to a Python Function": [[5, "how-to-pass-an-arbitrary-number-of-arguments-to-a-python-function"]], "How to Read This Book": [[73, null]], "How to Strip Outputs and Execute Interactive Code in a Python Script": [[64, "how-to-strip-outputs-and-execute-interactive-code-in-a-python-script"]], "Hyperfine: Compare the Speed of Two Commands": [[68, "hyperfine-compare-the-speed-of-two-commands"]], "Icecream: Never use print() to debug again": [[68, "icecream-never-use-print-to-debug-again"]], "Improve Code Readability with Enums": [[1, "improve-code-readability-with-enums"]], "Include All Rows When Merging Two DataFrames": [[29, "include-all-rows-when-merging-two-dataframes"]], "Inheritance in Python": [[1, "inheritance-in-python"]], "Instance Comparison in Python Classes": [[1, "instance-comparison-in-python-classes"]], "Iterable as a Key of a Dictionary": [[4, "iterable-as-a-key-of-a-dictionary"]], "Itertools": [[20, null]], "ItsDangerous: Safely Pass Trusted Data to Untrusted Environments and Back": [[55, "itsdangerous-safely-pass-trusted-data-to-untrusted-environments-and-back"]], "Join Iterables": [[9, null]], "Jupyter Notebook": [[70, null], [71, null]], "Key Parameter in Max(): Find the Key with the Largest Value": [[4, "key-parameter-in-max-find-the-key-with-the-largest-value"]], "Keyword-Only Arguments in Python": [[5, "keyword-only-arguments-in-python"]], "Lambda vs Named Functions: When to Use Each": [[5, "lambda-vs-named-functions-when-to-use-each"]], "Large Language Model (LLM)": [[50, null]], "Leverage PyArrow for Efficient Parquet Data Filtering": [[30, "leverage-pyarrow-for-efficient-parquet-data-filtering"]], "Leverage Spark UDFs for Reusable Complex Logic in SQL Queries": [[56, "leverage-spark-udfs-for-reusable-complex-logic-in-sql-queries"]], "Logging and Debugging": [[68, null]], "Logging in Pandas Pipelines": [[68, "logging-in-pandas-pipelines"]], "LovelyPlots: Create Nice Matplotlib Figures for Presentations": [[60, "lovelyplots-create-nice-matplotlib-figures-for-presentations"]], "Lux: A Python API for Intelligent Visual Discovery": [[60, "lux-a-python-api-for-intelligent-visual-discovery"]], "MLEM: Capture Your Machine Learning Model\u2019s Metadata": [[51, "mlem-capture-your-machine-learning-model-s-metadata"]], "Machine Learning": [[51, null]], "Magika: Detect File Content Types with Deep Learning": [[69, "magika-detect-file-content-types-with-deep-learning"]], "Maintain the Accuracy of Docstring Examples with Doctest": [[38, "maintain-the-accuracy-of-docstring-examples-with-doctest"], [58, "maintain-the-accuracy-of-docstring-examples-with-doctest"]], "Makefile: Organize Your Command Line": [[69, "makefile-organize-your-command-line"]], "Manage Data": [[52, null]], "ManimML: Create Animations of Common ML Concepts in Python": [[64, "manimml-create-animations-of-common-ml-concepts-in-python"]], "Manipulate a DataFrame Using Data Types": [[31, null]], "Mastering Set Operations in Python: Union and Intersection": [[14, "mastering-set-operations-in-python-union-and-intersection"]], "Maximize Accuracy and Relevance with External Data and LLMs": [[50, "maximize-accuracy-and-relevance-with-external-data-and-llms"]], "Maya: Convert the string to datetime automatically": [[59, "maya-convert-the-string-to-datetime-automatically"]], "Merge Two Dictionaries Using the Union Operator in Python 3.9": [[4, "merge-two-dictionaries-using-the-union-operator-in-python-3-9"]], "Mermaid: Create Class Diagrams for Your Python Classes Using Text and Code": [[60, "mermaid-create-class-diagrams-for-your-python-classes-using-text-and-code"]], "Mermaid: Create Flow Chart Using Code": [[60, "mermaid-create-flow-chart-using-code"]], "Minimize Data Risks with Python Private Variables": [[1, "minimize-data-risks-with-python-private-variables"]], "Mirascope: Extract Structured Data Extraction From LLM Outputs": [[50, "mirascope-extract-structured-data-extraction-from-llm-outputs"]], "Mlxtend: Plot Decision Regions of Your ML Classifiers": [[51, "mlxtend-plot-decision-regions-of-your-ml-classifiers"]], "Model Logging Made Easy: MLflow vs. Pickle": [[51, "model-logging-made-easy-mlflow-vs-pickle"]], "MonkeyType: Automatically Generate Static Type Annotations Based on Runtime Types": [[69, "monkeytype-automatically-generate-static-type-annotations-based-on-runtime-types"]], "Motivation": [[25, "motivation"]], "Multiline Strings": [[15, "multiline-strings"], [36, "multiline-strings"]], "Multiple CSV Files Processing with DuckDB": [[43, "multiple-csv-files-processing-with-duckdb"], [46, "multiple-csv-files-processing-with-duckdb"]], "Name Complex Conditions to Make Your Code More Readable": [[6, "name-complex-conditions-to-make-your-code-more-readable"]], "Natural Language Processing": [[53, null]], "NeuralForecast: Streamline Neural Forecasting with Familiar Sklearn Syntax": [[59, "neuralforecast-streamline-neural-forecasting-with-familiar-sklearn-syntax"]], "Never Catch All Exceptions": [[6, "never-catch-all-exceptions"]], "New Features in Python": [[13, null]], "Num2Words: Convert Number to Words": [[53, "num2words-convert-number-to-words"]], "NumPy": [[40, null], [41, null]], "NumPy Comparison Operators": [[41, "numpy-comparison-operators"]], "NumPy.linspace: Get Evenly Spaced Numbers Over a Specific Interval": [[41, "numpy-linspace-get-evenly-spaced-numbers-over-a-specific-interval"]], "NumPy.take: Take Elements From an Array": [[41, "numpy-take-take-elements-from-an-array"]], "NumPy.testing.assert_almost_equal: Check if Two Arrays Are Equal up to a Certain Precision": [[41, "numpy-testing-assert-almost-equal-check-if-two-arrays-are-equal-up-to-a-certain-precision"]], "Number": [[12, null]], "Numerizer: Standardizing Numerical Data in Text": [[53, "numerizer-standardizing-numerical-data-in-text"]], "Omit Dictionary\u2019s Attribute": [[24, "omit-dictionarys-attribute"]], "Omit Else Clauses in a Python Function to Improve Code Readability": [[5, "omit-else-clauses-in-a-python-function-to-improve-code-readability"]], "Open a Website Using Python": [[69, "open-a-website-using-python"]], "Operator": [[21, null]], "Optimize Multiple DataFrame Computations with Polars collect_all": [[54, "optimize-multiple-dataframe-computations-with-polars-collect-all"]], "Optimize Query Speed with Data Partitioning": [[45, "optimize-query-speed-with-data-partitioning"]], "Optimize Your Pandas Code with Vectorized Operations": [[28, "optimize-your-pandas-code-with-vectorized-operations"]], "Optimizing Memory Usage in Python with Slots": [[1, "optimizing-memory-usage-in-python-with-slots"]], "Optimizing Memory Usage in a pandas DataFrame with infer_objects": [[31, "optimizing-memory-usage-in-a-pandas-dataframe-with-infer-objects"]], "Optimizing PySpark Queries with Nested Data Structures": [[56, "optimizing-pyspark-queries-with-nested-data-structures"]], "Optimizing PySpark Queries: DataFrame API or SQL?": [[56, "optimizing-pyspark-queries-dataframe-api-or-sql"]], "OrderedDict: Create an Ordered Python Dictionary": [[17, "ordereddict-create-an-ordered-python-dictionary"]], "Organize and Control Test Execution using pytest.mark": [[38, "organize-and-control-test-execution-using-pytest-mark"], [58, "organize-and-control-test-execution-using-pytest-mark"]], "Outlines: Ensuring Consistent Outputs from Language Models": [[50, "outlines-ensuring-consistent-outputs-from-language-models"]], "Overwrite Partitions of a pandas DataFrame": [[45, "overwrite-partitions-of-a-pandas-dataframe"]], "PRegEx: Write Human-Readable Regular Expressions": [[62, "pregex-write-human-readable-regular-expressions"]], "Pad a String With Zero Using f-String": [[15, "pad-a-string-with-zero-using-f-string"], [36, "pad-a-string-with-zero-using-f-string"]], "Pandas": [[27, null]], "Pandas vs Polars: Harnessing Parallelism for Faster Data Processing": [[54, "pandas-vs-polars-harnessing-parallelism-for-faster-data-processing"]], "Pandas vs Polars: Syntax Comparison for Data Scientists": [[54, "pandas-vs-polars-syntax-comparison-for-data-scientists"]], "Pandas-Friendly Big Data Processing with Spark": [[56, "pandas-friendly-big-data-processing-with-spark"]], "Pandas.Series.isin: Filter Rows Only If Column Contains Values From Another List": [[33, "pandas-series-isin-filter-rows-only-if-column-contains-values-from-another-list"]], "PandasAI: Gain Insights From Your pandas DataFrame With AI": [[44, "pandasai-gain-insights-from-your-pandas-dataframe-with-ai"]], "Pandera: a Python Library to Validate Your Pandas DataFrame": [[38, "pandera-a-python-library-to-validate-your-pandas-dataframe"], [58, "pandera-a-python-library-to-validate-your-pandas-dataframe"]], "Parsera: Natural Language Web Scraping with LLMs": [[49, "parsera-natural-language-web-scraping-with-llms"]], "Pendulum: Python Datetimes Made Easy": [[59, "pendulum-python-datetimes-made-easy"]], "Perform Floor Division with Double Forward Slash": [[12, "perform-floor-division-with-double-forward-slash"]], "Pigeon: Quickly Annotate Your Data on Jupyter Notebook": [[48, "pigeon-quickly-annotate-your-data-on-jupyter-notebook"]], "Pipe: A Elegant Alternative to Nested map and filter Calls in Python": [[62, "pipe-a-elegant-alternative-to-nested-map-and-filter-calls-in-python"]], "Pipeline + GridSearchCV: Prevent Data Leakage when Scaling the Data": [[51, "pipeline-gridsearchcv-prevent-data-leakage-when-scaling-the-data"]], "Planting a Value": [[24, "planting-a-value"]], "Pmdarima: Harness R\u2019s auto.arima Power with a scikit-learn-Like Interface": [[59, "pmdarima-harness-r-s-auto-arima-power-with-a-scikit-learn-like-interface"]], "Poetry: Python Tool for Dependency Management and Packaging": [[66, "poetry-python-tool-for-dependency-management-and-packaging"]], "Polars": [[54, null]], "Polars vs. Pandas for CSV Loading and Filtering": [[54, "polars-vs-pandas-for-csv-loading-and-filtering"]], "Polars: Blazing Fast DataFrame Library": [[54, "polars-blazing-fast-dataframe-library"]], "Polars: Speed Up Data Processing 12x with Lazy Execution": [[54, "polars-speed-up-data-processing-12x-with-lazy-execution"]], "Polars\u2019 Streaming Mode: A Solution for Large Data Sets": [[54, "polars-streaming-mode-a-solution-for-large-data-sets"]], "Post-init: Add Init Method to a Data Class": [[18, "post-init-add-init-method-to-a-data-class"]], "PostgresML: Integrate Machine Learning with PostgreSQL": [[43, "postgresml-integrate-machine-learning-with-postgresql"]], "Preparing the Data": [[59, "preparing-the-data"]], "Preprocess Text in One Line of Code with Texthero": [[53, "preprocess-text-in-one-line-of-code-with-texthero"]], "Print Latex": [[25, "print-latex"]], "Print a DataFrame in Latex Format": [[37, "print-a-dataframe-in-latex-format"]], "Printable PDF Guide": [[72, "printable-pdf-guide"]], "Pull One File from Another Branch Using Git": [[67, "pull-one-file-from-another-branch-using-git"]], "PyInstaller: Bundle a Python Application Into a Single Executable": [[66, "pyinstaller-bundle-a-python-application-into-a-single-executable"]], "PyOD: Simplifying Outlier Detection in Python": [[51, "pyod-simplifying-outlier-detection-in-python"]], "PySpark": [[56, null]], "PySpark Best Practices: Simplifying Logical Chain Conditions": [[56, "pyspark-best-practices-simplifying-logical-chain-conditions"]], "PySpark DataFrame Transformations: select vs withColumn": [[56, "pyspark-dataframe-transformations-select-vs-withcolumn"]], "PyTube: A Lightweight Python Library for Downloading YouTube Videos": [[69, "pytube-a-lightweight-python-library-for-downloading-youtube-videos"]], "Pydantic": [[23, null]], "Pydantic: Enforce Data Types on Your Function Parameters at Runtime": [[65, "pydantic-enforce-data-types-on-your-function-parameters-at-runtime"]], "Pydash": [[24, null]], "Pydash\u2019s Methods": [[24, "pydashs-methods"]], "Pyfiglet: Make Large and Unique Letters Out of Ordinary Text in Python": [[64, "pyfiglet-make-large-and-unique-letters-out-of-ordinary-text-in-python"]], "Pytest Fixtures: Use The Same Data for Different Tests": [[38, "pytest-fixtures-use-the-same-data-for-different-tests"], [58, "pytest-fixtures-use-the-same-data-for-different-tests"]], "Pytest repeat": [[38, "pytest-repeat"], [58, "pytest-repeat"]], "Pytest skipif: Skip a Test When a Condition is Not Met": [[38, "pytest-skipif-skip-a-test-when-a-condition-is-not-met"], [58, "pytest-skipif-skip-a-test-when-a-condition-is-not-met"]], "Pytest xfail: Mark a Test as Expected to Fail": [[38, "pytest-xfail-mark-a-test-as-expected-to-fail"], [58, "pytest-xfail-mark-a-test-as-expected-to-fail"]], "Python 3.10\u2019s strict=True: Preventing Data Loss in zip Operations": [[9, "python-3-10-s-strict-true-preventing-data-loss-in-zip-operations"]], "Python Best Practices: Using default_factory for Mutable Defaults": [[18, "python-best-practices-using-default-factory-for-mutable-defaults"]], "Python Built-in Methods": [[0, null]], "Python Code Quality Optimization with Ruff": [[65, "python-code-quality-optimization-with-ruff"]], "Python Data Models: Pydantic or attrs?": [[23, "python-data-models-pydantic-or-attrs"]], "Python Fire: Generate a CLI for Any Python Objects in Two Lines of Code": [[64, "python-fire-generate-a-cli-for-any-python-objects-in-two-lines-of-code"]], "Python List Operations": [[10, null]], "Python Pass Statement": [[6, "python-pass-statement"]], "Python Set Manipulation: Adding, Removing, and Checking Subsets": [[14, "python-set-manipulation-adding-removing-and-checking-subsets"]], "Python Utility Libraries": [[16, null]], "Python\u2019s dropwhile: A Clean Approach to Sequential Filtering": [[20, "python-s-dropwhile-a-clean-approach-to-sequential-filtering"]], "QuantStats: Simplify Stock Performance Analysis in Python": [[59, "quantstats-simplify-stock-performance-analysis-in-python"]], "Query Nested Parquet Files Easily Using DuckDB": [[46, "query-nested-parquet-files-easily-using-duckdb"]], "Questgen.ai: Question Generator in Python": [[53, "questgen-ai-question-generator-in-python"]], "Raise an Exception for a Chained Assignment in pandas": [[28, "raise-an-exception-for-a-chained-assignment-in-pandas"]], "Random User: Generate Random User Data in One Line of Code": [[49, "random-user-generate-random-user-data-in-one-line-of-code"]], "Rapid Prototyping and Comparison of Basic Models with Lazy Predict": [[51, "rapid-prototyping-and-comparison-of-basic-models-with-lazy-predict"]], "Read Data from a Website": [[30, "read-data-from-a-website"]], "Read HTML Tables Using Pandas": [[30, "read-html-tables-using-pandas"]], "Recipe-Scrapers: Automate Recipe Data Extraction": [[49, "recipe-scrapers-automate-recipe-data-extraction"]], "Refurb: Refurbish and Modernize Python Codebases": [[65, "refurb-refurbish-and-modernize-python-codebases"]], "Replace the Missing Values with the Most Frequent Categories in a Column": [[28, "replace-the-missing-values-with-the-most-frequent-categories-in-a-column"]], "Reuse The Notebook to Run The Same Code Across Different Data": [[71, "reuse-the-notebook-to-run-the-same-code-across-different-data"]], "Reverse a Dictionary with Dictionary Comprehension": [[4, "reverse-a-dictionary-with-dictionary-comprehension"]], "Rich\u2019s Console: Debug your Python Function in One Line of Code": [[68, "richs-console-debug-your-python-function-in-one-line-of-code"]], "Rocketry: Modern Scheduling Library for Python": [[69, "rocketry-modern-scheduling-library-for-python"]], "Ruptures: Detecting Change Points in Non-Stationary Signals": [[59, "ruptures-detecting-change-points-in-non-stationary-signals"]], "SQL Analytics with DuckDB": [[43, "sql-analytics-with-duckdb"], [46, "sql-analytics-with-duckdb"]], "SQL Libraries": [[43, null]], "SQLFluff: A Linter and Auto-Formatter for Your SQL Code": [[43, "sqlfluff-a-linter-and-auto-formatter-for-your-sql-code"]], "SQLGlot: Write Once, Run Anywhere SQL": [[43, "sqlglot-write-once-run-anywhere-sql"]], "SQLModel: Simplify SQL Database Interactions in Python": [[43, "sqlmodel-simplify-sql-database-interactions-in-python"]], "SQliteDict: Reducing SQLite Complexity with Dictionary-Style Operations": [[43, "sqlitedict-reducing-sqlite-complexity-with-dictionary-style-operations"]], "Safe Data Deletion with delta-rs": [[45, "safe-data-deletion-with-delta-rs"]], "Safe Unit Conversions in Python Using Pint": [[62, "safe-unit-conversions-in-python-using-pint"]], "Save Disk Space on Large Datasets with Parquet": [[2, "save-disk-space-on-large-datasets-with-parquet"]], "Say Goodbye to Data Type Conversion in pandas 2.0": [[31, "say-goodbye-to-data-type-conversion-in-pandas-2-0"]], "Scaling Time-Series Forecasting with StatsForecast and Spark": [[59, "scaling-time-series-forecasting-with-statsforecast-and-spark"]], "Schedule: Schedule your Python Functions to Run At a Specific Time": [[69, "schedule-schedule-your-python-functions-to-run-at-a-specific-time"]], "Scikit-LLM: Supercharge Text Analysis with ChatGPT and scikit-learn Integration": [[51, "scikit-llm-supercharge-text-analysis-with-chatgpt-and-scikit-learn-integration"]], "Scrape Facebook Public Pages Without an API Key": [[49, "scrape-facebook-public-pages-without-an-api-key"]], "Select DataFrame Rows Before or After a Specific Date": [[32, "select-dataframe-rows-before-or-after-a-specific-date"]], "Set": [[14, null]], "Sharing and Downloading": [[55, null]], "Shift the Index of a DataFrame by a Specific Number of Periods": [[32, "shift-the-index-of-a-dataframe-by-a-specific-number-of-periods"]], "Silly: Produce Silly Test Data": [[49, "silly-produce-silly-test-data"]], "Similarity Encoding for Dirty Categories Using dirty_cat": [[47, "similarity-encoding-for-dirty-categories-using-dirty-cat"]], "Simple and Expressive Data Transformation with Polars": [[54, "simple-and-expressive-data-transformation-with-polars"]], "Simplified Datetime Logging with Loguru": [[68, "simplified-datetime-logging-with-loguru"]], "Simplify CSV Data Management with DuckDB": [[43, "simplify-csv-data-management-with-duckdb"], [46, "simplify-csv-data-management-with-duckdb"]], "Simplify Complex SQL Queries with PySpark UDFs": [[56, "simplify-complex-sql-queries-with-pyspark-udfs"]], "Simplify Conditional Execution with Match Statements": [[13, "simplify-conditional-execution-with-match-statements"]], "Simplify Custom Object Operations with Python Magic Methods": [[1, "simplify-custom-object-operations-with-python-magic-methods"]], "Simplify Data Validation with Pydantic": [[23, "simplify-data-validation-with-pydantic"]], "Simplify DataFrame Operations Using selectExpr in PySpark": [[56, "simplify-dataframe-operations-using-selectexpr-in-pyspark"]], "Simplify LLM Integration with Magentic\u2019s @prompt Decorator": [[50, "simplify-llm-integration-with-magentic-s-prompt-decorator"]], "Simplify List Condition Evaluation with any and List Comprehensions": [[7, "simplify-list-condition-evaluation-with-any-and-list-comprehensions"]], "Simplify Mocking External Services with pytest-mock": [[58, "simplify-mocking-external-services-with-pytest-mock"]], "Simplify Nested Structures with Python Data Classes": [[18, "simplify-nested-structures-with-python-data-classes"]], "Simplify Null Checks in Python with the Maybe Container": [[62, "simplify-null-checks-in-python-with-the-maybe-container"]], "Simplify Pattern Matching and Transformation in Python with Pampy": [[62, "simplify-pattern-matching-and-transformation-in-python-with-pampy"]], "Simplify Python Logging with Loguru": [[68, "simplify-python-logging-with-loguru"]], "Simplify Table Merge Operations with Delta Lake": [[45, "simplify-table-merge-operations-with-delta-lake"]], "Simplify Tabular Dataset Preparation with TabularPandas": [[47, "simplify-tabular-dataset-preparation-with-tabularpandas"]], "Simplify Unit Testing of SQL Queries with PySpark": [[56, "simplify-unit-testing-of-sql-queries-with-pyspark"]], "Simplifying Geographic Calculations with GeoPandas": [[44, "simplifying-geographic-calculations-with-geopandas"]], "Simplifying GitHub API Interactions with githubkit": [[67, "simplifying-github-api-interactions-with-githubkit"]], "Simplifying ML Model Integration with FastAPI": [[51, "simplifying-ml-model-integration-with-fastapi"]], "Simplifying Repetitive Function Calls with partial in Python": [[19, "simplifying-repetitive-function-calls-with-partial-in-python"]], "Simulate External Services in Testing with Mock Objects": [[38, "simulate-external-services-in-testing-with-mock-objects"]], "SkillNER: Automating Skill Extraction in Python": [[53, "skillner-automating-skill-extraction-in-python"]], "Sliding Window Approach to Time Series Cross-Validation": [[59, "sliding-window-approach-to-time-series-cross-validation"]], "Smart Data Type Selection for Memory-Efficient Pandas": [[31, "smart-data-type-selection-for-memory-efficient-pandas"]], "Snorkel \u2014 Programmatically Build Training Data in Python": [[47, "snorkel-programmatically-build-training-data-in-python"]], "Solve an Equation": [[25, "solve-an-equation"]], "Solving Data Mismatches: Joining Tables with Fuzzy Matching": [[47, "solving-data-mismatches-joining-tables-with-fuzzy-matching"]], "Sort Rows or Columns of a DataFrame": [[35, null]], "Spacy_streamlit: Create a Web App to Visualize Your Text in 3 Lines of Code": [[53, "spacy-streamlit-create-a-web-app-to-visualize-your-text-in-3-lines-of-code"]], "Spark DataFrame: Avoid Out-of-Memory Errors with Lazy Evaluation": [[56, "spark-dataframe-avoid-out-of-memory-errors-with-lazy-evaluation"]], "Special Functions": [[25, "special-functions"]], "Specify Datetime Columns with parse_dates": [[30, "specify-datetime-columns-with-parse-dates"]], "Split Data in a Stratified Fashion in scikit-learn": [[47, "split-data-in-a-stratified-fashion-in-scikit-learn"]], "Split a String by Multiple Characters": [[15, "split-a-string-by-multiple-characters"], [36, "split-a-string-by-multiple-characters"]], "Split a String into Multiple Rows": [[28, "split-a-string-into-multiple-rows"]], "Stack Columns into Rows in Pandas": [[39, "stack-columns-into-rows-in-pandas"]], "Static method: use the function without adding the attributes required for a new instance": [[1, "static-method-use-the-function-without-adding-the-attributes-required-for-a-new-instance"]], "Stop Flaky Float Tests with pytest.approx()": [[38, "stop-flaky-float-tests-with-pytest-approx"], [58, "stop-flaky-float-tests-with-pytest-approx"]], "Stop Using + to Concatenate Strings. Use Join Instead": [[6, "stop-using-to-concatenate-strings-use-join-instead"]], "Stop Writing Nested if-else: Use Python\u2019s .get() Instead": [[4, "stop-writing-nested-if-else-use-python-s-get-instead"]], "Stop using = operator to create a copy of a Python list. Use copy method instead": [[6, "stop-using-operator-to-create-a-copy-of-a-python-list-use-copy-method-instead"]], "Store Sensitive Information Securely in Python with .env Files": [[63, "store-sensitive-information-securely-in-python-with-env-files"]], "String": [[15, null], [36, null]], "String find: Find The Index of a Substring in a Python String": [[15, "string-find-find-the-index-of-a-substring-in-a-python-string"], [36, "string-find-find-the-index-of-a-substring-in-a-python-string"]], "Structural Pattern Matching in Python 3.10": [[13, "structural-pattern-matching-in-python-3-10"]], "Style a DataFrame": [[37, null]], "Substitution": [[25, "substitution"]], "Swifter: Add One Word to Make Your Pandas Apply 23 Times Faster": [[57, "swifter-add-one-word-to-make-your-pandas-apply-23-times-faster"]], "SymPy": [[25, null]], "Symbols": [[25, "symbols"]], "Tempo: Simplified Time Series Analysis in PySpark": [[56, "tempo-simplified-time-series-analysis-in-pyspark"]], "Test for Specific Exceptions in Unit Testing": [[38, "test-for-specific-exceptions-in-unit-testing"], [58, "test-for-specific-exceptions-in-unit-testing"]], "Testing": [[38, null], [58, null]], "TextBlob: Processing Text in One Line of Code": [[53, "textblob-processing-text-in-one-line-of-code"]], "The Best Way to Append Mismatched Data to Parquet Tables": [[45, "the-best-way-to-append-mismatched-data-to-parquet-tables"]], "Time Series": [[59, null]], "TimeSeriesSplit for Cross-Validation in Time Series": [[47, "timeseriessplit-for-cross-validation-in-time-series"]], "Timeline View of the Execution of Your Python Functions": [[68, "timeline-view-of-the-execution-of-your-python-functions"]], "Tools for Best Python Practices": [[63, null]], "Tools to Speed Up Code": [[57, null]], "Top2Vec: Quick Topic Modeling in Python": [[53, "top2vec-quick-topic-modeling-in-python"]], "Topics Covered": [[10, "topics-covered"]], "Transform Single Inputs into Tables Using PySpark UDTFs": [[56, "transform-single-inputs-into-tables-using-pyspark-udtfs"]], "Transform a DataFrame": [[39, null]], "Trigonometric": [[25, "trigonometric"]], "Turn a pandas Series into a NumPy Array": [[34, "turn-a-pandas-series-into-a-numpy-array"]], "Turn a pandas Series into a pandas DataFrame": [[39, "turn-a-pandas-series-into-a-pandas-dataframe"]], "Typer: Build a Command-Line Interface in a Few Lines of Code": [[64, "typer-build-a-command-line-interface-in-a-few-lines-of-code"]], "Typing": [[26, null]], "UMAP: Dimension Reduction in Python": [[60, "umap-dimension-reduction-in-python"]], "Underscore \u201c_\u201d: Ignore The Index in Python For Loops": [[6, "underscore-ignore-the-index-in-python-for-loops"]], "Underscore(_): Ignore Values That Will Not Be Used": [[6, "underscore-ignore-values-that-will-not-be-used"]], "Unpack Iterables": [[11, null]], "Unzip a List of Iterables": [[9, "unzip-a-list-of-iterables"]], "Update Multiple Columns in Spark 3.3 and Later": [[56, "update-multiple-columns-in-spark-3-3-and-later"]], "Update a Dictionary With Items From Another Dictionary": [[4, "update-a-dictionary-with-items-from-another-dictionary"]], "Use Calculations in Python f-String": [[15, "use-calculations-in-python-f-string"], [36, "use-calculations-in-python-f-string"]], "Use Comparison and Arithmetic Operators on Dates in Python": [[3, "use-comparison-and-arithmetic-operators-on-dates-in-python"]], "Use Dates in a Month as the Feature": [[3, "use-dates-in-a-month-as-the-feature"]], "Use List to Change the Positions of Rows or Columns in a NumPy Array": [[41, "use-list-to-change-the-positions-of-rows-or-columns-in-a-numpy-array"]], "Use Mixins Over Inheritance for Enhanced Modularity": [[1, "use-mixins-over-inheritance-for-enhanced-modularity"]], "Use Pydantic\u2019s Field Class to Validate Numbers and Dates": [[23, "use-pydantic-s-field-class-to-validate-numbers-and-dates"]], "Use Python Class as a Type Hint": [[26, "use-python-class-as-a-type-hint"]], "Use Seaborn Style on Matplotlib Plots": [[60, "use-seaborn-style-on-matplotlib-plots"]], "Use Underscores to Format Large Numbers in Python": [[12, "use-underscores-to-format-large-numbers-in-python"]], "Using natsort for Intuitive Alphanumeric Sorting in Python": [[62, "using-natsort-for-intuitive-alphanumeric-sorting-in-python"]], "Validating Polars DataFrames with Pandera": [[38, "validating-polars-dataframes-with-pandera"], [58, "validating-polars-dataframes-with-pandera"]], "Validation Curve: Determine if an Estimator Is Underfitting Over Overfitting": [[51, "validation-curve-determine-if-an-estimator-is-underfitting-over-overfitting"]], "Vectorized Operations in PySpark: pandas_udf vs Standard UDF": [[56, "vectorized-operations-in-pyspark-pandas-udf-vs-standard-udf"]], "Verify Logging Error with pytest": [[38, "verify-logging-error-with-pytest"], [58, "verify-logging-error-with-pytest"]], "Version Your Pandas DataFrame with Delta Lake": [[45, "version-your-pandas-dataframe-with-delta-lake"]], "Visualization": [[60, null]], "Visualize Feature Importances with Yellowbrick": [[51, "visualize-feature-importances-with-yellowbrick"]], "Visualize Time Series with plot_series": [[59, "visualize-time-series-with-plot-series"]], "Visualize the Frequency Tokens in a Text Corpora": [[60, "visualize-the-frequency-tokens-in-a-text-corpora"]], "Visualizing Using plot_series": [[59, "visualizing-using-plot-series"]], "Vizro: Create Modular Data Visualization Applications in Python": [[60, "vizro-create-modular-data-visualization-applications-in-python"]], "Vulture: Automatically Find Dead Python Code": [[65, "vulture-automatically-find-dead-python-code"]], "WAT: Your One-Stop Tool for Python Object Exploration": [[68, "wat-your-one-stop-tool-for-python-object-exploration"]], "What Should You Expect From This Book?": [[72, "what-should-you-expect-from-this-book"]], "What is SymPy?": [[25, "what-is-sympy"]], "Why __name__ == \"__main__\" Matters in a Python Script?": [[6, "why-name-main-matters-in-a-python-script"]], "Word Ninja: Slice Your Lumped-Together Words": [[53, "word-ninja-slice-your-lumped-together-words"]], "Work with Datetime": [[32, null]], "Work with Dictionary": [[24, "work-with-dictionary"]], "Work with Functions": [[24, "work-with-functions"]], "Work with List": [[24, "work-with-list"]], "Work with List of Dictionaries": [[24, "work-with-list-of-dictionaries"]], "Workalendar: Handle Working-Day Computation in Python": [[59, "workalendar-handle-working-day-computation-in-python"]], "Workflow Automation": [[69, null]], "Working with Arrays Made Easier in Spark 3.5": [[56, "working-with-arrays-made-easier-in-spark-3-5"]], "Write Clean Error Handling Logic with Else Statements": [[6, "write-clean-error-handling-logic-with-else-statements"]], "Write Cleaner Python with the Walrus Operatorn": [[13, "write-cleaner-python-with-the-walrus-operatorn"]], "Write Meaningful Names": [[6, "write-meaningful-names"]], "Write Union Types as X|Y in Python 3.10": [[13, "write-union-types-as-x-y-in-python-3-10"]], "Write Union Types with X|Y": [[26, "write-union-types-with-x-y"]], "Writing Safer and Cleaner Spark SQL with PySpark\u2019s Parameterized Queries": [[56, "writing-safer-and-cleaner-spark-sql-with-pyspark-s-parameterized-queries"]], "Zip: Associate Elements from Two Iterators based on the Order": [[9, "zip-associate-elements-from-two-iterators-based-on-the-order"]], "__call__: Call your Class Instance like a Function": [[1, "call-call-your-class-instance-like-a-function"]], "__str__ and __repr__: Create a String Representation of a Python Object": [[1, "str-and-repr-create-a-string-representation-of-a-python-object"]], "aeon: The Ultimate Library for Time-Series Forecasting and Classification": [[59, "aeon-the-ultimate-library-for-time-series-forecasting-and-classification"]], "all: Check if All Elements of an Interable Are Strings": [[7, "all-check-if-all-elements-of-an-interable-are-strings"]], "all: Select Rows with All NaN Values": [[33, "all-select-rows-with-all-nan-values"]], "any: Check if Any Element of an Iterable is True": [[7, "any-check-if-any-element-of-an-iterable-is-true"]], "array-to-latex: Turn a NumPy Array into Latex": [[41, "array-to-latex-turn-a-numpy-array-into-latex"]], "collections.Counter: Count The Occurrences of Items in a List": [[17, "collections-counter-count-the-occurrences-of-items-in-a-list"]], "datacompy: Smart Data Comparison Made Simple": [[52, "datacompy-smart-data-comparison-made-simple"]], "datetime + timedelta: Calculate End DateTime Based on Start DateTime and Duration": [[3, "datetime-timedelta-calculate-end-datetime-based-on-start-datetime-and-duration"]], "decorator module: Write Shorter Python Decorators without Nested Functions": [[62, "decorator-module-write-shorter-python-decorators-without-nested-functions"]], "deepcopy: Copy a Nested Object": [[6, "deepcopy-copy-a-nested-object"]], "df.filter: Filter Columns Based on a Subset of Their Names": [[33, "df-filter-filter-columns-based-on-a-subset-of-their-names"]], "df.merge: Merge DataFrame Based on Columns": [[29, "df-merge-merge-dataframe-based-on-columns"]], "df.query: Query Columns Using Boolean Expression": [[33, "df-query-query-columns-using-boolean-expression"]], "df.to_dict: Turn a DataFrame into a Dictionary": [[34, "df-to-dict-turn-a-dataframe-into-a-dictionary"]], "dict.fromkeys: Get a Dictionary From a List and a Value": [[4, "dict-fromkeys-get-a-dictionary-from-a-list-and-a-value"]], "difflib.SequenceMatcher: Detect The \u201cAlmost Similar\u201d Articles": [[15, "difflib-sequencematcher-detect-the-almost-similar-articles"], [36, "difflib-sequencematcher-detect-the-almost-similar-articles"]], "difflib.get_close_matches:  Get a List of the Best Matches for a Certain Word": [[15, "difflib-get-close-matches-get-a-list-of-the-best-matches-for-a-certain-word"], [36, "difflib-get-close-matches-get-a-list-of-the-best-matches-for-a-certain-word"]], "dirty-equals: Write Declarative Assertions in Your Unit Tests": [[38, "dirty-equals-write-declarative-assertions-in-your-unit-tests"], [58, "dirty-equals-write-declarative-assertions-in-your-unit-tests"]], "display in IPython: Display Math Equations in Jupyter Notebook": [[71, "display-in-ipython-display-math-equations-in-jupyter-notebook"]], "distfit: Find The Best Theoretical Distribution For Your Data": [[48, "distfit-find-the-best-theoretical-distribution-for-your-data"]], "docopt: Create Beautiful Command-line Interfaces for Documentation in Python": [[63, "docopt-create-beautiful-command-line-interfaces-for-documentation-in-python"]], "dtreeviz: Visualize and Interpret a Decision Tree Model": [[60, "dtreeviz-visualize-and-interpret-a-decision-tree-model"]], "ekphrasis: Text Processing Tool For Social Media Text": [[53, "ekphrasis-text-processing-tool-for-social-media-text"]], "eradicate: Remove Junk Comments from Python Files": [[65, "eradicate-remove-junk-comments-from-python-files"]], "faker: Create Fake Data in One Line of Code": [[49, "faker-create-fake-data-in-one-line-of-code"]], "fastai\u2019s cont_cat_split: Separate Continuous and Categorical Variables": [[48, "fastais-cont-cat-split-separate-continuous-and-categorical-variables"]], "fetch_openml: Get OpenML\u2019s Dataset in One Line of Code": [[49, "fetch-openml-get-openmls-dataset-in-one-line-of-code"]], "filter: Get the Elements of an Iterable that a Function Evaluates True": [[7, "filter-get-the-elements-of-an-iterable-that-a-function-evaluates-true"]], "folium: Create an Interactive Map in Python": [[60, "folium-create-an-interactive-map-in-python"]], "fractions: Get Numerical Results in Fractions Instead of Decimals": [[12, "fractions-get-numerical-results-in-fractions-instead-of-decimals"]], "frozen=True: Make Your Data Classes Read-Only": [[18, "frozen-true-make-your-data-classes-read-only"]], "fugue: Use pandas Functions on the Spark and Dask Engines.": [[44, "fugue-use-pandas-functions-on-the-spark-and-dask-engines"]], "functools.reduce: Apply Function Cumulatively to the Items of Iterable": [[19, "functools-reduce-apply-function-cumulatively-to-the-items-of-iterable"]], "functools.singledispatch: Call Another Function Based on the Type of the Current Function\u2019s Argument": [[19, "functools-singledispatch-call-another-function-based-on-the-type-of-the-current-functions-argument"]], "gdown: Download a File from Google Drive in Python": [[55, "gdown-download-a-file-from-google-drive-in-python"]], "getattr: a Better Way to Get the Attribute of a Class": [[1, "getattr-a-better-way-to-get-the-attribute-of-a-class"]], "gif: The Easiest Way to Animate Your matplotlib Plot": [[60, "gif-the-easiest-way-to-animate-your-matplotlib-plot"]], "git-open: Open a GitHub Page for a Local Repository": [[67, "git-open-open-a-github-page-for-a-local-repository"]], "github1s: Read GitHub Code with VS Code on your Browser in One Second": [[67, "github1s-read-github-code-with-vs-code-on-your-browser-in-one-second"]], "gpt-commit-summarizer: Automate Pull Request Summarization": [[67, "gpt-commit-summarizer-automate-pull-request-summarization"]], "heapq: Find n Max Values of a Python List": [[8, "heapq-find-n-max-values-of-a-python-list"]], "heartrate \u2014 Visualize the Execution of a Python Program in Real-Time": [[68, "heartrate-visualize-the-execution-of-a-python-program-in-real-time"]], "hvPlot: One API for Multiple Plotting Libraries": [[60, "hvplot-one-api-for-multiple-plotting-libraries"]], "hypothesis: Property-based Testing in Python": [[38, "hypothesis-property-based-testing-in-python"], [58, "hypothesis-property-based-testing-in-python"]], "imbalanced-learn: Deal with an Imbalanced Dataset": [[51, "imbalanced-learn-deal-with-an-imbalanced-dataset"]], "imodels: Simplifying Machine Learning with Interpretable Models": [[51, "imodels-simplifying-machine-learning-with-interpretable-models"]], "inflect: Generate Plurals, Singulars, and Indefinite Articles": [[53, "inflect-generate-plurals-singulars-and-indefinite-articles"]], "interrogate: Check your Python Code for Missing Docstrings": [[65, "interrogate-check-your-python-code-for-missing-docstrings"]], "ipysankeywidget: IPython Sankey Diagram Widget": [[60, "ipysankeywidget-ipython-sankey-diagram-widget"]], "ipyvizzu-story: Create an Interactive Presentation in Your Jupyter Notebook": [[60, "ipyvizzu-story-create-an-interactive-presentation-in-your-jupyter-notebook"]], "ipyvizzu: Add Animation to Your Charts with Ease": [[60, "ipyvizzu-add-animation-to-your-charts-with-ease"]], "isort: Automatically Sort your Python Imports in 1 Line of Code": [[65, "isort-automatically-sort-your-python-imports-in-1-line-of-code"]], "itertools.combinations: A Better Way to Iterate Through a Pair of Values in a Python List": [[20, "itertools-combinations-a-better-way-to-iterate-through-a-pair-of-values-in-a-python-list"]], "itertools.compress: Filter a List Using Booleans": [[20, "itertools-compress-filter-a-list-using-booleans"]], "itertools.groupby: Group Elements in an Iterable by a Key": [[20, "itertools-groupby-group-elements-in-an-iterable-by-a-key"]], "itertools.islice: Efficient Data Processing for Large Data Streams": [[20, "itertools-islice-efficient-data-processing-for-large-data-streams"]], "itertools.product: Nested For-Loops in a Generator Expression": [[20, "itertools-product-nested-for-loops-in-a-generator-expression"]], "itertools.starmap: Apply a Function With More Than 2 Arguments to Elements in a List": [[20, "itertools-starmap-apply-a-function-with-more-than-2-arguments-to-elements-in-a-list"]], "itertools.zip_longest: Zip Iterables of Different Lengths": [[20, "itertools-zip-longest-zip-iterables-of-different-lengths"]], "join method: Turn an Iterable into a Python String": [[9, "join-method-turn-an-iterable-into-a-python-string"]], "kneed: Knee-Point Detection in Time Series": [[59, "kneed-knee-point-detection-in-time-series"]], "knockknock: Receive an Email When Your Code Finishes Executing": [[69, "knockknock-receive-an-email-when-your-code-finishes-executing"]], "latexify_py: Generates a LaTex Math Description From a Python Function": [[64, "latexify-py-generates-a-latex-math-description-from-a-python-function"]], "leAB: AB Testing Analysis in Python": [[38, "leab-ab-testing-analysis-in-python"], [58, "leab-ab-testing-analysis-in-python"]], "loguru: Print Readable Traceback in Python": [[68, "loguru-print-readable-traceback-in-python"]], "map method: Apply a Function to Each Item of an Iterable": [[7, "map-method-apply-a-function-to-each-item-of-an-iterable"]], "matplotlib-venn: Create a Venn Diagram Using Python": [[60, "matplotlib-venn-create-a-venn-diagram-using-python"]], "matplotx: Useful Extensions for Matplotlib": [[60, "matplotx-useful-extensions-for-matplotlib"]], "missingno.dendogram: Visualize Correlation Between Missing Data": [[60, "missingno-dendogram-visualize-correlation-between-missing-data"]], "mlforecast: Scalable Machine Learning for Time Series": [[51, "mlforecast-scalable-machine-learning-for-time-series"]], "modelkit: Build Production ML Systems in Python": [[51, "modelkit-build-production-ml-systems-in-python"]], "mypy: Static Type Checker for Python": [[65, "mypy-static-type-checker-for-python"]], "namedtuple: A Lightweight Python Structure to Mange your Data": [[17, "namedtuple-a-lightweight-python-structure-to-mange-your-data"]], "newspaper3k: Extract Meaningful Information From an Articles in 2 Lines of Code": [[53, "newspaper3k-extract-meaningful-information-from-an-articles-in-2-lines-of-code"]], "nlpaug: Enhancing NLP Model Performance with Data Augmentation": [[53, "nlpaug-enhancing-nlp-model-performance-with-data-augmentation"]], "notedown: Create IPython Notebooks from Markdown and Vice Versa": [[69, "notedown-create-ipython-notebooks-from-markdown-and-vice-versa"]], "notify-send: Send a Desktop Notification after Finishing Executing a File": [[69, "notify-send-send-a-desktop-notification-after-finishing-executing-a-file"]], "np.squeeze: Remove Axes of Length One From an Array": [[41, "np-squeeze-remove-axes-of-length-one-from-an-array"]], "np.where: Replace Elements of a NumPy Array Based on a Condition": [[41, "np-where-replace-elements-of-a-numpy-array-based-on-a-condition"]], "numpy.ravel: Flatten a NumPy Array": [[41, "numpy-ravel-flatten-a-numpy-array"]], "operator.itemgetter: Get Multiple Items From a List or Dictionary": [[21, "operator-itemgetter-get-multiple-items-from-a-list-or-dictionary"]], "pandarallel: A Simple Tool to Parallelize Pandas Operations": [[44, "pandarallel-a-simple-tool-to-parallelize-pandas-operations"]], "pandas Grouper: Group Values Based on a Specific Frequency": [[32, "pandas-grouper-group-values-based-on-a-specific-frequency"]], "pandas-reader: Extract Data from Various Internet Sources Directly into a Pandas DataFrame": [[49, "pandas-reader-extract-data-from-various-internet-sources-directly-into-a-pandas-dataframe"]], "pandas.Categorical: Turn a List of Strings into a Categorical Variable": [[31, "pandas-categorical-turn-a-list-of-strings-into-a-categorical-variable"]], "pandas.DataFrame.agg: Aggregate over Columns or Rows Using Multiple Operations": [[39, "pandas-dataframe-agg-aggregate-over-columns-or-rows-using-multiple-operations"]], "pandas.DataFrame.agg: Apply Different Aggregations to Different Columns": [[39, "pandas-dataframe-agg-apply-different-aggregations-to-different-columns"]], "pandas.DataFrame.combine_first: Update Null Elements Using Another DataFrame": [[29, "pandas-dataframe-combine-first-update-null-elements-using-another-dataframe"]], "pandas.DataFrame.corrwith: Compute Pairwise Correlation Between 2 DataFrame": [[34, "pandas-dataframe-corrwith-compute-pairwise-correlation-between-2-dataframe"]], "pandas.DataFrame.cummax: Get the Cumulative Maximum": [[34, "pandas-dataframe-cummax-get-the-cumulative-maximum"]], "pandas.DataFrame.explode: Transform Each Element in an Iterable to a Row": [[28, "pandas-dataframe-explode-transform-each-element-in-an-iterable-to-a-row"]], "pandas.Series.dt: Access Datetime Properties of a pandas Series": [[32, "pandas-series-dt-access-datetime-properties-of-a-pandas-series"]], "pandas.Series.map: Change Values of a Pandas Series Using a Dictionary": [[28, "pandas-series-map-change-values-of-a-pandas-series-using-a-dictionary"]], "pandas.Series.pct_change: Find The Percentage Change Between The Current and a Prior Element in a pandas Series": [[34, "pandas-series-pct-change-find-the-percentage-change-between-the-current-and-a-prior-element-in-a-pandas-series"]], "pandas.clip: Exclude Outliers": [[33, "pandas-clip-exclude-outliers"]], "pandas.crosstab: Create a Cross Tabulation": [[39, "pandas-crosstab-create-a-cross-tabulation"]], "pandas.cut: Bin a DataFrame\u2019s values into Discrete Intervals": [[34, "pandas-cut-bin-a-dataframes-values-into-discrete-intervals"]], "pandas.melt: Unpivot a DataFrame": [[39, "pandas-melt-unpivot-a-dataframe"]], "pandas.pivot_table: Turn Your DataFrame Into a Pivot Table": [[39, "pandas-pivot-table-turn-your-dataframe-into-a-pivot-table"]], "pandas.qcut: Bin a DataFrame\u2019s Values into Equal-Sized Intervals": [[34, "pandas-qcut-bin-a-dataframe-s-values-into-equal-sized-intervals"]], "pandas.reindex: Replace the Values of the Missing Dates with 0": [[32, "pandas-reindex-replace-the-values-of-the-missing-dates-with-0"]], "pandas\u2019 DateOffset: Add a Time Interval to a pandas Timestamp": [[32, "pandas-dateoffset-add-a-time-interval-to-a-pandas-timestamp"]], "parse: Extract Strings Using Brackets": [[62, "parse-extract-strings-using-brackets"]], "parse_dates: Convert Columns into Datetime When Using pandas to Read CSV Files": [[32, "parse-dates-convert-columns-into-datetime-when-using-pandas-to-read-csv-files"]], "pathlib": [[22, null]], "pd.Series.between: Select Rows in a Pandas Series Containing Values Between 2 Numbers": [[34, "pd-series-between-select-rows-in-a-pandas-series-containing-values-between-2-numbers"]], "people_also_ask: Python Wrapper for Google People Also Ask": [[49, "people-also-ask-python-wrapper-for-google-people-also-ask"]], "perfplot: Performance Analysis for Python Snippets": [[65, "perfplot-performance-analysis-for-python-snippets"]], "pip install -e: Install Forked GitHub Repository Using Pip": [[67, "pip-install-e-install-forked-github-repository-using-pip"]], "pip-autoremove: Remove a Package and Its Unused Dependencies": [[66, "pip-autoremove-remove-a-package-and-its-unused-dependencies"]], "pipreqs: Generate requirements.txt File for Any Project Based on Imports": [[66, "pipreqs-generate-requirements-txt-file-for-any-project-based-on-imports"]], "pretty-confusion-matrix: Plot a Pretty and Comprehensible Confusion Matrix": [[60, "pretty-confusion-matrix-plot-a-pretty-and-comprehensible-confusion-matrix"]], "prettymaps: Generate Pretty Painting of a Location in Python": [[60, "prettymaps-generate-pretty-painting-of-a-location-in-python"]], "probablepeople: Parse Unstructured Names Into Structured Components": [[48, "probablepeople-parse-unstructured-names-into-structured-components"]], "pydash.chunk: Split Elements into Groups": [[24, "pydash-chunk-split-elements-into-groups"]], "pydash.flatten: Flatten a Nested Python List": [[24, "pydash-flatten-flatten-a-nested-python-list"]], "pydash.flatten_deep: Flatten a Deeply Nested Python List": [[24, "pydash-flatten-deep-flatten-a-deeply-nested-python-list"]], "pydeps: Python Module Dependency Visualization": [[66, "pydeps-python-module-dependency-visualization"]], "pyheat: Simplify Code Profiling with Heatmap Visualization": [[68, "pyheat-simplify-code-profiling-with-heatmap-visualization"]], "pyinstrument: Readable Python Profiler": [[57, "pyinstrument-readable-python-profiler"]], "pyserde: Effortless Serialization and Deserialization of Dataclass Objects": [[55, "pyserde-effortless-serialization-and-deserialization-of-dataclass-objects"]], "pytest benchmark: A Pytest Fixture to Benchmark Your Code": [[38, "pytest-benchmark-a-pytest-fixture-to-benchmark-your-code"], [58, "pytest-benchmark-a-pytest-fixture-to-benchmark-your-code"]], "pytest parametrize twice: Test All Possible Combinations of Two Sets of Parameters": [[38, "pytest-parametrize-twice-test-all-possible-combinations-of-two-sets-of-parameters"], [58, "pytest-parametrize-twice-test-all-possible-combinations-of-two-sets-of-parameters"]], "pytest-mock vs unittest.mock: Simplifying Mocking in Python Tests": [[38, "pytest-mock-vs-unittest-mock-simplifying-mocking-in-python-tests"], [58, "pytest-mock-vs-unittest-mock-simplifying-mocking-in-python-tests"]], "pytest-picked: Run the Tests Related to the Unstaged Files in Git": [[38, "pytest-picked-run-the-tests-related-to-the-unstaged-files-in-git"], [58, "pytest-picked-run-the-tests-related-to-the-unstaged-files-in-git"]], "pytest-postgresql: Incorporate Database Testing into Your pytest Test Suite": [[38, "pytest-postgresql-incorporate-database-testing-into-your-pytest-test-suite"], [58, "pytest-postgresql-incorporate-database-testing-into-your-pytest-test-suite"]], "pytest-steps: Share Data Between Tests": [[38, "pytest-steps-share-data-between-tests"], [58, "pytest-steps-share-data-between-tests"]], "pytest-sugar: Show the Failures and Errors Instantly With a Progress Bar": [[38, "pytest-sugar-show-the-failures-and-errors-instantly-with-a-progress-bar"], [58, "pytest-sugar-show-the-failures-and-errors-instantly-with-a-progress-bar"]], "pytest.mark.parametrize: Test Your Functions with Multiple Inputs": [[38, "pytest-mark-parametrize-test-your-functions-with-multiple-inputs"], [58, "pytest-mark-parametrize-test-your-functions-with-multiple-inputs"]], "pytrends: Get the Trend of a Keyword on Google Search Over Time": [[49, "pytrends-get-the-trend-of-a-keyword-on-google-search-over-time"]], "quadratic: Data Science Speadsheet with Python and SQL": [[52, "quadratic-data-science-speadsheet-with-python-and-sql"]], "random.choice: Get a Randomly Selected Element From a Python List": [[8, "random-choice-get-a-randomly-selected-element-from-a-python-list"]], "random.choices: Get Weighted Random Choices From a Python List": [[8, "random-choices-get-weighted-random-choices-from-a-python-list"]], "random.sample: Get Multiple Random Elements from a Python List": [[8, "random-sample-get-multiple-random-elements-from-a-python-list"]], "re.sub: Replace One String with Another String Using Regular Expression": [[15, "re-sub-replace-one-string-with-another-string-using-regular-expression"], [36, "re-sub-replace-one-string-with-another-string-using-regular-expression"]], "removestar: Automate Replacing Start Imports with Explicit Imports": [[69, "removestar-automate-replacing-start-imports-with-explicit-imports"]], "resample: Resample Time-Series Data": [[32, "resample-resample-time-series-data"]], "rich.inspect: Produce a Beautiful Report on any Python Object": [[68, "rich-inspect-produce-a-beautiful-report-on-any-python-object"]], "safetensors: A Simple and Safe Way to Store and Distribute Tensors": [[52, "safetensors-a-simple-and-safe-way-to-store-and-distribute-tensors"]], "select_dtypes: Return a Subset of a DataFrame Including/Excluding Columns Based on Their dtype": [[31, "select-dtypes-return-a-subset-of-a-dataframe-including-excluding-columns-based-on-their-dtype"]], "set_categories in Pandas: Sort Categorical Column by a Specific Ordering": [[35, "set-categories-in-pandas-sort-categorical-column-by-a-specific-ordering"]], "size: Compute the Size of Each Group": [[39, "size-compute-the-size-of-each-group"]], "sketch: AI Code-Writing Assistant That Understands Data Content": [[47, "sketch-ai-code-writing-assistant-that-understands-data-content"]], "slice: Make Your Indices More Readable by Naming Your Slice": [[6, "slice-make-your-indices-more-readable-by-naming-your-slice"]], "smart_open: The Python Library That Makes Cloud Storage Feel Local": [[62, "smart-open-the-python-library-that-makes-cloud-storage-feel-local"]], "snoop : Smart Print to Debug your Python Function": [[68, "snoop-smart-print-to-debug-your-python-function"]], "snscrape: Scrape Social Networking Services in Python": [[49, "snscrape-scrape-social-networking-services-in-python"]], "sort: Sort a List of Tuples by the First or Second Item": [[7, "sort-sort-a-list-of-tuples-by-the-first-or-second-item"]], "sql-metadata: Extract Components From a SQL Statement in Python": [[43, "sql-metadata-extract-components-from-a-sql-statement-in-python"]], "squared=False: Get RMSE from Sklearn\u2019s mean_squared_error method": [[51, "squared-false-get-rmse-from-sklearns-mean-squared-error-method"]], "squarify: Plot Treemap in Python": [[60, "squarify-plot-treemap-in-python"]], "sumy: Summarize Text in One Line of Code": [[53, "sumy-summarize-text-in-one-line-of-code"]], "supertree: Interactive Decision Tree Visualization for Python": [[60, "supertree-interactive-decision-tree-visualization-for-python"]], "sweetviz: Compare the similar features between 2 different datasets": [[52, "sweetviz-compare-the-similar-features-between-2-different-datasets"]], "textacy: Extract a Contiguous Sequence of Words": [[53, "textacy-extract-a-contiguous-sequence-of-words"]], "texthero: Reduce Dimension and Visualize Text in One Line of Code": [[53, "texthero-reduce-dimension-and-visualize-text-in-one-line-of-code"]], "textstat: Calculate Statistics From Text": [[53, "textstat-calculate-statistics-from-text"]], "tfcausalimpact: Understand Causal Relationships in Time Series Data": [[59, "tfcausalimpact-understand-causal-relationships-in-time-series-data"]], "tmp_path: Create a Temporary Directory for Testing": [[38, "tmp-path-create-a-temporary-directory-for-testing"], [58, "tmp-path-create-a-temporary-directory-for-testing"]], "to_markdown: Print a DataFrame in Markdown Format": [[37, "to-markdown-print-a-dataframe-in-markdown-format"]], "tqdm: Add Progress Bar to Your Pandas Apply": [[44, "tqdm-add-progress-bar-to-your-pandas-apply"]], "traces: A Python Library for Unevenly-Spaced Time Series Analysis": [[59, "traces-a-python-library-for-unevenly-spaced-time-series-analysis"]], "transform: Filter a pandas DataFrame by Value Counts": [[33, "transform-filter-a-pandas-dataframe-by-value-counts"]], "try-except vs if-else": [[6, "try-except-vs-if-else"]], "tsmoothie: Fast and Flexible Tool for Exponential Smoothing": [[59, "tsmoothie-fast-and-flexible-tool-for-exponential-smoothing"]], "typing.Annotated: Add Metadata to Your Typehint": [[26, "typing-annotated-add-metadata-to-your-typehint"]], "typing.Callable: Specify an Input is of Type Function": [[26, "typing-callable-specify-an-input-is-of-type-function"]], "typing.Literal: Specify the Possible Values for a Function Parameter": [[26, "typing-literal-specify-the-possible-values-for-a-function-parameter"]], "typing.TypeVar: Flexible Typing for Context-Dependent Types": [[26, "typing-typevar-flexible-typing-for-context-dependent-types"]], "typing.final: Declare That a Method Should Not Be Overridden": [[26, "typing-final-declare-that-a-method-should-not-be-overridden"]], "unyt: Manipulate and Convert Units in NumPy Arrays": [[62, "unyt-manipulate-and-convert-units-in-numpy-arrays"]], "virtualenv-clone: Create a Copy of a Virtual Environment": [[66, "virtualenv-clone-create-a-copy-of-a-virtual-environment"]], "watchfiles: Rerun Code When a File Changes": [[69, "watchfiles-rerun-code-when-a-file-changes"]], "watermark: Get Information About Your Hardware and the Packages Being Used within Your Notebook": [[71, "watermark-get-information-about-your-hardware-and-the-packages-being-used-within-your-notebook"]], "whereami: Use Machine Learning to Predict Where You Are": [[69, "whereami-use-machine-learning-to-predict-where-you-are"]], "whylogs: Data Logging Made Easy": [[52, "whylogs-data-logging-made-easy"]], "wordfreq: Estimate the Frequency of a Word in 36 Languages": [[53, "wordfreq-estimate-the-frequency-of-a-word-in-36-languages"]], "yarl: Create and Extract Elements from a URL Using Python": [[48, "yarl-create-and-extract-elements-from-a-url-using-python"]]}, "docnames": ["Chapter1/Chapter1", "Chapter1/class", "Chapter1/code_speed", "Chapter1/datetime", "Chapter1/dictionary", "Chapter1/function", "Chapter1/good_practices", "Chapter1/list/apply_functions_to_elements", "Chapter1/list/get_elements", "Chapter1/list/join_iterable", "Chapter1/list/list", "Chapter1/list/unpack_iterables", "Chapter1/number", "Chapter1/python_new_features", "Chapter1/set", "Chapter1/string", "Chapter2/Chapter2", "Chapter2/collections", "Chapter2/dataclasses", "Chapter2/functools", "Chapter2/itertools", "Chapter2/operator", "Chapter2/pathlib", "Chapter2/pydantic", "Chapter2/pydash", "Chapter2/sympy", "Chapter2/typing", "Chapter3/Chapter3", "Chapter3/change_values", "Chapter3/combine_dataframes", "Chapter3/create_dataframe", "Chapter3/data_types", "Chapter3/date_time", "Chapter3/filter", "Chapter3/get_values", "Chapter3/sort_dataframe", "Chapter3/string", "Chapter3/style_dataframe", "Chapter3/testing", "Chapter3/transform_dataframe", "Chapter4/Chapter4", "Chapter4/Numpy", "Chapter5/Chapter5", "Chapter5/SQL", "Chapter5/better_pandas", "Chapter5/deltalake", "Chapter5/duckdb", "Chapter5/feature_engineer", "Chapter5/feature_extraction", "Chapter5/get_data", "Chapter5/llm", "Chapter5/machine_learning", "Chapter5/manage_data", "Chapter5/natural_language_processing", "Chapter5/polars", "Chapter5/sharing_downloading", "Chapter5/spark", "Chapter5/speed_up_code", "Chapter5/testing", "Chapter5/time_series", "Chapter5/visualization", "Chapter6/Chapter6", "Chapter6/alternative_approach", "Chapter6/best_python_practice_tools", "Chapter6/better_outputs", "Chapter6/code_review", "Chapter6/env_management", "Chapter6/git_github", "Chapter6/logging_debugging", "Chapter6/workflow_automation", "Chapter7/Chapter7", "Chapter7/jupyter_notebook", "README", "how_to_read"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["Chapter1/Chapter1.md", "Chapter1/class.ipynb", "Chapter1/code_speed.ipynb", "Chapter1/datetime.ipynb", "Chapter1/dictionary.ipynb", "Chapter1/function.ipynb", "Chapter1/good_practices.ipynb", "Chapter1/list/apply_functions_to_elements.ipynb", "Chapter1/list/get_elements.ipynb", "Chapter1/list/join_iterable.ipynb", "Chapter1/list/list.md", "Chapter1/list/unpack_iterables.ipynb", "Chapter1/number.ipynb", "Chapter1/python_new_features.ipynb", "Chapter1/set.ipynb", "Chapter1/string.ipynb", "Chapter2/Chapter2.md", "Chapter2/collections.ipynb", "Chapter2/dataclasses.ipynb", "Chapter2/functools.ipynb", "Chapter2/itertools.ipynb", "Chapter2/operator.ipynb", "Chapter2/pathlib.ipynb", "Chapter2/pydantic.ipynb", "Chapter2/pydash.ipynb", "Chapter2/sympy.ipynb", "Chapter2/typing.ipynb", "Chapter3/Chapter3.md", "Chapter3/change_values.ipynb", "Chapter3/combine_dataframes.ipynb", "Chapter3/create_dataframe.ipynb", "Chapter3/data_types.ipynb", "Chapter3/date_time.ipynb", "Chapter3/filter.ipynb", "Chapter3/get_values.ipynb", "Chapter3/sort_dataframe.ipynb", "Chapter3/string.ipynb", "Chapter3/style_dataframe.ipynb", "Chapter3/testing.ipynb", "Chapter3/transform_dataframe.ipynb", "Chapter4/Chapter4.md", "Chapter4/Numpy.ipynb", "Chapter5/Chapter5.md", "Chapter5/SQL.ipynb", "Chapter5/better_pandas.ipynb", "Chapter5/deltalake.ipynb", "Chapter5/duckdb.ipynb", "Chapter5/feature_engineer.ipynb", "Chapter5/feature_extraction.ipynb", "Chapter5/get_data.ipynb", "Chapter5/llm.ipynb", "Chapter5/machine_learning.ipynb", "Chapter5/manage_data.ipynb", "Chapter5/natural_language_processing.ipynb", "Chapter5/polars.ipynb", "Chapter5/sharing_downloading.ipynb", "Chapter5/spark.ipynb", "Chapter5/speed_up_code.ipynb", "Chapter5/testing.ipynb", "Chapter5/time_series.ipynb", "Chapter5/visualization.ipynb", "Chapter6/Chapter6.md", "Chapter6/alternative_approach.ipynb", "Chapter6/best_python_practice_tools.ipynb", "Chapter6/better_outputs.ipynb", "Chapter6/code_review.ipynb", "Chapter6/env_management.ipynb", "Chapter6/git_github.ipynb", "Chapter6/logging_debugging.ipynb", "Chapter6/workflow_automation.ipynb", "Chapter7/Chapter7.md", "Chapter7/jupyter_notebook.ipynb", "README.md", "how_to_read.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [1, 3, 5, 13, 14, 18, 22, 25, 28, 30, 31, 32, 35, 37, 38, 43, 44, 52, 53, 54, 58, 60, 62, 64, 65, 66, 67, 69, 72], "0": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 17, 19, 20, 23, 24, 25, 28, 29, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 71], "00": [3, 32, 38, 39, 41, 44, 45, 47, 48, 49, 51, 53, 56, 58, 59, 60, 68, 69, 71], "000": [5, 6, 15, 36, 43, 45, 46, 59, 64], "0000": 60, "000000": [44, 47, 51, 54, 59], "00000000000000000000": 45, "00000000000000000001": 45, "000001": 68, "000005": [38, 58], "0001": 68, "000135": 53, "00015": [], "000239": 68, "001": [20, 48, 49, 57, 60, 62], "0010": 60, "0014": 60, "0016": 60, "0019392203169556147": 51, "002": 59, "002117": 68, "0032": 60, "003217": 68, "0036884": 48, "0036960": 48, "0037316": 48, "0037897": 48, "0038504": 48, "004268080428952992": 51, "0049831": 48, "005": [38, 49, 58], "005577343029862753": 53, "005625421684874428": 53, "005720802001625725": 53, "0057638598847672895": 53, "0057704732354528256": 53, "0058020704180533665": 53, "00588900633935797": 53, "005m": 5, "006": 49, "006001769831975551": 53, "006108581738112714": 53, "0062": 49, "006207025740053": 53, "0062471104261567646": 53, "00631255726099582": 53, "006363054536286731": 53, "006440052002290031": 51, "0064590662792896585": 53, "006472264420227003": 53, "006732791659778612": 53, "006736358725450975": 53, "006986923839656088": 53, "0071321814454188845": 53, "0071658097402482355": 53, "007269166754797321": 53, "007348381606302089": 53, "007754136375078246": 53, "007899578915680364": 53, "0079433": 48, "007993957748991226": 53, "008": 47, "008701297355282599": 53, "00879797125029002": 53, "00894871700074873": 51, "008992489388365084": 53, "008m": 5, "00926068750809855": 53, "009m": 5, "00_afctbrp26zwk0onprfkbpjlrlfdwwlmlv1_xlkevlke_yw": 49, "00_afdikcbbddzcymhxd": 49, "00am": 59, "00e": 60, "00m": [38, 58], "01": [3, 6, 20, 32, 38, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 58, 59, 60, 68], "010264402444887343": 53, "01028": 48, "010318688564543007": 53, "01052632": 47, "010652628093406865": 53, "01073417039148073": 53, "010814499200447799": 53, "0109992": 51, "0109999": 51, "0113360913460819": 53, "0119965": 51, "0119977": 51, "0119994": 51, "012": [38, 48, 58], "0120046": 51, "01200463023637096": 51, "012280939589777724": 53, "0129": 51, "01296513058488493": 53, "0130005": 51, "0130029": 51, "01351351": 47, "0139935": 51, "014": 53, "0140011": 51, "01474934": 59, "0150008": 51, "015048608360916427": 53, "015242": 49, "01574803": 47, "0160074": 51, "01637819364726209": 53, "0166": 51, "016667": 47, "0169988": 51, "0170023": 51, "0170043": 51, "018": 48, "019": 48, "019531": 59, "019632186075287533": 53, "019989": 51, "0199995": 51, "02": [15, 32, 36, 38, 43, 45, 46, 47, 48, 49, 51, 53, 56, 58, 59, 60, 64], "020": 59, "0200036": 51, "02083333": 47, "02325581": 47, "024695": 1, "02631579": 47, "0270066": 51, "027081": 54, "02739726": 47, "02777778": 47, "028": 47, "0295": 51, "03": [3, 15, 32, 36, 43, 45, 46, 47, 49, 53, 56, 59, 60, 68], "0310006": 51, "03125": 47, "031597": 47, "032": 47, "033": 51, "03378378": 47, "0350015": 51, "037": 48, "037187": 59, "03726": 54, "03738318": 47, "038615": 66, "04": [32, 45, 47, 48, 49, 50, 51, 56, 57, 59, 60, 64], "042274": 54, "0429988": 51, "043685": 47, "0461": [38, 58], "047": 59, "047306": 54, "04761905": 47, "05": [23, 32, 33, 38, 44, 45, 47, 49, 51, 52, 53, 56, 58, 59, 60, 68, 71], "05343511": 47, "0537": 53, "053z": 49, "05405405": 47, "055": 59, "05555556": 47, "0559971": 51, "056": [47, 48], "0560005": 51, "056641": 59, "057614": 45, "05882353": 47, "06": [32, 44, 47, 49, 51, 56, 59, 60, 68, 69], "06087": 49, "06207145": 59, "0625": 47, "063034": 59, "06451613": 47, "06542056": 47, "066779": 59, "067039": 59, "0672": 51, "067384": 47, "068359": 59, "069": 53, "06976744": 47, "06b1cf": 51, "07": [32, 38, 45, 47, 48, 49, 56, 58, 59, 60, 64], "0700": 49, "07142857": 47, "07317073": 47, "0733945": 47, "074326": 59, "0770546": 48, "07811": 49, "079080": 54, "08": [15, 36, 38, 47, 51, 53, 59, 60, 68, 69], "08088235": 47, "08108108": 47, "082172": 59, "086000": 47, "089": 48, "09": [15, 32, 36, 38, 45, 47, 48, 49, 51, 56, 57, 59, 60, 71], "090": 59, "093965": 54, "094055": 45, "094072": 59, "094401": 47, "095": 49, "095609": 66, "09756098": 47, "098": 48, "09821429": 47, "09861229": 47, "099": 48, "0_game_team_games_h": 53, "0_to_1": 63, "0j": 66, "0kb": 45, "0m": [38, 43, 44, 53, 56, 57, 58, 64, 65, 66, 68], "0m1": 65, "0m14": 65, "0m18": 65, "0m5": 65, "0m6": 65, "0m89": 65, "0m9": 65, "0mand": 43, "0mbinari": 43, "0mexpect": 43, "0mkeyword": 43, "0monli": 43, "0mrun": [38, 58], "0mselect": 43, "0mt": 65, "0mtest_benchmark_exampl": [38, 58], "0mtest_fixtur": [38, 58], "0mtest_hypothesi": [38, 58], "0mtest_parametr": [38, 58], "0mtest_repeat_exampl": [38, 58], "0x109d1c860": 64, "0x10b683730": 60, "0x10d69da80": 65, "0x137d39650": 60, "0x15b25a8e0": 59, "0x16b631430": 51, "0x7f027895d1f0": 24, "0x7f279588f430": 68, "0x7f27958b7af0": 68, "0x7f27958bfb80": 68, "0x7f27958bfca0": 68, "0x7f279676e040": 68, "0x7f9880491310": 24, "1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 71], "10": [1, 2, 5, 6, 7, 8, 15, 20, 23, 26, 30, 32, 34, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 64, 65, 66, 68, 69, 71], "100": [1, 5, 6, 8, 15, 17, 20, 28, 30, 31, 36, 38, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 72], "1000": [2, 5, 6, 8, 17, 30, 43, 45, 46, 47, 48, 50, 51, 54, 56, 59, 60], "10000": [6, 8, 19, 44, 45, 54, 57], "100000": [1, 23, 30, 38, 58], "1000000": [2, 8, 12, 31, 54], "100000000": [15, 36], "10000001234": 52, "10000001235": 52, "10000001236": 52, "10000001237": 52, "10000001238": 52, "100003": 1, "1000x300": 53, "1000x800": 48, "1001": 56, "1002": 56, "10020": 59, "1003": [45, 56], "1004": 56, "1005": 56, "100504": 47, "100531": 47, "100_000_000": 30, "100k": 72, "100x": 65, "101": [48, 59], "101562": 59, "101658": 59, "10176": 47, "1020": 54, "1024": [31, 44, 52, 53], "103": [28, 59], "10381": 59, "10383": 59, "10385": 59, "104": [38, 58, 62], "104022926303756": 49, "104257": 47, "105": 47, "105506396148790": 49, "106": [30, 38, 58], "107": [47, 56], "10789": 47, "107937": 53, "108": [43, 46], "1080": 66, "108545": 59, "1095": 53, "10969": 47, "10_000": [2, 59, 69], "10_000_000": 54, "10pt": 64, "10th": 53, "11": [1, 2, 3, 6, 8, 15, 26, 28, 30, 32, 34, 36, 38, 39, 43, 44, 45, 47, 49, 51, 53, 54, 56, 58, 59, 60, 62, 64, 65, 66, 68], "110": 2, "1100": 56, "111": [52, 59], "11111111": 41, "112": [44, 53], "11206897": 47, "1125": 53, "112505": 59, "113": [30, 49, 51], "11349": 59, "1142": 33, "1143": 33, "1144": 33, "1145": 33, "1145382": 48, "1146": 33, "114933": 59, "1156": 44, "1165738010": 68, "1173": 47, "118": [44, 59], "119": [44, 51, 59], "1190": 47, "11931": 59, "11th": 53, "12": [1, 2, 12, 13, 15, 22, 26, 30, 31, 32, 34, 36, 38, 39, 44, 45, 47, 49, 52, 53, 54, 56, 57, 58, 59, 60, 64, 65, 66, 68], "120": [30, 38, 47, 49, 58, 59, 68], "1200": [43, 46, 56], "12026": 59, "121": [44, 59, 60], "122": [47, 60], "12216": 54, "1224": 53, "1225": 54, "12251": 59, "12276": 47, "12277": 47, "123": [2, 6, 18, 47, 51, 52, 53, 59, 63], "1234": 18, "12345": 18, "123456": 52, "1235111617": 49, "123abc456": 20, "125": [23, 59], "125000": 19, "126": 49, "12647": 47, "1265": 54, "1266": 47, "127": [44, 47, 51, 54], "12741": 47, "128": [47, 59], "128635": 49, "128kbp": 69, "129": [44, 47], "12m": 45, "12t05": 49, "12t09": 71, "13": [1, 28, 30, 32, 34, 38, 47, 49, 50, 51, 53, 56, 58, 59, 60, 64, 68], "130": 47, "131": 47, "132": [31, 44, 47, 48, 59], "133": [47, 69], "1332": 31, "133819": 59, "134": [47, 69], "13410": 47, "13420": 47, "1345": 52, "13485": 47, "135": [44, 47, 49, 69], "135284": 59, "136": [44, 47, 69], "136579": 54, "137": [47, 49], "138": [47, 49], "139": [47, 69], "14": [6, 26, 30, 32, 34, 38, 45, 47, 48, 49, 53, 56, 58, 59, 60, 64, 65, 68], "140": [47, 56, 59, 69], "1400": 51, "141": [47, 49], "14112001": 8, "141m1": 65, "141m3": 65, "142": 47, "142569": 66, "143": [47, 54, 57], "1431": 47, "14395": 59, "144": 47, "1443": 53, "1445": 67, "144p": 69, "145": 47, "14530": 52, "14587": 59, "146": [47, 57, 59], "146385": 1, "14672": 59, "14680": 47, "14681": 47, "146829": 47, "148": [44, 45, 59], "1487": 47, "149": 31, "14953271": 47, "15": [1, 12, 15, 25, 30, 32, 34, 36, 38, 41, 45, 47, 49, 51, 53, 54, 56, 58, 59, 60, 68], "150": [6, 8, 31, 49, 54, 56, 59, 72], "1500": [43, 46, 56], "15000": 19, "150000": 19, "151": [53, 65], "15141b": 60, "152": [8, 65], "152762": 47, "154": 49, "154365": 45, "15478": 47, "15479": 47, "155": [49, 52], "1555": 52, "156275": 66, "15793": 59, "157b": 45, "15824": 47, "1588997": 48, "15m": [57, 65], "15mcalculate_statist": 65, "15mdata": 65, "15mis_even": 57, "15mlen": 65, "15mnumber": 65, "15mresult": 65, "15msum": 65, "15t09": 57, "15th": [50, 53], "16": [1, 7, 12, 20, 30, 32, 38, 44, 47, 49, 51, 53, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 71], "160": [59, 69], "16083": 47, "160kbp": 69, "1610": 45, "161048": 47, "161895": 1, "162": 65, "162101": [38, 58], "162911": 59, "163": 65, "16348": 47, "16349": 47, "164": [59, 65], "164d85df98e7": 49, "16518": 47, "16519": 47, "16599": 59, "166365": 47, "166597835": 54, "166653474": 54, "166660653": 54, "166666666666666": 59, "16666666666666666": 59, "166667": 34, "166998": 51, "167938": 59, "168": [44, 53], "169992": 54, "17": [1, 3, 34, 38, 44, 47, 49, 50, 53, 56, 58, 59, 60, 64, 65, 69], "170": 54, "170436": 47, "171": 60, "172": 60, "1720": 47, "173": 64, "174741": 47, "176": [32, 57, 59, 60], "176045": 59, "178": [59, 60], "179409": 47, "17th": 59, "18": [1, 25, 32, 38, 45, 47, 49, 53, 56, 58, 59, 60, 64, 65, 66, 68, 69], "180": [1, 56, 59, 60], "18000": 53, "181": 45, "18172": 49, "182005": 47, "1823": 53, "182476": 59, "18339": 59, "183821": 47, "184": [59, 64], "186204": 47, "1865479429": 68, "186m": 65, "186ma": 65, "186mmean": 65, "189": 2, "18910652": 59, "18m": 45, "19": [30, 32, 38, 43, 46, 47, 56, 58, 59, 60, 65, 66, 68, 71], "19008264": 47, "190805": 59, "191406": 59, "191879": 51, "192": [44, 53, 60], "1927": 49, "193": 47, "194": 59, "1948": 49, "1949": [44, 49], "195": 47, "1954": 59, "1956": 44, "1957": 44, "19575079_10103832396388711_8894816584589808440_o": 49, "1958": 44, "1959": 44, "196": 51, "1960": [44, 59], "1969": 59, "197": 59, "1975": 64, "1977": 64, "198": 47, "1981": 30, "1986": 47, "198796161": 2, "1988": [46, 47], "1989": 47, "1990": [4, 30], "1991": 4, "1993": 4, "1995": 4, "1997": 4, "1998": [49, 59], "1999": 4, "19t03": 49, "1_000": 54, "1_000_000": [12, 31, 45, 54], "1_key_clipper_chip_encrypt": 53, "1_to_the_is_of": 53, "1a": [38, 58, 66], "1d3a": 45, "1e": [20, 38, 51, 58, 59], "1e20d72afccf450faa3b8a9806a97e83": 51, "1f": [15, 36, 37], "1gram": 53, "1ji1cmxqnwsmc": 55, "1m": [26, 38, 44, 45, 53, 58, 65, 66], "1m1": [38, 58, 66], "1m100": [38, 58], "1m2": [38, 58, 66], "1m2021": 66, "1m241": 66, "1m3": [38, 58], "1m4": [38, 58], "1m_______________________": [38, 58], "1ma": 66, "1mbecaus": 66, "1mcapitalis": 43, "1mcollect": [38, 58], "1mcount": 44, "1mdict": 66, "1mexcept": 66, "1mfailur": [38, 58], "1mh": 69, "1mhttp": 53, "1misland": 44, "1mlayout": 43, "1mmy_cod": 65, "1mpackag": 66, "1mpass": [38, 58], "1mrais": 66, "1mreturn": 66, "1mself": 66, "1msolverproblemerror": 66, "1mspeci": 44, "1msqlfluff_exampl": 43, "1mstructur": 43, "1msuccess": [38, 58], "1mtest": [38, 58], "1mtest_calculation_without_approx": [38, 58], "1nnan48231023": 49, "1secretpw": 69, "1st": [38, 58], "1w": 32, "2": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 23, 24, 25, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 71], "20": [1, 5, 6, 8, 32, 34, 38, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 65, 66, 69], "200": [1, 31, 38, 45, 47, 51, 54, 56, 57, 58, 59, 64], "2000": [4, 30, 49, 56, 59], "200017": 54, "2001": 59, "2002": [30, 49, 59], "2004": [30, 49, 59], "2006": [49, 59], "2007": [47, 59], "2008": [30, 49], "2010": [30, 47, 59], "2011": [49, 60], "2012_2": 64, "2013": 59, "2014": [47, 59], "2015": [30, 49, 59], "2016": [47, 59], "2017": [52, 59], "20177": [38, 58], "2018": [30, 32, 49], "2019": [32, 47, 49, 50, 53, 60], "2019th": 53, "202": 65, "2020": [3, 32, 56, 59, 60, 66], "2021": [6, 15, 32, 36, 43, 47, 51, 57, 59, 66, 71], "2022": [3, 15, 32, 36, 49], "20220309": 49, "2023": [43, 45, 46, 50, 53, 56, 59, 68], "2024": [23, 32, 38, 45, 49, 51, 56, 58, 59, 68], "2025": [44, 50, 53, 68], "2026100": 59, "2032_2": 64, "2038": 47, "204": 28, "20407": 47, "204998": 51, "204m": 65, "20535714": 47, "205742": 47, "20640": 57, "2081586": 49, "2084541889": 64, "20answer": 49, "20by": 49, "20hard": 49, "20learn": 49, "20short": 49, "20the": 49, "20to": 49, "20work": 49, "21": [1, 32, 34, 43, 44, 45, 47, 49, 51, 53, 59, 60, 64, 66], "210": 59, "211827399669452": 59, "212": 59, "213": 59, "2145_1": 64, "2147483647": 31, "2147483648": 31, "21517": 59, "216": 54, "2175400": 59, "218": 59, "218793605631347": 59, "219699": 59, "21986": 59, "21st": 47, "21t10": 49, "22": [6, 8, 17, 30, 32, 34, 38, 45, 47, 49, 51, 56, 58, 59, 60, 66, 69, 71], "220121": 45, "2202500": 59, "22034": 59, "221": 41, "22129": 59, "222": [41, 59], "2220": [38, 58], "22222222": 41, "22412": 59, "2242": 47, "224745": 47, "225": 57, "2251799813685248": 12, "225e4e46e3a0": 45, "226": [43, 46], "226040": 59, "2265800": 59, "227314": 47, "228": 49, "2281": 45, "22902": 59, "22996": 59, "23": [3, 32, 34, 45, 47, 49, 50, 51, 56, 59, 60, 62, 64, 65, 68], "230": 59, "2300": 47, "2303900": 59, "23043": 59, "23076923": 47, "23127": 59, "2322": [38, 58], "232699939166196e": 51, "234705": 47, "236": 59, "237": 48, "2386": 33, "2387": 33, "2388": 33, "2389": 33, "239": 48, "2390": 33, "23974": 59, "239798": 47, "24": [32, 45, 47, 48, 49, 51, 56, 59, 60, 62, 64, 68], "240000324": 20, "240p": 69, "242": [53, 59, 69], "242022": 47, "242640687119285": 25, "243": 69, "24380": 59, "243830": 47, "244": 69, "244295": 47, "24458": 59, "24516": 59, "24563": 59, "245m": 65, "247": [59, 69], "248": 59, "249": [49, 69], "249322": 54, "2494": 47, "2495": [38, 58], "24a5cf2f": 45, "24m": 57, "25": [25, 30, 32, 38, 41, 43, 44, 46, 47, 49, 51, 53, 54, 56, 57, 58, 59, 60, 62, 65], "250": [1, 69], "2500": 3, "25000": 19, "250184": 54, "2509": 54, "251": 69, "2512": 47, "253": 59, "2537": 45, "253906": 59, "253e53f9": 49, "255": 47, "2550": 56, "255311": 66, "255319": 59, "255826": 66, "257812": 59, "258": [38, 47, 58, 59], "259": [38, 49, 58], "25959": 59, "25990": 59, "25it": 47, "25l": 68, "26": [8, 30, 38, 47, 49, 53, 58, 59, 60], "260": [47, 49, 59], "26086957": 47, "261": [47, 57], "261667": 47, "262997": 51, "2630": 35, "264": [49, 72], "264017": 59, "264253": 59, "265": 57, "266427": 59, "266871": 47, "2685753618191566": 49, "2686": [38, 58], "27": [30, 31, 32, 38, 45, 47, 49, 58, 59, 60, 71], "2700": 59, "2706": 51, "272": 49, "2724415914984484": 59, "2732": 47, "274": 49, "274013": 59, "275": 56, "2755098589": 20, "27600697": 59, "27666666666667": 56, "278": 69, "278115": 45, "28": [38, 49, 56, 58, 59, 60], "280": 64, "280000": 19, "28084": 26, "2815": 47, "284": [47, 49], "2844": [38, 58], "285": 53, "286": [38, 58], "288": 49, "288779": 59, "28t03": 49, "29": [38, 43, 45, 47, 49, 51, 53, 54, 59, 60, 64, 68], "2906": [43, 46], "292": 45, "2932": 47, "295m": 45, "297": [38, 58], "299009": 59, "2995": 47, "29ed": 45, "2_000_000": 30, "2_idjits_ites_cheek_danc": 53, "2a": [64, 66], "2b5037da7d78258f167d5a3f8dc24edb": 49, "2d": [32, 53, 60], "2f": [15, 23, 31, 36, 51, 53, 54], "2fbd9e05d992eb74f7afcccec02581fc": 49, "2gram": 53, "2k": [38, 58, 66], "2kdownload": [38, 58], "2m": [57, 66], "2m237": 66, "2m238": 66, "2m239": 66, "2m240": 66, "2m242": 66, "2m243": 66, "2m244": 66, "2m245": 66, "2mint64": 44, "2mpanda": 57, "2mpyinstrument_exampl": 57, "2mrunpi": 57, "2mstring": 44, "3": [1, 2, 5, 6, 7, 8, 11, 12, 15, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71], "30": [1, 3, 4, 8, 15, 23, 25, 30, 36, 38, 43, 45, 46, 47, 48, 49, 51, 53, 54, 56, 58, 59, 60, 62, 64, 68, 69], "300": [1, 47, 51, 54, 56, 64], "30000000000000004": [38, 58], "301": 47, "30138168803582194": 59, "301684": 59, "302": [38, 51, 58], "3025": 44, "302m": 5, "304": 3, "306549": 47, "30808": 49, "309": [28, 38, 58], "30950555": 59, "30fp": 69, "30m": 43, "31": [15, 36, 38, 45, 47, 49, 53, 58, 60, 64, 65, 66, 68], "310": 59, "310000": 19, "310692": 59, "31119": 59, "3116": 59, "312257846_10114737758665291_6588360857015169674_n": 49, "3123": [15, 36], "3128": 66, "313": 51, "314174": 66, "31476": 53, "31581918867947": 56, "316": 53, "31701": 54, "317465": 1, "3178150741": 1, "318558": 66, "319": [47, 68], "3191997974645346e": 51, "3192": 49, "319769c2226c": 45, "31m": [38, 58, 65, 68], "31m0": [38, 57, 58], "31m100": [38, 58], "31me": [38, 58], "31me501": 65, "31merror": [26, 65, 68], "31mf": [38, 58], "31mf401": 65, "31mf821": 65, "31mf841": 65, "31mfail": [38, 43, 58], "31mfound": [26, 65], "31mi001": 65, "31mtest_approx": [38, 58], "31mtest_floats_are_commut": [38, 58], "31mtest_hypothesi": [38, 58], "31mtest_pick": [38, 58], "31mtypeerror": 65, "32": [20, 43, 45, 46, 47, 49, 51, 56, 59, 60, 62, 64, 66], "321": [38, 58], "322947056533328": 59, "323": 49, "324": 44, "3246": 47, "325433": 45, "326": 49, "327": 59, "32767": 31, "32768": 31, "327966": 47, "328": [38, 58], "3288": 60, "32932": 54, "32m": [38, 56, 58, 66], "32m1": [38, 58, 66], "32m100": [38, 58], "32m2": [38, 58, 66], "32m2021": 66, "32m23": [38, 58], "32m3": [38, 58], "32m4": [38, 58], "32m42": [38, 58], "32m62": [38, 58], "32m81": [38, 58], "32madeli": 44, "32mbisco": 44, "32mchinstrap": 44, "32mdream": 44, "32mgentoo": 44, "32mpass": [38, 58], "32msuccess": 26, "32mtorgersen": 44, "32munsupport": 65, "33": [8, 30, 38, 41, 45, 47, 49, 51, 53, 58, 59, 64], "33131": 59, "332031": 59, "332m": 5, "333": 51, "33300": 47, "33324340": 49, "333333": 34, "33333333": 41, "3333333333333333": 59, "33381149": 49, "334": 59, "335": 68, "335181": 59, "336": 47, "3364": 44, "33648": 47, "337321": 59, "3378": 51, "33806937": 59, "33m": [26, 38, 58, 65], "33m3": 65, "33m8": 65, "33mskip": [38, 58], "33mx": [38, 58], "34": [8, 30, 37, 45, 47, 49, 59, 60, 66], "340": 49, "341": 65, "3422": 47, "343": 59, "344": 59, "345": 52, "346": 57, "348": 49, "34m": [43, 53, 64], "34m0": 66, "34m4": 66, "34m5": 66, "34mdepend": 66, "34mdescript": 66, "34mexampl": 69, "34minstal": 66, "34ml": 43, "34mname": 66, "34mpend": 66, "34mremov": 66, "34mresolv": 66, "34mtraceback": 65, "34mupdat": 66, "34mversion": 66, "34mwrite": 66, "35": [30, 34, 38, 43, 46, 47, 48, 56, 58, 59, 60, 62, 66], "3500": [38, 58], "351": 45, "351636": 45, "352": 47, "3526": 49, "3531": 45, "3539823": 47, "354708": 54, "355262": 47, "35652": 47, "357": 59, "357344": 59, "3583": 47, "3592": 59, "35960884": 31, "35m": 65, "35mcalculate_statist": 65, "36": [30, 47, 49, 50, 51, 59, 60, 62], "360": 49, "3600": 62, "3609": 59, "360p": 69, "360px": 60, "361": 44, "361404": 51, "3628": 59, "366550": 66, "367": 54, "368771": 54, "36m": [38, 58, 65], "36m124": 44, "36m44": 44, "36m52": 44, "36m56": 44, "36m68": 44, "36m_solv": 66, "36mnumpi": 66, "36mpanda": 66, "36mpytest_sugar_exampl": [38, 58], "36mpython": 66, "36mpytz": 66, "36msix": 66, "36mtypehint": 65, "37": [43, 46, 47, 49, 53, 56, 60], "3721": 44, "373": 67, "3752999689475413": 12, "3756": 59, "3760": 47, "3766": 45, "378": 60, "3789": 47, "37m": [38, 58], "37mexampl": 69, "38": [38, 43, 46, 47, 49, 56, 57, 58, 59, 65, 68], "380": 1, "383008": 59, "383442": 59, "384": 59, "38629436": 47, "386986": 59, "3872": [38, 58], "387298": 1, "39": [3, 38, 47, 49, 53, 58, 59, 66], "393167": 47, "393416": 59, "3939": 44, "394": 59, "395": 49, "39m": [65, 66, 69], "39m_packag": 66, "39maggregate_package_nod": 66, "39me": 66, "39minstal": 66, "39moverrid": 66, "39moverrideneed": 66, "39mpackag": 66, "39mremov": 66, "39mresult": 66, "39msolve_in_compatibility_mod": 66, "39msolvefailur": 66, "39msolverproblemerror": 66, "39muse_latest": 66, "3_israel_israeli_jews_arab": 53, "3a": 66, "3f": [5, 51, 53, 64], "3f072ef1": 45, "3gpp": 69, "3m": [38, 58], "3rd": [38, 58], "3wb": 49, "3x": 71, "4": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 19, 20, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 71], "40": [30, 47, 49, 51, 54, 56, 59, 60, 62, 69], "400": [43, 46, 56, 59], "401": 59, "404": 60, "4040": [44, 56], "4041": [44, 56], "40455": 47, "405": 59, "4050": 51, "406": 64, "4076731999": 33, "40845": 47, "409": 59, "409000": 47, "40m": [38, 58], "41": [1, 30, 43, 46, 47, 53, 54, 59, 65], "410226": 59, "411": [6, 59], "412121": 54, "413": 59, "414": [30, 31, 59], "4142135623730951": 1, "414214": [44, 47], "415217": 59, "4169e1": 60, "4171_1": 64, "419": 59, "41947969": 59, "4197": 47, "41e1": 45, "42": [1, 6, 30, 31, 47, 51, 54, 56, 59, 60], "420": 49, "420000": 19, "42001e": 69, "421": 59, "422": 59, "4225": 44, "423": [59, 60], "4234_1": 64, "423655": 59, "423992": 59, "424": 30, "425": 59, "425m": 5, "426": 51, "42613": 47, "4278": 45, "428": [54, 59], "43": [47, 53, 56], "4300": 54, "431778579": 28, "432": 31, "432874": 59, "4335": 49, "433z": 49, "4345": 49, "434642": 66, "435": 59, "43567": 47, "437587": 59, "438535": 71, "439": 59, "439155": 1, "439453": 59, "44": [48, 53, 59], "441": [44, 47], "4416": 57, "442": 59, "4421": 44, "444": 59, "44444444": 41, "446": 53, "4493": 47, "45": [15, 31, 36, 43, 46, 47, 51, 52, 54, 56, 59, 60, 68], "450": 56, "45000": [19, 47, 56], "4501": [38, 58], "451": 59, "451754": 47, "454151": 59, "455078": 59, "4555": 45, "456": 49, "45677": 47, "4572": 44, "458": 59, "458242": 59, "458905fc5c630d7a1f7a510a04e5e0f9": 45, "45891": 47, "459": [47, 59], "4592": 47, "46": [1, 30, 47, 49, 54, 59, 68], "460": 59, "46107": 47, "462": [53, 59], "463z": 49, "46428": 47, "4661": 53, "467803": 59, "467988": 59, "469": 48, "47": [30, 38, 47, 54, 56, 58, 59, 60], "470": 49, "4719861e": 45, "472": [48, 59], "473": 49, "4733": 47, "474": 59, "474813": 66, "475": 59, "4754": 45, "4761": 44, "477": 59, "47834174060653": 56, "479": 59, "48": [41, 47, 56, 57, 59, 60], "480": 59, "480789": 47, "480p": 69, "481": 59, "482": 59, "483280": 59, "485": 51, "4861": 47, "48673081656052": 56, "488": 59, "4884": 53, "489": 59, "489598": 51, "48kbp": 69, "49": [30, 38, 41, 44, 45, 47, 54, 56, 58, 59, 60, 65], "4900": 44, "4902": 53, "490234": 59, "490809": 59, "491": 59, "492": 59, "4925": 47, "493112": 59, "494": 45, "495": 59, "496": 59, "497": 59, "4975": 53, "498": 59, "499": [43, 46], "49f8": 45, "4ac": 64, "4ca6": 45, "4d400c": 69, "4d4015": 69, "4d401e": 69, "4d401f": 69, "4e0f": 45, "4f": [23, 53], "4j0ida0ekyqqzzbc93juuuubvh": 52, "5": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 15, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 71], "50": [1, 5, 38, 43, 46, 47, 49, 50, 51, 56, 58, 59, 60], "500": [1, 43, 46, 49, 53, 54, 56, 59, 64], "5000": [19, 38, 45, 51, 53, 56, 58], "50000": [30, 47, 56], "500000": [34, 47], "5001": [38, 58], "501305": 59, "5019": 45, "502": 49, "50332": 47, "503605": 53, "50377": 54, "504": 59, "5041": 44, "505": [47, 59], "506": [59, 64], "507557": 47, "507e": 60, "508": 59, "508e": 60, "509": 59, "50kbp": 69, "51": [30, 47, 51, 56, 60], "511": 59, "512015": 66, "512281": 51, "5140": 44, "51666666666665": 56, "516963": 51, "517": 53, "518924": 51, "52": [30, 45, 47, 56, 59, 60], "520": 49, "5200": 54, "520305": 59, "521": 59, "522": 49, "52283": 47, "5232": 53, "5236": 60, "52416": 47, "5249": 53, "525": 59, "526": 59, "527": [53, 59], "528352": 54, "529": [44, 48, 59], "529672": 59, "53": [38, 47, 54, 56, 58, 59, 60], "530": 59, "530a1bc71a986415176606ea377961d2ce381e5d": 49, "53127": 47, "531876": 54, "5329": 44, "534": 59, "535": 59, "538": 59, "54": [30, 49, 53, 56, 57, 59], "5432": [38, 43, 46, 58], "544": 59, "544883": 59, "546": 59, "5485": 47, "548814": 59, "549": 59, "549167": 47, "5495": 30, "5498": [38, 58], "54b9bfa9": 49, "55": [47, 49, 51, 53, 56, 59, 60], "550000": 47, "550958": 59, "551": 59, "5510": 47, "553524": 54, "555": [18, 59], "55555556": 41, "556802": 47, "559": 59, "559522": 59, "56": [45, 47, 49, 51, 57, 59], "560815": 54, "561": 53, "563": [51, 59], "5632": 53, "563737": 30, "564": 59, "565": 53, "566370614359172": 13, "567": 59, "568": 59, "569": 59, "5690374970436096": 53, "57": [1, 47, 49, 54, 56, 59, 60, 64], "57013": 47, "570164": 59, "5712": 45, "57123": 47, "5714": 44, "5715": 45, "571580": 45, "5717": 45, "572": 62, "57286429": 59, "574": 49, "574744": 59, "5776": 44, "579": 53, "57928": 47, "57aff36d5f6d": 68, "57k": 54, "58": [30, 47, 49, 51, 54, 56, 59, 60, 62, 64, 68, 71], "580": 45, "5811388300841898": 1, "581139": 47, "581506": 59, "582": 59, "584": 59, "5843": [38, 58], "5849": 47, "585": 49, "586": 59, "589": 49, "589774": 59, "589979919597745": 64, "59": [2, 3, 8, 31, 43, 47, 57, 60, 64, 68], "590": 64, "590063": 59, "5929027199745178": 53, "594": 54, "597": 59, "59701": 47, "597500": 47, "597610": 59, "599": 59, "5999": [38, 58], "5b2d760011c9255a68eb08b83b3b8759ffa25d5c": 45, "5e86": 49, "5w": [28, 64], "6": [1, 2, 5, 6, 7, 8, 9, 12, 15, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 49, 51, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68], "60": [6, 30, 38, 47, 49, 50, 51, 53, 56, 58, 59, 60, 65], "600": [43, 46, 47, 56, 64], "6000": [45, 56], "60000": [47, 56], "601": 59, "602": 47, "602763": 59, "603": 59, "604": 59, "604390": 54, "604546": 59, "605": 59, "606294": 59, "609": 59, "61": [30, 47, 59], "610": 49, "611047": 54, "612": 59, "615": 59, "616": 49, "617": 47, "618": 59, "618789": 66, "6199148843686806": 17, "61ffca": 60, "62": [8, 45, 47, 59], "620": 59, "621": 50, "623": 59, "625": 59, "626af31": 64, "627": 59, "628": 59, "629898": 59, "6299518653018685": 2, "63": [2, 38, 43, 46, 47, 49, 54, 56, 58, 59, 60, 68], "630": 53, "631": 59, "6332": 47, "63417345": 53, "636": 59, "63737": 30, "63971231": 59, "63a81f9": 49, "63ca953d": 49, "64": [20, 47, 49, 57, 59], "64001f": 69, "640px": 60, "6424": 47, "6428": 47, "6429": 47, "6430": 47, "6431": 47, "6432": 47, "6433": 47, "643e": 60, "645": 59, "645894": 59, "648865": 59, "64bit": 71, "65": [47, 49, 56, 60], "650": 57, "653668": 47, "654033": 47, "6550": 59, "6561": 44, "657": 59, "658271": 59, "6583": [38, 58], "659": [45, 59], "66": [38, 47, 53, 58], "6625": 60, "662942": 66, "665000": 47, "6666666666666665": 12, "6666666666666667": 25, "66666667": 41, "666667": 54, "667": 34, "669": 47, "669755": 54, "67": [31, 38, 51, 58, 59], "675": 59, "6750": 60, "676": [44, 59], "676099": 66, "677": 59, "677631": 47, "678": 59, "6789": 53, "679": 59, "67d190a5": 45, "68": [31, 47, 49, 51, 54, 56, 59, 60, 64], "680": 59, "681": 59, "682003": 51, "68221": 59, "683373": 47, "6871": 49, "688": 59, "688070": 59, "6889": 44, "689475": 59, "68991": 59, "69": [49, 53, 59], "691": 59, "69314718": 47, "6940": 54, "69760": 45, "698571": 45, "6d6d6d": 60, "6f": 54, "6th": 47, "6x": 25, "7": [1, 2, 5, 6, 8, 15, 18, 24, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 49, 51, 53, 54, 56, 58, 59, 60, 62, 64, 65, 66, 68, 69, 71], "70": [5, 38, 47, 54, 56, 58, 59, 60], "700": [56, 59], "7000": 56, "70000": [47, 56], "701": [47, 59], "702": 59, "703": 59, "704": 59, "704812": 66, "705": 59, "705106": 54, "705219": 59, "706": 54, "707107": 47, "707825127659933": 8, "708249": 45, "709": 53, "70kbp": 69, "71": [34, 47, 49, 51], "710": 59, "713": 53, "714": 49, "714286": 34, "714878": 47, "715189": 59, "719": 59, "72": [8, 31, 47, 49, 53, 59], "720p": 69, "722": [51, 59], "72487": 54, "726797": 59, "72738664": 59, "728383": 54, "729": 45, "7292": 54, "729800": 47, "72befa": [6, 51, 60], "72fcdb": [51, 60], "73": [31, 49, 54, 59, 64, 68], "73630214": 59, "736361": 59, "738053": 59, "74": [47, 49, 68], "741403": 54, "742436": 54, "743": 59, "744": 59, "745": [38, 58, 59], "746": 59, "747": 59, "748": 59, "749": 53, "75": [34, 38, 39, 43, 47, 49, 50, 54, 58, 59, 60, 68], "750": 56, "75000": 19, "750000": 34, "751099964370951e": 51, "754604": 47, "755238": 47, "756": 59, "759766": 59, "76": [47, 59, 60, 68], "761905": 47, "76335004": 59, "763748": 59, "765625": 59, "7671": 59, "76778119": 59, "77": [30, 43, 46, 49, 59, 60, 62, 68], "772373": 47, "774": 60, "7740": 44, "77777778": 41, "78": [2, 59, 68], "780860": 59, "784": [45, 59], "784731": 59, "7849": 54, "785": 59, "79": [45, 47, 48, 49, 56, 59, 60], "790": 59, "791": 59, "791093": 47, "792": 49, "793503": 59, "794": 59, "795": 59, "795045": 47, "795825": 47, "795979": 45, "796": 59, "796667": 47, "797": [59, 64], "797892": 59, "799": 59, "7b": 50, "7rdymcvpkx": 53, "8": [1, 2, 5, 6, 7, 8, 13, 15, 19, 20, 24, 26, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 44, 45, 47, 49, 51, 52, 53, 54, 56, 58, 59, 60, 64, 65, 66, 68, 69, 71], "80": [5, 30, 38, 47, 49, 51, 58, 59, 60, 62, 65], "800": [43, 46, 56, 64, 72], "8000": [45, 51], "80000": 47, "8000000": 31, "8003": [38, 58], "801": 59, "802": [59, 68], "803990": 59, "804": 59, "806": 59, "807": 59, "808": 59, "808787": 59, "80l": 56, "81": [44, 47, 49, 60, 71], "8100": 44, "810736": 47, "811": 49, "811983": 59, "812857": 47, "814949": 54, "816": 28, "818387": 66, "82": [47, 53, 57, 59], "820": 49, "827": 8, "82805080": 2, "828674": 45, "82e2ff": 60, "83": [8, 47, 49, 54, 56], "830": 8, "830z": 49, "8330": 45, "83374": 49, "839": 41, "839902": 66, "83it": 59, "84": [49, 54, 60, 64], "840": 41, "841": 41, "84147098": 8, "842": 41, "843": 41, "844": 41, "845": 41, "845154": 34, "846": 41, "849278": 59, "8496": 49, "85": [30, 47, 49, 53, 56, 59], "85000": 19, "8501": 53, "850358": 66, "8536": 45, "854306": 47, "856": 60, "857083": 47, "858": [48, 53], "86": [59, 60, 62], "8601": 68, "866": [38, 58], "8681": 45, "87": [48, 49, 64], "870": 64, "871115": 59, "8728": 59, "873": 48, "874e": 60, "8770": 47, "878": 59, "8796631": 48, "88": [30, 38, 47, 49, 53, 56, 58, 64, 65, 68], "880": 64, "880e": 60, "881": [49, 59], "883": 49, "8870": 45, "88888889": 41, "889": 53, "89": [47, 49, 60, 64], "890": [59, 64], "890565": 59, "8909": 47, "891206": 59, "891773": 59, "896": 59, "897": 57, "899": 49, "8ae3": 49, "8b3c": 45, "8b4513": 60, "8bf5": 45, "8ccd": 45, "8d5afd51947c": 45, "8da112101571": 45, "8fp": 69, "9": [1, 2, 5, 6, 8, 12, 13, 18, 23, 26, 28, 30, 31, 32, 33, 34, 38, 39, 41, 43, 44, 45, 47, 48, 49, 51, 53, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 71], "90": [5, 30, 38, 44, 47, 51, 53, 54, 58, 59, 65], "902": 49, "9025": 44, "9047": 49, "907": 47, "907764": 47, "90868": [38, 58], "9087": [38, 58], "90929743": 8, "90e361ab4320": 45, "90m": [38, 58], "91": [47, 49], "910": 65, "912168": 51, "913415": 59, "914995": 54, "917018": 59, "91m": 65, "91me501": 65, "91mf401": 65, "91mf821": 65, "91mf841": 65, "91mi001": 65, "92": [30, 38, 49, 53, 58, 59, 60, 64], "920": 64, "922462": 51, "922807": 51, "927": 49, "929": 33, "92mtest_calculation_without_approx": [38, 58], "92mtest_floats_are_commut": [38, 58], "93": [47, 51, 54, 56, 59, 64], "930": [33, 59, 64], "930145": 59, "930997": 59, "931": 33, "932": 33, "933": 33, "933506": 51, "933693": 51, "934431": 45, "935": 45, "936842": 51, "936971": 51, "94": [30, 45, 47, 59], "940404": 59, "943215": 51, "94336951": 59, "943880": 34, "9439": 47, "944444": 47, "946": 33, "946801": 51, "947": 33, "947368": 51, "947882": 51, "948": 33, "949": 33, "949190": 68, "949536": 51, "94m": 65, "94m0": [38, 58], "94m1": 65, "94m2": 65, "94m3": 65, "94m4": 65, "94m5": 65, "94m6": 65, "94m7": 65, "94m8": 65, "94m9": 65, "94massert": [38, 58], "94mdef": [38, 58], "95": [30, 33, 38, 47, 49, 51, 58, 59, 60, 62, 64], "950": [33, 64], "950112": 47, "950816": 51, "950877": 51, "951003": 51, "951072": 51, "9523809523809523": [15, 36], "954": [43, 46], "954014": 51, "954337": 51, "954386": 51, "954577": 51, "95503": 51, "9553": 49, "957138": 51, "959245": 51, "96": [2, 8, 47, 51, 59, 60], "960525": 51, "961089": 51, "961276": 51, "961362": 51, "961404": 51, "961444": 51, "9627": 49, "963272": 51, "963663": 59, "964739": 51, "964912": 51, "965": 8, "965052": 51, "966206": 51, "967486": 51, "968": 64, "968242": 51, "968387": 51, "968421": 51, "969594": 51, "96986": 59, "96mhelp": 65, "97": [38, 49, 58, 59], "971736": 51, "971869": 51, "97193": 51, "974448": 51, "975439": 51, "975464": 51, "975728": 51, "97670263": 59, "979942": 51, "98": [6, 49, 54, 59], "9811": 59, "9813": 59, "9814": 59, "9815": 59, "9816": 59, "9817": 59, "9818": 59, "981893": 59, "9819": 59, "9820": 59, "982357": 51, "982422": 59, "982437": 51, "982456": 51, "98269": 51, "982842": 59, "9830": 59, "9831": 59, "9832": 59, "9834": 59, "984797": 51, "985934": 51, "985965": 51, "985994": 51, "986904": 51, "987544": 51, "987778": 47, "987900": 59, "987995369763629": 51, "988": 64, "988200114690699e": 51, "989462": 51, "989474": 51, "99": [1, 13, 43, 59, 64], "990": 64, "990093": 59, "990216": 59, "9903519749641418": 43, "9908": 45, "9911543130874634": [38, 58], "994949": 47, "994981": 45, "995": 54, "995731919571047": 51, "996": [54, 59], "996031": 47, "9963": 51, "997": 54, "998": 54, "9980607796830444": 51, "9982": 60, "999": [34, 43, 48, 49, 54], "9995": 44, "9995759129524232": 43, "9996": 44, "9997": 44, "9998": 44, "999871": 66, "9999": [44, 68], "999999": 68, "A": [1, 4, 5, 11, 15, 28, 29, 30, 32, 33, 36, 37, 39, 45, 46, 47, 48, 49, 50, 51, 53, 56, 64, 65, 66, 68], "AND": [45, 49, 56], "AS": [43, 44, 46, 56], "AT": 41, "And": [48, 49, 53, 60, 64], "As": [4, 31, 45, 47, 49, 51, 54, 56, 62, 64, 65], "At": 6, "BE": 47, "BY": [43, 44, 46, 47, 56], "Be": [49, 50], "But": [24, 25, 53, 54, 59, 64], "By": [1, 6, 30, 31, 38, 39, 47, 49, 51, 53, 56, 58, 59, 65, 66, 69], "For": [1, 2, 5, 12, 18, 23, 30, 31, 37, 38, 39, 44, 45, 47, 49, 51, 56, 58, 59, 60, 62, 65, 66, 67, 69, 72], "IF": [43, 47, 50], "IN": 47, "INTO": [38, 43, 50, 58], "If": [1, 2, 4, 5, 7, 8, 9, 11, 12, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 73], "In": [1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 36, 38, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 71], "It": [1, 2, 6, 13, 15, 20, 25, 33, 36, 38, 39, 48, 49, 51, 52, 53, 54, 56, 58, 59, 60, 62, 64, 66, 67, 68, 69], "Its": 65, "NO": 49, "NOT": [43, 50], "No": [15, 36, 38, 47, 49, 50, 51, 53, 58, 60, 62, 64, 65], "Not": [44, 45, 51], "ON": 43, "OR": 43, "On": [23, 38, 49, 51, 53, 54, 57, 58, 63], "One": [25, 31, 37], "Or": [31, 50], "THEN": 56, "That": [1, 15, 18, 24, 25, 36, 37, 38, 58, 59, 60, 63, 64, 66, 67, 68, 69, 73], "The": [1, 4, 12, 13, 18, 22, 23, 24, 25, 28, 30, 31, 35, 37, 39, 41, 43, 44, 46, 47, 49, 50, 51, 54, 56, 57, 63, 64, 65, 66, 67, 68, 69], "Then": [49, 53, 54, 64, 69, 71], "There": [12, 28, 38, 51, 53, 58, 69], "These": [1, 6, 38, 51, 62], "To": [1, 2, 4, 5, 6, 7, 9, 12, 13, 15, 18, 20, 21, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69], "Will": [38, 58, 62], "With": [1, 5, 6, 18, 19, 25, 31, 45, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 62, 64, 66, 67, 68, 69], "_": [1, 11, 13, 15, 17, 31, 36, 38, 49, 51, 57, 58, 60, 62, 64], "_1": 52, "_2": 52, "__": [57, 64], "___": 64, "____": 64, "__________________": 65, "________________________": [38, 58], "______________________________": [38, 58], "___init__": 18, "__add__": 1, "__beartype_conf": 65, "__beartype_func": 65, "__beartype_get_viol": 65, "__beartype_getrandbit": 65, "__class__": 68, "__cluster": 53, "__doc__": [5, 63], "__eq__": [1, 18], "__getitem__": 33, "__init__": [1, 18, 26, 38, 56, 57, 58, 62, 64, 65, 66], "__languag": 53, "__main__": [1, 26, 38, 56, 58, 62, 63, 64, 65, 68, 69], "__name__": [1, 5, 26, 38, 58, 63, 64, 65, 68, 69], "__pii__ani": 53, "__pii__credenti": 53, "__pii__email": 53, "__pii__phon": 53, "__post_init__": [18, 23], "__price": 1, "__pycache__": 65, "__pydantic_self__": 65, "__pydantic_validator__": 65, "__repr__": 18, "__root__": 51, "__slots__": 1, "__tracebackhide__": 65, "_balanc": 1, "_check_reg_target": 68, "_decor": 53, "_delta_log": 45, "_df1": 29, "_df2": 29, "_equity_curv": 59, "_get_axi": 33, "_get_slice_axi": 33, "_getbool_axi": 33, "_getitem_axi": 33, "_io": 62, "_is_scalar_access": 33, "_nc_cat": 49, "_nc_ht": 49, "_nc_ohc": 49, "_nc_sid": 49, "_openml": 60, "_predict": 51, "_price": 62, "_privat": 41, "_reconstruct": 62, "_regress": 68, "_run_cod": 57, "_strategi": 59, "_take_with_is_copi": 33, "_ticket": 62, "_trade": 59, "_valu": 33, "_x": 29, "_y": 29, "a12f4d7e2f35": 45, "a277ff": 60, "a2l": 41, "a39160639": 49, "a6813d0c": 45, "a_th": 49, "aa": 46, "aapl": 56, "ab": [44, 51, 56, 60], "ab_test": [38, 58], "abbrevi": [38, 58], "abc": [1, 6, 26], "abc456": 20, "abcd": [7, 9, 49], "abey79": 60, "abi": 49, "abi64str1": 54, "abil": [25, 53, 59, 62], "abl": 67, "about": [1, 2, 6, 11, 23, 38, 44, 47, 48, 50, 51, 52, 54, 56, 58, 62, 63, 64, 66, 67, 68, 69], "abov": [4, 12, 13, 15, 18, 24, 26, 36, 37, 38, 41, 46, 47, 48, 49, 51, 54, 56, 58, 59, 60, 64, 65, 67], "abr": 69, "absenc": [59, 60], "absolut": [22, 41, 59], "abstain": 47, "abstract": 6, "abstractmethod": 1, "academi": 49, "acc": 47, "acceler": 54, "accept": [1, 4, 5, 6, 23, 51, 64, 67], "access": [1, 4, 6, 10, 13, 17, 18, 21, 30, 38, 43, 44, 45, 46, 51, 53, 56, 58, 72], "accident": 1, "acco": 47, "accomplish": 6, "accord": 53, "account": [1, 45, 47, 51, 59], "acct_id": 52, "accumul": 45, "accur": [6, 38, 58, 59, 69], "accuraci": [47, 51, 59, 64], "accuracy_scor": 51, "achiev": [6, 11, 19, 47, 54, 59, 64], "acid": [45, 49, 54], "acodec": 69, "acquir": 53, "across": [1, 5, 17, 19, 43, 47, 50, 51, 53, 56, 59, 62, 64, 68], "act": 59, "action": [6, 45, 47, 53, 56, 60, 65, 67], "activ": [43, 45, 60, 66, 68, 69], "actual": [6, 38, 48, 52, 56, 58, 59, 65, 69], "actual_df": 56, "actual_output": [38, 58], "ad": [5, 6, 23, 25, 38, 43, 44, 45, 46, 49, 51, 53, 56, 58, 62, 65, 68, 69], "adaboostclassifi": 51, "adam": 60, "adapt": [26, 53], "add": [1, 4, 5, 6, 9, 14, 19, 23, 24, 25, 29, 30, 38, 39, 43, 45, 47, 49, 50, 52, 53, 55, 56, 58, 62, 63, 64, 65, 66, 67, 69], "add_argu": 64, "add_bodi": 48, "add_column": [38, 58], "add_constraint": 45, "add_data_fram": 60, "add_df": 60, "add_head": 48, "add_keyword": 53, "add_metric_sc": 54, "add_new_featur": 6, "add_num": 19, "add_numb": [5, 64], "add_on": 6, "add_pag": 48, "add_seri": 60, "add_slid": 60, "add_start_index": 50, "add_strategi": 1, "add_thre": 2, "add_to": 60, "add_to_dataset": 6, "add_to_ord": 5, "add_two": [38, 58], "addit": [1, 6, 23, 31, 38, 46, 54, 58, 66], "addition": [38, 58], "address": [18, 38, 43, 44, 46, 48, 49, 50, 56, 57, 58, 60, 62, 64, 69], "adeli": 60, "adjust": [18, 34, 44, 45, 51, 56, 64], "adjust_text": 60, "adjusttext": 60, "administr": [47, 49], "adress": 69, "adult": 47, "advanc": [44, 51, 59, 68], "advantag": [31, 51, 56], "advers": 59, "adversari": 49, "adversarial_model_param": 49, "advis": 49, "advoc": 47, "aeneid": 49, "affair": 47, "affect": [18, 30, 60], "afford": 47, "afghanistan": 47, "aforementio": 47, "africa": [30, 64], "after": [6, 13, 30, 31, 45, 47, 48, 49, 51, 53, 57, 59, 65, 66, 68], "ag": [1, 4, 13, 18, 23, 38, 43, 46, 47, 49, 55, 56, 58, 59, 60, 62, 69], "again": [6, 12, 48, 69], "against": [6, 38, 43, 46, 56, 58, 60, 66], "age1": 13, "age2": 13, "age_after_10_year": 56, "age_in_10_year": 56, "age_na": 47, "agenc": 47, "agent": 47, "agg": [38, 43, 46, 54, 56, 58], "agg_method": 39, "aggfunc": 39, "aggreg": [9, 20, 43, 46, 54, 56, 59], "aggregationdepth": 51, "aggress": 49, "agn": 49, "agnostic": 47, "agustin": 49, "aha": 25, "ahead": [1, 59], "ahem": 53, "ai": [49, 69], "aic": 59, "aid": 47, "aileennielsen": 59, "air": 59, "airborn": 60, "airfi": 47, "airpasseng": 59, "airpassengersdf": 59, "airport": 54, "albert": 49, "aldi": [24, 38, 39, 58, 62], "alex": [4, 43, 45, 46, 56], "algebra": 25, "algo": [51, 59], "algorithm": [43, 51, 53, 59, 60, 62], "alia": [45, 54, 56], "alias": [43, 62], "alias1": 43, "alic": [4, 18, 31, 38, 43, 45, 46, 56, 58], "align": [38, 58, 59, 62, 64], "all": [1, 13, 14, 15, 17, 18, 20, 24, 25, 32, 36, 39, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 73], "all_fruit": 14, "allcap": 53, "allow": [1, 2, 5, 8, 9, 10, 12, 13, 15, 17, 20, 24, 25, 26, 28, 30, 32, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 51, 52, 53, 56, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 72], "almanac": 64, "along": [28, 39, 48, 59, 66], "alongsid": [43, 46, 52], "alpha": [51, 59, 68], "alpha_part": 20, "alphabet": [47, 53, 60, 65, 68], "alphavantage_api_kei": 49, "alreadi": [44, 45, 53, 56, 59, 68], "also": [1, 2, 4, 6, 8, 15, 23, 24, 25, 28, 30, 32, 36, 37, 38, 41, 43, 45, 46, 47, 48, 50, 51, 52, 53, 58, 59, 60, 62, 63, 64, 66, 67, 68, 71, 72], "alter": [1, 45], "altern": [1, 4, 24, 31, 47, 49, 51], "although": [6, 51], "alto": 49, "altogeth": 62, "alwai": [35, 38, 47, 51, 58, 64, 69], "always_check_safeti": 62, "am": [15, 36, 38, 47, 53, 58, 60], "amaz": 25, "amazingli": 43, "amazon": 59, "amazonaw": [59, 60], "ambigu": 41, "america": [30, 48], "among": [49, 70], "amont": 47, "amount": [30, 47, 51, 54, 56, 59], "amp": 47, "amplitud": 6, "an": [1, 3, 4, 10, 11, 12, 13, 14, 18, 19, 23, 24, 30, 31, 33, 37, 38, 39, 43, 44, 45, 47, 48, 50, 52, 54, 56, 57, 58, 59, 62, 63, 64, 65, 67, 68, 73], "analys": 33, "analysi": [27, 43, 46, 47, 48, 53, 62, 64, 66, 68, 69], "analysisresult": 62, "analyst": [47, 52, 53, 57, 59], "analyz": [1, 15, 36, 39, 43, 44, 46, 49, 59, 60], "analyze_custom_df": 1, "analyze_data": 1, "analyze_numpy_arrai": 1, "analyze_pandas_seri": 1, "analyze_sales_panda": 54, "analyze_sales_polar": 54, "angel": [38, 46, 58], "ani": [1, 5, 6, 23, 33, 38, 47, 49, 50, 53, 54, 58, 59, 60, 62, 65, 67, 69, 72, 73], "anim": [1, 49, 62], "ann": 59, "anna": 60, "annot": [38, 43, 47, 50, 53, 58, 64], "annot_kw": 47, "anomali": [51, 59], "anoth": [1, 6, 9, 12, 14, 24, 25, 38, 39, 44, 45, 47, 49, 58, 59, 60, 62, 65, 66], "ansi": 43, "answer": [49, 50, 53, 59, 64], "antarctica": 64, "anticip": 49, "antlr": 45, "antlr4": 45, "any_but_spac": 62, "anybodi": 18, "anybutwhitespac": 62, "anyio": [38, 58], "anyon": 51, "anyth": 47, "ap": 60, "apach": [31, 44, 45, 51, 54, 56], "apart": [3, 47], "apear": 51, "api": [23, 38, 51, 52, 54, 59, 69], "api_kei": [49, 50, 59], "api_token": 44, "app": [51, 60, 64, 66, 69], "appeal": 64, "append": [1, 6, 8, 17, 18, 20, 43, 44, 46, 48, 54, 56, 60, 65], "append_four": 6, "appl": [1, 4, 5, 7, 9, 13, 14, 15, 17, 20, 21, 24, 26, 28, 29, 33, 34, 36, 38, 39, 43, 44, 50, 51, 52, 53, 56, 58, 60, 62, 65], "appli": [1, 4, 5, 6, 10, 24, 30, 31, 37, 41, 47, 48, 53, 56, 59, 60, 62, 65, 68, 69], "applic": [38, 44, 45, 50, 51, 53, 56, 57, 58, 64, 65, 67, 69, 72], "applier": 47, "apply_and_annot": 60, "apply_discount": 62, "apply_if_cal": [33, 57], "applymap": 28, "appnam": 45, "appreci": 49, "approach": [1, 4, 5, 6, 10, 13, 25, 28, 38, 45, 47, 50, 51, 53, 54, 56, 58, 60, 64, 68], "appropri": [18, 19, 38, 51, 58], "approv": 49, "approx": 59, "approxim": [2, 23, 25, 30, 31, 43, 45, 46, 54], "april": [44, 49], "apt": 64, "aquariu": 47, "aquarium": 47, "aquat": 48, "ar": [1, 2, 4, 5, 6, 9, 10, 11, 12, 14, 15, 18, 20, 26, 28, 29, 31, 32, 33, 34, 36, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 72], "ar6": 50, "arab": [47, 53], "arang": [8, 41, 51, 59, 60], "aratherblusterdai": 53, "arbitrari": [52, 62, 68], "architectur": [59, 71], "area": [13, 44, 53, 59, 60, 67], "area1": 44, "area2": 44, "arg": [5, 26, 35, 50, 51, 53, 62, 63, 64, 65, 68], "argent": 49, "argmax": 41, "argparse_exampl": 64, "argsort": [51, 53], "argument": [9, 15, 23, 26, 34, 36, 38, 51, 53, 54, 58, 60, 64, 65, 66, 68], "argumentpars": 64, "argv": 63, "ari": 53, "arial": 48, "arithmet": [1, 38, 58, 59], "arm": 49, "arma_data": 59, "around": [2, 5, 49, 58, 60, 65], "arr": [6, 8, 41], "arr1": 41, "arr2": 41, "arrai": [1, 6, 8, 24, 33, 35, 43, 47, 49, 51, 59, 60, 64, 65, 68], "arrang": 65, "array_append": 56, "array_contain": 56, "array_distinct": 56, "array_prepend": 56, "array_to_latex": 41, "arraytyp": 56, "arrow": [31, 43, 46], "art": [51, 53], "articl": [38, 49, 58, 62, 63, 64, 66, 68, 72], "artifact": [45, 48, 51], "artifact_path": 51, "artist": [23, 47, 49], "arztotzka": 49, "as_fram": [31, 49, 51, 52, 57, 60], "as_retriev": 50, "ascend": 64, "ascii": 68, "asctim": 68, "asham": 47, "asia": [30, 47, 59, 64], "asian": 47, "ask": [47, 53, 56, 58], "ask_to_sign_in": 6, "assembl": [49, 51], "assert": [41, 50, 56], "assert_array_compar": 41, "assert_array_equ": 41, "assert_called_onc": [38, 58], "assert_called_once_with": [38, 58], "assert_test": [38, 58], "assertdataframeequ": 56, "assertionerror": [38, 41, 56, 58], "assesford": 49, "assess": [38, 58], "asset": [51, 59], "assetsmanag": 51, "assign": [1, 4, 11, 13, 18, 47, 54, 56, 57, 65], "assign_category_label": 56, "assignment_categori": 47, "assist": 50, "associ": [47, 59, 62], "assum": [1, 4, 38, 43, 45, 46, 50, 58, 62], "assumpt": [1, 38, 47, 58, 62, 69], "astimezon": [59, 68], "asttoken": 68, "astyp": [28, 31, 35, 48, 60], "asynchron": 67, "atheism": 47, "athlet": 47, "attempt": [1, 33, 44, 45, 56, 65], "attend": [8, 59], "attr": [4, 17, 66], "attr1": 49, "attr2": 49, "attr3": 49, "attr4": 49, "attr5": 49, "attr6": 49, "attract": 53, "attribut": [5, 13, 17, 18, 23, 26, 68], "attribute_nam": 1, "attributeerror": [1, 5], "attrs_tim": 23, "aubin": 49, "auc": 51, "auc_roc": 64, "audienc": 60, "audio": 69, "audit": 45, "auditor": 47, "aug": 53, "aug_src": 53, "augmented_text": 53, "august": 44, "aura": 60, "australia": [49, 59, 64], "australian": 47, "auth": 52, "auth_": 55, "authent": [52, 67], "author": [18, 67], "auto": [1, 49, 51, 60], "auto_arima": 59, "auto_save_png": 60, "autoarima": 59, "autobio": 47, "autoencod": 64, "autoet": 59, "autoincr": [43, 50], "autom": [47, 51, 65, 66], "automak": 49, "automat": [18, 23, 31, 38, 43, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 62, 67, 68], "automated_readability_index": 53, "automodel": [50, 53], "autonotebook": [59, 60], "autospec": 58, "autotoken": 53, "autoweek": 49, "autumn": 59, "av": 49, "ava": 49, "avail": [18, 26, 44, 47, 51, 54, 58, 59, 65, 66, 68], "avc1": 69, "avebedrm": 51, "aveoccup": 51, "averag": [2, 5, 38, 44, 47, 56, 57, 58, 59], "average_2_num": [38, 58], "averoom": [51, 57], "avg": [38, 43, 45, 46, 56, 58, 59], "avg_revenu": [43, 46], "avoid": [1, 5, 13, 18, 24, 30, 38, 54, 58, 65, 66], "aw": [52, 53, 62], "awai": [59, 68, 69], "awar": [68, 72], "awesom": [47, 49, 50], "awkward": 47, "aws_access_kei": 52, "aws_access_key_id": 52, "aws_auth": 52, "aws_dir": 52, "aws_secret_access_kei": 52, "aws_secret_kei": 52, "awsauth": 52, "awss3dir": 52, "ax": [39, 48, 49, 51, 53, 59, 60], "ax0": 51, "ax1": 51, "axel": 64, "axessubplot": [48, 49, 51, 60], "axi": [5, 6, 28, 31, 33, 34, 39, 41, 49, 54, 59, 60], "ayu": 60, "azur": 49, "b": [1, 5, 6, 7, 9, 11, 12, 15, 17, 19, 20, 24, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 53, 54, 56, 58, 59, 60, 62, 64, 65, 66, 68, 69, 71], "b01bf8b7ae1a": 24, "b23": 17, "b28f": 45, "b5c9640f": 45, "b946": 45, "babi": 53, "bachelor": 47, "back": [6, 12, 25, 38, 43, 49, 54, 58, 59], "backend": [31, 47, 53, 60], "background": 47, "background_gradi": 37, "backslash": [15, 36], "backtick": 43, "backyard": [49, 60], "bacon": 53, "bad": [1, 6, 53, 65, 69], "badli": 49, "baffin": 64, "bag": 47, "baggingclassifi": 51, "bai": [47, 60], "bake": 53, "balanc": [1, 45, 51, 59], "banana": [4, 7, 14, 15, 20, 21, 36, 38, 43, 44, 50, 52, 53, 56, 58], "band": [47, 49], "bangalor": 47, "bank": [47, 64], "bankaccount": 1, "bannon": 53, "banter": 47, "bar": [43, 53, 56, 60], "bar_bas": 60, "bark": [26, 38, 58, 60], "barplot": [53, 60], "base": [1, 6, 13, 26, 34, 37, 43, 46, 47, 49, 50, 51, 53, 54, 56, 59, 60, 64, 68], "base64": 49, "basefont": 48, "basemodel": [23, 50, 65], "basic": [13, 45, 50, 59, 68, 72], "basic_plan": 13, "basicconfig": 68, "basil": 49, "batail": 47, "batch": [43, 49, 54], "batch_siz": [20, 49], "bathroom": 69, "batteri": [47, 60], "bayesian": 59, "bc": 60, "bdai": 32, "beani": 49, "bear": 59, "bearer": 67, "beartypecallhintparamviol": 65, "beats_per_minut": 23, "beauti": [51, 53, 60], "becaus": [1, 2, 4, 5, 6, 15, 20, 22, 25, 33, 36, 38, 49, 51, 53, 58, 62, 66, 69, 72], "beckett": 47, "becom": [5, 6, 20, 38, 43, 48, 49, 58, 59, 65], "bed": 4, "bedienend": 47, "bedroom": 69, "been": [30, 51, 55, 59, 67], "beequal": 51, "befor": [4, 13, 23, 26, 30, 37, 38, 43, 47, 49, 51, 53, 54, 56, 57, 58, 59, 62, 65, 66, 67], "beforehand": 53, "begin": [3, 20, 37, 41, 49, 51, 54, 63, 64, 68], "beginn": 49, "behav": 38, "behavior": [4, 5, 18, 29, 38, 45, 49, 51, 56, 58, 59], "behind": [53, 56], "being": [6, 15, 36, 46, 47, 48, 49, 53, 57, 62, 68, 71], "believ": 23, "bell": [49, 64], "belong": 60, "below": [1, 3, 4, 5, 6, 7, 8, 9, 12, 15, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 43, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 71], "belveder": 47, "ben": [4, 39, 43, 46, 60, 62], "benchmark": 23, "benefit": [6, 45, 47, 54, 56, 59], "benko": 49, "berkelei": 47, "berlin": [43, 46], "bernoullinb": 51, "berri": [28, 53], "berriai": 49, "besid": 8, "best": [6, 47, 50, 53, 59, 65], "better": [2, 4, 5, 6, 10, 13, 28, 30, 38, 47, 51, 54, 56, 58, 59], "between": [1, 6, 13, 14, 29, 31, 39, 43, 44, 47, 50, 53, 55, 56, 59, 65, 66, 68, 69], "beuti": 53, "beyond": [48, 51], "bfill": 49, "bfloat16": 59, "bias": [38, 47, 49, 50, 51, 58], "bid": 56, "big": [47, 49, 53, 54], "bigint": 56, "bigqueri": 43, "bike_sharing_dc": 60, "bill": [47, 48, 51], "bill_depth_mm": 60, "bill_length_mm": 60, "bim": [1, 13, 18, 23, 26], "bin": [19, 38, 58, 60, 66], "binari": [43, 51], "bincount": 47, "bind": [44, 56], "bind_opt": 62, "binomi": 51, "biologi": 48, "birmingobject": 49, "birmingpoop": 49, "birth_year": 4, "birthdai": [47, 59], "bit": 44, "bite": 72, "bk4o05ihmgqsynk2": 69, "black": [1, 18, 49, 51, 53, 59, 65], "blast": 1, "blazingli": [38, 58], "blob": [47, 51, 53], "block": [6, 51, 65], "blog": 53, "blogspot": 53, "blond": 47, "blue": [6, 59, 64], "blueberri": 60, "bluster": 53, "bluth": 52, "bmatrix": 41, "bo": 60, "boatbench": 49, "bob": [23, 38, 43, 45, 46, 52, 56, 58], "boba": 50, "bodi": [48, 50], "body_typ": 47, "boerum": 47, "boil": 49, "boilerpl": [5, 38, 58, 62, 64], "bokeh": 60, "bold": [48, 49], "bonu": 19, "bonus_level": 19, "book": [13, 18, 22, 33, 35, 38, 41, 44, 45, 47, 49, 51, 53, 56, 58, 60, 62, 64, 65, 66, 68], "book1": 18, "book2": 18, "bool": [6, 33, 68], "boolean": [49, 53], "boolqgen": 53, "boot": 49, "bore": 25, "borneo": 64, "borough": 47, "bot_filter_quantil": 49, "both": [6, 8, 29, 33, 38, 39, 43, 45, 46, 50, 51, 53, 54, 56, 59, 65, 66, 67, 68], "boto3": 62, "botswana": 47, "bottleneck": [50, 57, 68], "bottom": [19, 49], "bottomrul": 37, "bottomup": 59, "boudinfl": 53, "bought": 24, "boulder": 53, "bound": [34, 51, 56, 59], "boundari": 68, "bowl": 49, "box": [49, 51, 59, 60], "boxcox": 59, "boxcox1p": 57, "boxcoxendogtransform": 59, "boxplot": 60, "boxprop": 60, "br": [47, 53], "bracket": [15, 24, 33, 36, 64], "braeburn": 60, "branch": [38, 58, 64], "breach": 63, "break": [6, 15, 36, 43, 56, 68], "breakag": 49, "breakdown": [44, 64], "breakfast": 1, "breed": 49, "brew": 64, "bridg": [47, 52, 60], "bring": [49, 53, 56], "brisban": 59, "britain": 64, "brittl": [49, 56], "broader": 6, "broadwai": 49, "broadwayworld": 49, "broccoli": 47, "broccqli": 47, "broccsli": 47, "brocroli": 47, "brojcoli": 47, "broke": 66, "broker": 59, "bronx": [47, 60], "brooklyn": [47, 60], "brouwn": 53, "brown": [1, 45, 49, 51, 53, 56], "browser": [51, 53, 68], "brzccoli": 47, "bt": 59, "bu": 49, "bucket": [52, 62], "buffer": 44, "bufferedread": 62, "bug": [6, 9, 62, 69], "bui": [49, 59], "build": [48, 49, 50, 59, 60, 65, 66], "build_depend": 51, "build_err_msg": 41, "build_payload": 49, "build_time_seri": 49, "builder": [45, 51, 56, 59], "built": [6, 12, 17, 19, 20, 21, 23, 38, 45, 51, 56, 57, 58, 59, 60, 62, 64, 67], "builtin": [44, 45, 56], "bulb": 69, "buri": 47, "bushwick": 47, "busi": [32, 56, 59], "bussi": 60, "button": [69, 73], "buyer": 49, "bxoccoli": 47, "by_lett": 7, "by_pric": 7, "byproduct": 47, "byte": [31, 32, 49, 51, 53, 57], "bytes_or_buff": 68, "b\u00e2t": 49, "c": [1, 5, 6, 7, 9, 11, 17, 28, 29, 31, 33, 34, 38, 39, 43, 44, 45, 47, 48, 49, 51, 53, 54, 56, 58, 59, 60, 64, 68], "c57e456e8a0768326655a8b52cde4f47": 51, "c_a": 1, "c_b": 1, "ca": [38, 46, 58], "cach": 45, "cachedir": [38, 58], "calcul": [1, 13, 43, 51, 54, 57, 59, 60, 62, 68], "calculate_averag": [38, 58], "calculate_discounted_pric": 62, "calculate_grad": [5, 38, 58], "calculate_perimet": 44, "calculate_polygon_area": 44, "calculate_similar": 51, "calculate_someth": 65, "calculate_statist": 65, "calculu": 25, "calendar": [3, 59], "calibr": 51, "calibratedclassifiercv": 51, "calibration_precis": [38, 58], "california": [47, 49, 51, 57, 60], "california_data_drift_report": 60, "call": [4, 5, 6, 9, 12, 13, 17, 20, 24, 26, 33, 38, 41, 43, 45, 46, 47, 48, 49, 50, 53, 54, 56, 58, 59, 60, 63, 64, 65, 67, 68, 69], "call_ord": 51, "call_param": 50, "callable_exampl": 26, "caller": [5, 33], "calmar": 59, "calori": 49, "camp": [47, 49], "campaign": [49, 59], "can": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73], "canberra": 59, "cancel": 68, "cancer": [47, 53], "candid": [31, 53], "cannot": [1, 6, 20, 24, 25, 26, 56, 62], "canva": 49, "capabl": [1, 43, 45, 46, 50, 53, 54, 56, 59, 69], "cape": 49, "capit": 68, "capita": 47, "caplog": [38, 58], "capp": 49, "capprop": 60, "caption": 48, "captur": [38, 47, 48, 53, 58, 59, 67], "car": [49, 59], "caramel": 53, "carat": 47, "carbohydratecont": 49, "card": [47, 60], "cardin": [31, 47, 48], "care": [6, 11, 12, 38, 58, 62], "career": 49, "caribbean": 30, "carri": 53, "carrot": [17, 49, 50], "cart": 5, "case": [6, 13, 37, 41, 43, 47, 51, 53, 56, 59, 64, 68, 71, 72], "casefold": 68, "caseless": 68, "cash": [47, 59, 60], "cast": [43, 49], "casual": 60, "cat": [28, 33, 35, 43, 47, 51, 53, 56, 60, 65], "cat1": [33, 47, 54], "cat1_a": 47, "cat1_b": 47, "cat1_c": 47, "cat2": [33, 47, 54], "cat2_i": 47, "cat2_x": 47, "cat2_z": 47, "cat_col": 49, "cat_featur": [38, 58], "cat_nam": [47, 48], "catalog": [45, 59], "catch": [56, 62, 65, 67, 68, 69], "categor": [49, 54], "categori": [31, 33, 35, 50, 53, 54, 56, 59, 60], "categorical_column": 51, "categorical_featur": 47, "categorical_transform": [47, 51], "categorical_var": 63, "categorifi": 47, "categorymismatchtraintest": [38, 58], "categorypricestri64": 54, "categoryquantitypricestri64f64": 54, "categoryquantitypricestri64i64": 54, "caught": 65, "caus": [5, 6, 19, 28, 32, 47, 50, 53, 56, 63, 65], "causalimpact": 59, "caveat": 28, "cb": 49, "cc": 63, "ccb": 49, "cd": [47, 51, 60, 67, 69], "cd28": 45, "cdot": 64, "ceb": 53, "celeb": 64, "celebr": 49, "celin": 47, "cell": [1, 4, 5, 6, 9, 41, 48, 49, 51, 59, 62, 64, 65, 71], "celsiu": 62, "censor": 53, "center": [1, 47, 48, 49, 51, 60, 68], "central": [30, 45, 47, 49, 56, 59, 60], "centuri": 47, "ceo": 49, "certain": [3, 18, 24, 31, 38, 53, 54, 58, 62, 68, 69], "cgocol": 47, "ch": 50, "ch0000052": 41, "ch0000053": 41, "chad": 47, "chain": [47, 50, 54, 62], "chained_assign": 28, "chair": [4, 49], "challeng": [6, 20, 38, 43, 48, 51, 53, 57, 58, 59, 62, 63, 64, 65], "challenger_deep": 60, "champion": 49, "chan": 49, "chanc": [1, 59], "chang": [1, 5, 6, 15, 18, 19, 30, 31, 32, 36, 37, 38, 43, 45, 49, 50, 51, 52, 53, 56, 58, 60, 62, 63, 65, 67, 71], "changes_to_hydra_main_config_path": 63, "channel": [51, 69], "chao": 49, "chapter": [0, 16, 27, 40, 42, 61, 70], "chapter1": 13, "chapter2": 22, "chapter4": [38, 41, 58], "chapter5": [38, 51, 58], "chapter6": [65, 66], "char": [6, 17, 20, 53, 68], "char_count": 17, "char_list": 17, "charact": [20, 33, 53, 62, 65, 68], "characterist": [38, 58, 60], "charli": [43, 46, 56], "chars_2": 9, "charset": 66, "chart": 53, "chart_typ": 60, "chase": [43, 46], "chat": 53, "che": 47, "check": [1, 4, 12, 13, 20, 23, 26, 30, 45, 47, 49, 52, 53, 59, 66, 67, 68, 69], "check_ag": 23, "check_bool_index": 33, "check_consistent_length": 68, "check_input": [38, 58], "check_mention_fruit_1": 7, "check_mention_fruit_2": 7, "check_ord": [38, 58], "check_output": [38, 58], "check_typ": [38, 58], "checker": 26, "checkingclassifi": 51, "checkout": [52, 67], "cheek": 53, "cheeseburg": 53, "chef": 47, "cherri": [14, 28, 49], "chia": 53, "chicago": 60, "chicken": [60, 62], "child": 1, "children": [6, 49, 53, 59], "chili": 49, "chime": 69, "chines": 47, "chip": 53, "chocdlat": 47, "chocol": [47, 60], "chocolatw": 47, "chocoltt": 47, "choic": [5, 22, 23, 31, 50, 54, 56, 64, 65], "cholesterolcont": 49, "choos": [19, 31, 33, 51], "chop": 49, "chosen": 20, "chqcolat": 47, "christian": 47, "christma": 59, "christoph": 47, "chroma": 50, "chromadb": [50, 53], "chrome": 69, "chronolog": 47, "chronospipelin": 59, "chunk_overlap": 50, "chunk_siz": 50, "chunksiz": [30, 45], "ch\u00edn": 53, "ci": 59, "cicl": 60, "cilantro": 49, "cinnamon": 49, "circl": [13, 48], "circle_area": 6, "citi": [18, 38, 43, 46, 47, 49, 56, 58, 60], "ck": 53, "cl": 1, "clariti": [47, 59, 62, 68], "class": [6, 13, 17, 31, 32, 43, 44, 45, 47, 48, 50, 51, 53, 55, 56, 57, 59, 62, 64, 65, 68, 72], "class_sep": [47, 51], "classdiagram": 60, "classic": 59, "classif": [43, 51], "classifi": [47, 59, 60], "classification_report": 65, "classmethod": 1, "clean": [18, 59, 60, 64, 65, 66, 67], "clean_cod": 64, "clean_data": 65, "clean_nam": 53, "cleaned_text": 53, "cleaner": [4, 6, 38, 48, 58, 62], "cleanest": 17, "cleans": 53, "cleanup": [38, 45, 58, 65], "clear": [6, 13, 38, 45, 50, 51, 56, 58, 59, 62, 64, 65, 68], "clearer": 6, "clearli": [51, 56], "clf": [51, 59], "clf1": 51, "clf2": 51, "clf3": 51, "clf_name": 51, "click": [30, 53, 54, 60, 69, 73], "click_exampl": 64, "client": [47, 50, 53, 62], "climat": 50, "climate_qa_chain": 50, "climb": 53, "clinton": 53, "clipper": 53, "clone": 67, "close": [43, 44, 49, 50, 53, 58, 59, 69], "closer": [15, 36, 49], "closest": 47, "closur": 53, "cloth": 54, "cloud": [52, 53, 73], "cloudpickl": 51, "clove": 49, "club": 49, "cluster": [1, 47, 51, 53, 60], "cluster_id": 53, "cluster_s": 53, "clutter": [56, 65, 68], "cm": [31, 48], "cmap": [37, 47, 60], "cmpare": [38, 58], "cmpreq": 66, "cnn": 53, "co": [25, 53, 64], "co2": 51, "coast": 59, "coco": 1, "coconut": 49, "code": [4, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 32, 34, 41, 44, 45, 46, 50, 52, 54, 55, 62, 66, 72, 73], "codebas": 19, "codec": 68, "codecut": 72, "coeffici": 51, "coercion": 43, "coffee_typ": 50, "cognit": 60, "coher": [59, 60], "coincid": 59, "col": [2, 28, 35, 38, 53, 54, 56, 58], "col0": 33, "col1": [28, 30, 31, 33, 35, 37, 38, 39, 45, 48, 57, 58, 68], "col2": [28, 30, 31, 33, 35, 37, 38, 39, 45, 48, 57, 58, 68], "col3": [28, 31, 39, 45, 48], "col4": 28, "col_index": 28, "col_nam": 28, "colab": 73, "colbert": 49, "cold": 50, "coll": 39, "collabor": 51, "collaps": 60, "colleagu": 66, "collect": [6, 10, 14, 16, 38, 39, 49, 50, 51, 53, 54, 56, 58, 59, 60, 68, 69], "collectio": 49, "colleg": 47, "colnam": 47, "color": [1, 4, 6, 18, 24, 47, 51, 52, 53, 59, 60, 64, 68], "color_list": 60, "color_nam": 49, "color_scor": 60, "colorado": 53, "colorama": 68, "colors10": 60, "colors5": 60, "columbu": 59, "column": [2, 6, 19, 38, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 57, 58, 60, 64, 66], "column_format": 37, "column_id": 59, "column_map": 60, "column_ord": 43, "column_sort": 59, "columnar": 45, "columns_alias": 43, "columns_dict": 43, "columntransform": [47, 51], "com": [1, 4, 18, 30, 33, 43, 44, 45, 46, 47, 48, 49, 53, 55, 59, 60, 62, 65, 67, 69], "comb": [9, 20], "combin": [1, 4, 9, 10, 14, 39, 43, 45, 46, 47, 48, 49, 50, 51, 54, 56, 59, 60, 62, 68], "combined_df": [43, 46], "come": [1, 15, 18, 23, 24, 25, 36, 38, 48, 53, 58, 59, 60, 63, 66, 67, 68, 69], "comma": [28, 66], "command": [43, 44, 49, 51, 59, 65, 66, 67], "comment": [6, 67], "comment_karma": 54, "commiss": 59, "commit": [38, 43, 47, 50, 52, 58, 65, 69], "common": [4, 11, 13, 14, 15, 25, 30, 36, 38, 39, 43, 46, 47, 48, 50, 51, 54, 56, 57, 62, 69], "common_fruit": 14, "commonli": 10, "commun": [47, 72], "commut": [38, 58], "compact": [6, 45], "compani": [45, 47, 48, 49, 53], "company_profil": 47, "compar": [1, 3, 17, 23, 31, 37, 38, 43, 46, 47, 48, 51, 53, 54, 56, 57, 58, 59, 60, 62, 65, 69], "compare_verb": 53, "comparison": [32, 37, 38, 53, 58, 64, 66, 68], "compat": [51, 59, 66, 68], "competit": 59, "competitor": 49, "compil": [65, 67, 71], "complet": [38, 45, 54, 58, 59, 66], "complex": [5, 13, 18, 38, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 64, 65, 67, 68], "complic": [51, 60, 62], "compon": [51, 53, 59, 68], "compos": [39, 47, 51], "compound": 53, "comprehend": [6, 43, 65], "comprehens": [2, 21, 43, 46, 59, 65, 67, 72], "compress": [2, 62], "comput": [13, 24, 25, 31, 38, 40, 47, 48, 51, 53, 56, 58, 69], "computation": 59, "con": 53, "concat": [31, 39, 43, 45, 46, 49, 54], "concat_df": 45, "concaten": [43, 45, 46, 68], "concav": 59, "concept": [6, 49, 68], "concern": 49, "concert": 62, "concis": [4, 5, 6, 10, 13, 19, 20, 30, 55, 56, 64], "conclus": [38, 58], "concours": 47, "cond": 69, "conda": 51, "condit": [5, 20, 45, 49, 51, 62, 64], "conf": 45, "confid": [48, 51, 59, 65], "confidence_level": [38, 58], "config": [45, 51, 59, 60, 63, 64, 65], "config_nam": 63, "config_path": 63, "configur": [45, 47, 51, 53, 54, 58, 60, 63, 64, 65, 68], "configure_coffe": 50, "configure_spark_with_delta_pip": 45, "configuredtrac": 64, "conflict": [47, 51], "conform": [32, 38, 58], "confus": [6, 38, 58, 62, 68], "confusion_matrix": [60, 65], "conn": [43, 46, 50, 58], "connect": [38, 43, 46, 50, 52, 58, 60], "connectionerror": 38, "consciou": 53, "consecut": 44, "consequ": [6, 38, 58], "consid": [1, 2, 4, 5, 6, 13, 17, 38, 44, 47, 48, 50, 51, 53, 54, 58, 59, 62, 65], "consist": [1, 19, 38, 43, 45, 47, 51, 53, 56, 58, 59, 62], "consol": [59, 69], "constant": [47, 49, 65], "constitut": 59, "constrain": [51, 53], "constraint": [23, 38, 58], "construct": [1, 48, 51, 68], "constructor": 44, "consult": 47, "consum": [1, 5, 30, 31, 38, 45, 46, 49, 51, 53, 54, 57, 58, 59, 60, 64, 68, 69], "consumpt": 65, "cont_nam": [47, 48], "contact": 18, "contain": [26, 31, 38, 45, 47, 48, 49, 50, 53, 54, 58, 59, 66, 68, 69, 71], "contain_word": [38, 58], "contamin": 51, "content": [1, 17, 45, 46, 48, 49, 50, 51, 53, 58, 62, 65, 67], "context": [1, 6, 38, 47, 50, 53, 56, 58, 59, 64, 68], "contextu": [50, 53], "contextualwordembsaug": 53, "contin": 54, "continu": [44, 47, 49], "contrast": [43, 46, 51, 52, 54, 56, 59], "control": [1, 6, 48, 50, 53, 56, 60], "conveni": [38, 45, 56, 58, 59, 64, 66], "converg": 51, "convers": [38, 43, 44, 58, 59, 65, 68], "conversion_r": [38, 58], "convert": [28, 30, 31, 43, 46, 47, 49, 50, 52, 55, 56, 60, 64, 65, 68, 69], "convert_from_path": 64, "convert_ids_to_token": 53, "convert_slow_token": 53, "converted_pric": 43, "cook": 49, "cooki": 53, "cookieandk": 49, "cool": [12, 24, 25, 53, 66], "coolyazzy94": 53, "coordin": [44, 47, 48, 49], "copi": [19, 28, 37, 41, 43, 45, 46, 47, 49, 52, 59, 68], "copy_on_writ": 30, "cor": 47, "core": [31, 32, 33, 35, 38, 45, 47, 48, 54, 57, 58, 59, 60, 62, 63, 71], "corner": 73, "cornflowerblu": 49, "corp": 53, "corpor": 53, "corporationlegaltyp": 48, "corporationnam": 48, "corpu": 53, "corr": 47, "correct": [26, 38, 46, 47, 51, 53, 56, 58, 65, 69], "corrected_food": 47, "correctli": [38, 46, 51, 68], "correlated_feature_sets_": 47, "correspond": [5, 21, 45, 47, 51, 53, 62, 68], "corrupt": 45, "cosine_similar": 53, "cost": [23, 53], "costco": 39, "cot": 25, "could": [24, 25, 37, 44, 47, 56, 58, 62, 64, 66, 67, 68, 71], "count": [31, 32, 39, 43, 44, 46, 47, 49, 53, 54, 56, 57, 60, 62, 68], "count_person": 49, "count_person_femal": 49, "count_person_mal": 49, "count_two": 39, "counter": [39, 53], "counter_tim": 17, "counterfactu": 59, "countfrequencyencod": 47, "counti": 48, "countri": [47, 49, 59], "countvector": 60, "coupl": [60, 64], "cover": [0, 16, 27, 39, 42, 44, 47, 49, 52, 53, 55, 57, 60, 61, 62, 63, 65, 69, 70, 71, 72], "cover_photo": 49, "coverag": [47, 51], "coverage_scor": 51, "cowork": [38, 58], "cp01": 43, "cp0_dst": 49, "cprint": 64, "cprofil": 57, "cpu": [8, 44, 52, 53, 54, 57, 71], "cpu_count": [2, 54], "cpython": 71, "crash": 45, "crea": 47, "cream": [53, 60, 62], "creat": [2, 5, 13, 14, 18, 19, 20, 23, 25, 26, 28, 31, 32, 44, 45, 46, 47, 50, 52, 54, 59, 62, 67, 68], "create_a_copi": 6, "create_al": 43, "create_collect": 50, "create_engin": [43, 46], "create_heatmap": 68, "create_if_miss": 52, "create_milk_tea": 50, "create_table_sql": 43, "createdatafram": [45, 51, 56, 59], "createorreplacetempview": 56, "creation": [18, 23, 30, 43, 45, 46, 48, 50, 51, 60, 65], "creativ": 47, "credenti": 58, "credit": [47, 49, 60], "crime": 47, "cristina": 49, "criteria": [38, 58], "critic": [45, 51, 68], "croissant": 53, "crop": 48, "cross": [15, 36, 49, 51], "cross_valid": [51, 59], "cross_validation_df": 59, "crossov": 59, "crown": 47, "crucial": [38, 52, 58, 59, 60], "cryptographi": 53, "css": 69, "cst": 59, "csv": [1, 2, 6, 44, 45, 47, 53, 59, 60, 64, 67, 69], "csv_content": 46, "csv_file": [43, 46], "csv_file_path": 1, "csv_path": 1, "ctime": 68, "cultur": [47, 59], "cumbersom": [18, 38, 44, 47, 52, 53, 56, 58, 66], "cume": 48, "cumsum": [6, 59], "cumul": 59, "cup": 49, "cur": [38, 58], "curl": 51, "curli": [15, 36], "current": [1, 38, 45, 47, 48, 49, 51, 58, 59, 66, 67, 68, 69, 72], "current_d": 45, "current_statu": 1, "current_timestamp": 45, "curri": 49, "cursor": [38, 43, 50, 58], "curv": 59, "curvatur": 59, "custom": [5, 6, 17, 32, 38, 43, 45, 46, 48, 49, 56, 58, 64, 66, 68, 69], "custom_cleaned_text": 53, "custom_count": 17, "custom_df": 1, "custom_metr": 51, "custom_styl": 6, "custom_tim": 17, "customdatafram": 1, "customer_count": [43, 46], "customer_data": 45, "customer_df": 56, "customer_id": [43, 45, 46, 47, 56], "customer_nam": 56, "customer_schema": 56, "customer_seg": 56, "customer_segment": 69, "customers_data": 45, "customers_delta": 45, "customers_df": 56, "customiz": [59, 60], "cut": [38, 47, 58], "cute": 60, "cutechart": 60, "cutoff": [15, 36, 47, 59], "cutoff_d": 47, "cv": 51, "cwd": 22, "cwida": [43, 46], "cyan": 64, "cybertron": 49, "cycl": 64, "cycler": 60, "d": [3, 6, 9, 15, 17, 32, 34, 36, 38, 39, 41, 47, 48, 49, 51, 52, 53, 54, 56, 58, 59, 60, 62, 64, 68], "d24": 17, "d2l": 49, "d42e2061f9c283c4548af6c617727215c79ecafc74b9f3a294e6cf09afc5906f": 49, "d7b8": 45, "da": [53, 60], "dachshund": [1, 18, 26, 49], "dai": [3, 6, 15, 30, 32, 36, 38, 45, 47, 49, 51, 53, 58, 60, 68, 69], "daili": [49, 51, 59, 69, 72], "danc": [49, 53], "dark": 60, "dark_background": [6, 60], "darwin": [38, 58], "dash": [38, 58], "dashboard": 60, "dask": [51, 54], "dasklgbmforecast": 51, "data": [2, 3, 4, 6, 8, 10, 13, 19, 22, 27, 28, 33, 44, 57, 61, 62, 63, 64, 66, 67, 68, 69, 70], "data1": [52, 63, 71], "data2": [19, 52], "data_chang": 45, "data_dir": [1, 63], "data_load": 1, "data_s": 31, "data_science_flowchart": 60, "data_typ": 31, "data_url": 45, "dataanalyz": 1, "databas": [44, 46, 50, 64], "database_nam": 43, "databrick": 43, "dataclass": [6, 18, 23], "dataclassdog": 18, "datacommon": 66, "datacommons_panda": 49, "datadrifttab": 60, "datafram": [1, 2, 5, 6, 19, 48, 50, 51, 52, 53, 59, 60, 64, 65, 66, 68], "dataframemodel": [38, 58], "dataframeschema": [38, 58], "datagener": 59, "datahub": 54, "dataload": 1, "datapipelin": 1, "dataprocessingstrategi": 1, "dataprocessor": 65, "dataquest": 53, "dataread": [49, 66], "dataset": [1, 6, 20, 28, 30, 31, 33, 38, 44, 45, 48, 54, 56, 57, 58, 59, 60], "datatyp": [30, 31, 45], "date": [6, 38, 43, 45, 46, 47, 49, 50, 53, 54, 56, 58, 60, 68], "date1": 3, "date2": 3, "date_column_1": 32, "date_column_2": 32, "date_featur": 59, "date_first_hir": 47, "date_fld": 52, "date_format": 43, "date_of_birth": 49, "date_rang": [32, 45, 59, 60], "datefmt": 68, "datetim": [6, 15, 23, 36, 38, 45, 47, 49, 56, 58], "datetime64": [30, 32], "datetimeindex": 32, "dateutil": [56, 66], "dating_profil": 47, "daunt": 56, "david": [43, 46], "dayofweek": 59, "dayofyear": 59, "db": [38, 43, 50, 58], "dbb9e7": 49, "dbl": 56, "dbname": 58, "dbt": 53, "dbtyou": 53, "dd": [54, 68], "dddd": 68, "ddf": 54, "ddt": 68, "de": [47, 53, 60], "dead": 47, "dead_cod": 65, "deal": [13, 17, 25, 30, 43, 47, 49, 59, 62, 64, 67], "debug": [1, 13, 23, 45, 51, 65, 66, 69], "debut": 49, "decid": 66, "decim": [25, 38, 41, 51, 58, 64, 68], "decis": 59, "decision_funct": 51, "decision_region": 51, "decision_scores_": 51, "decisiontreeclassifi": [51, 60, 65], "declar": [6, 13, 18, 45, 60, 64], "decor": [1, 18, 23, 26, 38, 58, 64, 68], "decreas": [1, 31, 51, 53, 57, 64], "dedic": [47, 51], "dedup_field": 53, "dedupl": 47, "deep": [6, 31, 49, 51, 53], "deep_copi": 49, "deeparestim": 59, "deepli": [53, 62], "deer": 62, "def": [1, 2, 5, 6, 7, 8, 12, 13, 17, 18, 19, 20, 23, 24, 26, 28, 33, 37, 38, 39, 44, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69], "default": [1, 4, 15, 29, 30, 31, 36, 38, 39, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 56, 58, 60, 62, 63, 64, 66, 68], "defaultdict": 53, "defaut": 51, "defend": 49, "defer": 54, "defin": [1, 5, 6, 13, 18, 23, 30, 38, 43, 45, 47, 48, 51, 55, 56, 58, 59, 60, 62, 64, 65, 69], "definit": [6, 43, 48, 49, 56, 62, 65], "deg_to_rad": 69, "degc": 62, "degf": 62, "degrad": 60, "degre": [47, 69], "del": 65, "delai": [2, 54], "delet": [64, 67], "delimit": [43, 46], "delinqu": 51, "deliv": 47, "delta": [38, 43, 46, 58], "delta_lak": [43, 45, 46], "delta_lake2": 45, "delta_table_path": 45, "deltacatalog": 45, "deltalak": [43, 45, 46, 54], "deltaprotocolerror": 45, "deltasparksessionextens": 45, "deltat": [43, 45, 46], "demand": 59, "demo": 51, "demonstr": [6, 38, 43, 45, 46, 47, 48, 49, 51, 53, 56, 57, 58, 59, 60], "dendrogram": 60, "deni": 44, "dens": [51, 53], "depart": [47, 56], "department_nam": 47, "depend": [38, 45, 51, 56, 58, 59], "depict": 60, "deploi": [38, 51, 58], "deploy": 63, "deprec": [35, 49, 53, 64], "depth": [47, 51, 68], "depth_first_search": 66, "desc": [43, 46, 49], "describ": [38, 48, 49, 53, 58], "descript": [47, 49, 50, 51, 53, 65, 67], "deselect": [38, 58], "deseri": 1, "design": [47, 48, 49, 51, 53, 54, 59], "desir": [6, 38, 48, 50, 58], "desk": 72, "despit": 53, "dessert": 53, "destcitynam": 46, "detail": [46, 48, 50, 52, 53, 59, 62], "detailed_result": 62, "detect": [38, 46, 47, 53, 56, 58, 62, 68], "detect_languag": 53, "detect_outli": 51, "detect_pii": 53, "detector": 51, "determin": [3, 53, 54], "determinist": 58, "dev": [6, 23, 30, 43, 45, 46, 51, 54, 65], "develop": [5, 13, 26, 47, 51, 62, 65, 69, 72], "deviat": [1, 8, 38, 48, 51, 58, 59], "devic": 52, "df": [2, 5, 6, 19, 28, 30, 31, 32, 35, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 64, 66, 68], "df1": [29, 30, 34, 39, 43, 45, 46, 47, 52, 54], "df2": [29, 30, 34, 39, 43, 45, 46, 52, 54], "df3": [30, 45, 54], "df_": [30, 39, 57], "df_chunk": 30, "df_cv": 59, "df_select": 56, "df_transform": 56, "df_withcolumn": 56, "diabet": 51, "diabetes_model": 51, "diacrit": 53, "diagnosi": 51, "diagon": 49, "diagram": 49, "dialect": 43, "diamet": 13, "diamond": 47, "dict": [13, 19, 26, 43, 44, 50, 53, 59, 62, 65], "dict_item": [4, 17], "dict_valu": 26, "dictionari": [1, 5, 6, 13, 18, 39, 48, 49, 53, 56, 59, 72], "did": 13, "die": [47, 49], "diecinuev": 53, "diego": [38, 58], "diet": [30, 47], "diff": [3, 25, 59, 62, 66, 67, 69], "diff2": 34, "differ": [1, 5, 6, 13, 14, 15, 17, 19, 26, 28, 31, 36, 43, 45, 47, 49, 51, 53, 55, 56, 57, 59, 60, 63, 65, 66, 67, 69], "different_schema": 56, "difficult": [6, 12, 38, 43, 49, 51, 53, 56, 57, 58, 59, 60, 62], "difficulti": [50, 65], "diffus": 49, "dig": [47, 53], "digit": [12, 15, 20, 36, 43, 47, 53, 62, 68], "dimens": 50, "dimension": [41, 53, 62], "dimensionalityerror": 62, "dinosaur": 49, "dir": [52, 63, 66], "direct": [38, 43, 46, 53, 56, 58, 59], "directbytebuff": 44, "directli": [1, 43, 44, 46, 51, 56, 59, 62, 69, 73], "directori": [43, 45, 46, 52, 63, 64, 65, 66, 67, 69], "directorybasedexampledatabas": [38, 58], "dirty_column": 47, "dirty_equ": [38, 58], "disable_gc": [38, 58], "discern": 6, "discolor": 60, "discount": [56, 62], "discount_amount": 62, "discount_elig": 56, "discov": [10, 49, 53, 60, 67], "discoveri": 53, "discuss": [50, 59], "diseas": 51, "disguis": 69, "disk": [43, 45, 46, 59], "displai": [1, 12, 15, 18, 36, 50, 53, 56, 59, 64], "displayed_link": 49, "displaystyl": [25, 64, 71], "disrupt": 6, "dist": [48, 66], "distanc": [44, 47, 53, 59, 60, 62, 64], "distance_bas": 59, "distil": 64, "distilbert": [53, 64], "distinct": [59, 60], "distort": 33, "distract": 65, "distribut": [59, 60, 68], "distributedmlforecast": 51, "district": [47, 60], "diver": 47, "divers": [51, 53], "divid": [6, 12, 25, 38, 49, 56, 58, 69], "divis": [6, 38, 47, 58], "dl": 45, "dnc": 53, "do": [3, 8, 12, 13, 15, 21, 24, 25, 26, 28, 30, 33, 36, 37, 38, 43, 44, 47, 49, 51, 53, 54, 56, 58, 59, 60, 62, 64, 66, 68, 69, 72], "do_hourly_at_night": 69, "do_twice_a_week": 69, "do_work": 69, "dob": 49, "dobb": 49, "doc": [22, 28, 50, 53, 60, 63, 69], "doc1": 50, "doc2": 50, "doc3": 50, "doc_node_id": 53, "doc_node_valu": 53, "docl": 49, "docopt_exampl": 63, "docstr": [5, 63], "doctor": [47, 53, 60], "document": [22, 28, 48, 50, 51, 53, 56, 60, 68, 69, 72], "document_load": 50, "dodgemopar": 49, "doe": [5, 6, 18, 20, 38, 44, 45, 46, 49, 54, 56, 58, 59, 69], "doesn": [1, 4, 20, 23, 28, 38, 47, 50, 56, 58, 62, 64, 69], "dog": [1, 18, 23, 26, 38, 47, 49, 53, 58, 60, 62, 68], "dog1": 1, "dog2": 1, "doga": 53, "doi": 53, "dollar_amt": 52, "dollar_amt_1": 52, "dollar_amt_2": 52, "domain": [49, 50, 53, 62], "don": [1, 4, 11, 18, 19, 25, 38, 47, 50, 51, 53, 58, 60, 62, 66], "donald": [49, 53], "done": [24, 25, 37, 51, 53, 67], "donnemartin": 49, "dosisod": 65, "dot": [24, 46, 56, 60], "dotenv": 63, "doubl": [1, 49, 56], "doubletyp": 56, "down": [6, 30, 49, 56, 69], "downcast": [49, 57], "download": [30, 43, 46, 50, 51, 53, 60, 62, 64, 68, 73], "download_corpora": 53, "download_fil": 62, "download_return": 59, "download_robot_execution_failur": 59, "downstream": 43, "dpi": 60, "dracula": 60, "draft": 69, "drag": 49, "dragon": 23, "drain": 49, "draw": 60, "drawdown": 59, "dress": 60, "drink": [1, 47], "drive": [48, 49, 53], "driver": [56, 69], "drop": [15, 28, 36, 39, 54, 56, 59, 63], "drop_column": [28, 68], "drop_dupl": 47, "drop_featur": 63, "drop_missing_data": 1, "dropcorrelatedfeatur": 47, "dropdown": 67, "dropmissingdatastrategi": 1, "dropna": [1, 32, 34, 47, 60, 65], "dropoff": [47, 60], "dropoff_borough": [47, 60], "dropoff_zon": [47, 60], "drug": [47, 53], "ds4sd": 49, "dst": [52, 68], "dsttzinfo": 59, "dt": [45, 47], "dt0": 45, "dt_previou": 45, "dtw": 59, "dtype": [28, 30, 32, 33, 34, 38, 39, 44, 45, 47, 49, 51, 53, 57, 58, 59, 62], "du": 49, "duck": [38, 48, 58, 68], "duck_biologi": 48, "duck_pdf_path": 48, "duckdb": 44, "duckpdf": 48, "dude": 50, "dudeifi": 50, "due": [20, 38, 48, 49, 50, 53, 56, 58, 59, 62, 66, 68], "duft": 60, "dufte_bar": 60, "duftifi": 60, "dummi": 62, "dummyclassifi": 51, "dummymodel": 62, "dump": [1, 51, 55, 59, 62], "duplic": [5, 47, 51, 56], "duplicated_food": 47, "durat": [23, 38, 57, 58, 59, 60], "duration_in_minut": 3, "dure": [38, 45, 47, 49, 52, 54, 55, 58, 59, 65], "dvc": [38, 58, 69], "dweibul": 48, "dwnlded": 45, "dynam": [65, 66], "e": [6, 23, 38, 39, 45, 46, 48, 51, 53, 55, 56, 58, 59, 60, 62, 65, 66], "e48789": 51, "e583b6": [6, 51, 60], "e7487bc3c4ab417c965144efcecaca2f": 51, "each": [1, 2, 6, 8, 9, 17, 18, 19, 20, 24, 30, 38, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 64, 66, 68, 69, 72], "eager": 54, "earli": [49, 56], "earlier": 66, "earliest": 56, "earth": 53, "eas": [52, 54], "easi": [18, 19, 22, 23, 27, 38, 45, 48, 49, 50, 53, 55, 56, 57, 58, 60, 62, 64, 67, 69], "easier": [5, 6, 11, 13, 22, 25, 30, 38, 43, 50, 51, 53, 58, 60, 62, 64], "easiest": 32, "easili": [1, 2, 5, 15, 22, 23, 36, 44, 49, 50, 51, 52, 53, 54, 55, 60, 64, 67], "east": [30, 47, 48, 49, 54, 60], "eastern": 49, "eat": [48, 53, 60], "ec": 69, "echo": 69, "eclf": 51, "ed5ff1": 49, "eda": 60, "edece": 60, "edg": [38, 47, 53, 58, 60], "edgecolor": [51, 60], "edit": [65, 69], "edit_data": 68, "editor": [37, 53, 60], "educ": [47, 49], "eequir": [38, 58], "effect": [38, 51, 53, 58, 59], "effici": [1, 10, 11, 13, 14, 17, 19, 21, 52, 54, 56, 57, 59, 62, 64, 67, 69], "efficient_python_tricks_and_tools_for_data_scientist": [13, 22, 38, 41, 51, 58, 65, 67], "effort": [47, 69], "effortlessli": [45, 50, 60], "egg": [60, 67], "egypt": 47, "ehocol": 47, "eighteen": 49, "einfach": 47, "einstein": 49, "either": [4, 5, 6, 15, 22, 26, 31, 33, 34, 36, 38, 41, 45, 53, 58, 62, 73], "elaps": [5, 59], "elasticnet": 51, "elasticnetparam": 51, "electron": 54, "elegantli": 20, "element": [10, 11, 14, 26, 38, 39, 49, 58, 60, 62, 64, 68, 69], "element_to_be_click": 69, "elif": [1, 5, 13, 33, 38, 56, 58, 59], "elig": [38, 56, 58], "elimin": [38, 43, 46, 51, 52, 58, 59, 64, 67], "elong": 53, "els": [1, 3, 7, 13, 17, 19, 26, 28, 37, 38, 47, 56, 57, 58, 59, 62, 64, 68, 69], "em": 47, "email": [4, 18, 45, 49, 53], "email_send": 69, "emb": 64, "embed": [50, 60], "emma": 56, "emoji": 53, "emoticon": 53, "emp": 47, "emperor": 59, "emphasi": 53, "empir": 48, "employe": [45, 56], "employee_id": 45, "employee_nam": 45, "employee_position_titl": 47, "employee_salari": 47, "employment_typ": 47, "empow": [43, 46], "empti": [1, 4, 6, 38, 51, 53, 58, 65, 67, 69], "en": [30, 49, 53, 60], "en_core_web_lg": 53, "en_core_web_sm": 53, "enabl": [1, 13, 20, 43, 44, 45, 50, 51, 52, 53, 56, 59, 60, 62, 65, 66, 69], "enc": 47, "encapsul": 56, "encod": [48, 53, 66, 68], "encode_and_plot": 47, "encode_cat_vari": 68, "encode_categorical_data": 1, "encoded_col1": 28, "encodedatastrategi": 1, "encoding_method": 47, "encount": [4, 6, 33], "encourag": 63, "encrypt": 53, "end": [5, 6, 24, 32, 37, 41, 44, 49, 53, 56, 59, 60, 64, 68], "end_dat": [30, 38, 45], "end_t": 56, "end_tim": 62, "endfor": 64, "endif": 64, "endpoint": [51, 59], "endswith": 68, "enforc": [47, 54], "engin": [30, 43, 45, 46, 52, 54, 56, 64], "engineeringqubit": 47, "english": [1, 47, 60], "enhanc": [6, 45, 50, 51, 59, 62, 65], "enjoi": 53, "enough": 45, "ensembl": 51, "ensemblevoteclassifi": 51, "ensur": [6, 19, 23, 33, 38, 39, 45, 47, 51, 53, 55, 56, 58, 59, 62, 65, 69], "ensure_all_finit": 53, "ent": 53, "entendr": 49, "enter": [47, 49, 69], "entir": [20, 43, 45, 46, 47, 51, 54, 56, 69], "entiti": 53, "entri": [20, 31, 32, 45, 47, 53, 57], "entries_per_exampl": 47, "entryb": 59, "enumer": [47, 51], "env": [51, 67, 69], "environ": [38, 47, 49, 50, 51, 53, 56, 58, 63, 69], "eo": 53, "ephi": 49, "epoch": 49, "eq": [25, 38, 58], "equal": [1, 25, 51, 56, 66], "equal_end": 59, "equal_inf": 41, "equal_nan": 41, "equinox": 59, "equiti": 59, "equival": [38, 43, 53, 54, 56, 58], "eradicate_test": 65, "erasor": [15, 36], "erpnext": 49, "err": [38, 58, 65], "err_msg": 41, "error": [1, 4, 5, 13, 18, 23, 26, 28, 33, 41, 43, 45, 46, 48, 51, 53, 62, 64, 65, 67, 68, 69, 73], "escrow": 53, "esp": 47, "especi": [6, 13, 20, 28, 45, 46, 47, 48, 51, 52, 57, 59, 60, 62, 64, 66, 67, 68], "espn": 49, "essay0": 47, "essay1": 47, "essay2": 47, "essay3": 47, "essay4": 47, "essenc": 53, "essenti": [14, 45, 51, 53, 65, 72], "est": 51, "establish": [38, 58], "estim": 2, "et": [49, 59], "etc": [38, 39, 51, 58, 65, 69], "ethiopia": 47, "eu": 54, "euclidean": 44, "europ": 30, "ev": [43, 46], "eval": 56, "evalu": [6, 24, 33, 47, 48, 51, 54, 59], "evaluate_print": 51, "evaluate_result": 68, "even": [1, 5, 6, 7, 31, 38, 43, 46, 50, 51, 53, 56, 58, 59, 69], "even_numb": 5, "event": [3, 45, 47, 49, 59, 62], "event_t": 56, "event_ts_second": 56, "ever": [1, 3, 6, 25, 30, 32, 37, 38, 58, 60, 62, 64, 66, 68, 71], "everi": [5, 7, 32, 38, 45, 54, 58, 65, 67, 68, 69, 72], "everybodi": 69, "everydai": 47, "everyon": 49, "everyth": [28, 54, 57], "evict": 45, "evolv": [38, 56, 58], "exact": [13, 38, 47, 50, 51, 53, 54, 58, 59, 62], "exactli": [12, 25, 38, 44, 47, 49, 51, 58, 60, 62, 68], "examin": 68, "exampl": [1, 2, 4, 5, 6, 12, 13, 18, 19, 20, 23, 26, 28, 30, 31, 33, 34, 37, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 69], "example1": 68, "example2": [43, 68], "example_data": [38, 58], "example_fil": 62, "example_file2": 62, "exce": [31, 65], "excel": [5, 23, 37, 50, 52, 53, 64], "except": [13, 23, 41, 45, 50, 51, 56, 62, 69], "excerpt": 50, "excess": 57, "exclud": [32, 38, 47, 58, 65], "exclude_path": [38, 58], "execut": [5, 6, 30, 43, 45, 46, 49, 50, 52, 56, 62, 65, 73], "executemani": [43, 50], "execution_time_m": 45, "executor": 56, "executorenv": 59, "exercis": [8, 30, 60], "exet": 49, "exist": [4, 22, 43, 45, 50, 51, 54, 56, 58, 59, 60, 62, 66, 69], "exist_ok": [22, 45, 69], "existing_data": 45, "existingrdd": 56, "exp_past_year_marijuana": 51, "expand": [45, 60, 65, 68], "expandtab": 68, "expans": 25, "expect": [26, 51, 53, 56, 59, 65], "expected_condit": 69, "expected_df": 56, "expens": [38, 45, 58, 59], "experi": [8, 17, 20, 38, 44, 47, 53, 57, 58, 59, 60, 70], "experience1": [38, 58], "experience2": [38, 58], "expertis": 53, "explain": [6, 53, 56, 60, 65], "explan": [48, 68], "explicit": [6, 43, 46, 53, 56, 62, 64], "explicitli": [1, 6, 62, 69], "explod": 56, "explor": [10, 14, 47, 53, 72], "explos": 53, "expon": 48, "export": [21, 60, 64, 66], "exposur": 59, "expr": 25, "express": [13, 24, 25, 49, 56, 69], "expsiz": [2, 8], "extend": [1, 6], "extend_panda": 59, "extens": [45, 51, 53, 59, 69, 71], "extern": [1, 23, 62], "extra": [32, 45, 47, 53, 56, 66], "extra_index": 51, "extract": [4, 8, 10, 11, 13, 30, 38, 46, 51, 54, 58, 63, 67], "extract_relevant_featur": 59, "extract_schema": 50, "extract_senti": [38, 58], "extract_text": [48, 64], "extratreeclassifi": 51, "extratreesclassifi": 51, "extrem": [20, 51, 59, 65], "ey": 49, "f": [1, 2, 3, 4, 5, 6, 8, 9, 13, 18, 19, 22, 23, 24, 30, 31, 38, 39, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71], "f1": 51, "f1_score": 64, "f386": 45, "f5ee7bc47f5615e89f1729dcb49632c6b76a90ba50eb42d782e2790398ebc539": 49, "f64": 54, "f694ff": 60, "f8": 62, "f8b0fc900aa14cf0ade8d0165c5a9f11": 51, "f_x": 59, "f_y": 59, "f_z": 59, "fabbede0577b3fed686afd319d5ab794f1b35b02": 49, "face": [53, 64], "facebook": 53, "facebook_scrap": 49, "facecolor": [51, 60], "facil": 47, "fact": [38, 58, 62, 64], "factor": [51, 59], "factori": [25, 64, 68], "factual": [38, 58], "factual_consist": [38, 58], "factual_consistency_metr": [38, 58], "factualconsistencymetr": [38, 58], "factualconsistencymodel": [38, 58], "fahrenheit": 62, "fail": [1, 5, 28, 45, 53, 56, 59, 65, 66], "failur": 45, "fair": 47, "faiss": 50, "fake": [47, 53], "faker": [38, 58], "falcon": 53, "fallback": 53, "fals": [1, 2, 6, 7, 17, 20, 30, 32, 33, 38, 41, 43, 44, 46, 47, 49, 53, 54, 55, 56, 58, 59, 62, 64, 65, 68, 69], "famili": [51, 60], "familiar": [43, 54, 56], "fan": [47, 68], "fantasticheartsound": 49, "faq": 53, "far": 59, "fare": [47, 60], "farm": 49, "fascin": [50, 64], "fast": [27, 38, 47, 48, 49, 52, 58, 62, 69], "fastai": 47, "faster": [2, 8, 13, 17, 23, 30, 38, 45, 53, 58, 65], "fastest": [33, 49], "fat": [30, 53], "fatal": 58, "fatcont": 49, "fav_food": 62, "favor": [49, 51], "favorit": [1, 49, 63], "fb18aec51cf": 49, "fbcdn": 49, "fcst": [51, 59], "fe_93550": 49, "feasibl": 20, "featur": [6, 31, 38, 46, 49, 54, 56, 58, 60, 62, 63], "feature1": 47, "feature2": 47, "feature_engin": 47, "feature_extract": [53, 60], "feature_nam": [50, 51, 60], "featureimport": 51, "features_filt": 59, "features_order_": 59, "featurescol": 51, "feb": 49, "februari": [6, 44, 49], "feel": [60, 73], "feeling_temp": 60, "feet": [62, 64], "feldstein": 49, "femal": [17, 49, 60], "feminin": 53, "ferri": 49, "fetch": [44, 49, 51, 59, 67], "fetch_20newsgroup": [53, 60], "fetch_california_h": [51, 57, 60], "fetch_employee_salari": 47, "fetch_openml": [47, 53, 60], "fetch_user_from_db": 58, "fetch_world_bank_ind": 47, "fetchal": [38, 43, 58], "fetchon": [50, 58], "few": [18, 43, 46, 47, 48, 49, 51, 52, 53, 56, 59, 60], "fewer": [41, 72], "ff6767": 60, "ff69b4": 60, "ffca85": 60, "ffff99": 51, "ffill": [28, 49], "fg65_rp17lz39z89p0nkv8ch0000gn": [28, 64], "fh": 59, "fibercont": 49, "fickl": 62, "field": [18, 38, 43, 46, 49, 53, 56, 58, 62, 68, 72], "fifth": 53, "fig": [51, 53, 59, 60], "figlet_format": 64, "figsiz": [47, 49, 51, 53, 59, 60], "figur": [12, 25, 47, 48, 51, 53, 59, 68], "figure2": 59, "file": [1, 2, 13, 20, 26, 30, 37, 41, 44, 48, 50, 51, 52, 53, 54, 59, 60, 62, 64, 68], "file_": 68, "file_download": 64, "file_exist": 69, "file_nam": [38, 58], "file_path": [1, 30], "file_to_run": 69, "filenam": [1, 38, 58, 62, 65, 69], "filepath": 45, "filer": 30, "filesad": 45, "filesremov": 45, "filesystem": [38, 58], "fill": [20, 29, 47, 48, 50, 59, 68], "fill_between": [51, 59], "fill_dict": 28, "fill_valu": [32, 47], "fillchar": 68, "fillmiss": 47, "fillna": [28, 49], "fillvalu": 20, "filt": 6, "filter": [5, 6, 10, 24, 38, 43, 45, 46, 48, 49, 51, 53, 56, 58, 69], "filter_": 24, "filter_fruit": 24, "filter_func": 53, "filter_st": [38, 58], "filter_str": 53, "filtered_df": 32, "filterwarn": 30, "final": [24, 47, 56, 59, 64], "financi": 59, "find": [1, 3, 6, 7, 14, 20, 25, 28, 47, 49, 50, 51, 53, 59, 60, 63, 67, 68], "find_dat": 59, "find_el": 69, "find_index": 24, "find_loc": 48, "find_similar_recip": 53, "findal": 59, "fine": [49, 53, 59], "finish": [3, 6, 43, 53], "fire": 47, "fire_exampl": 64, "firefight": 47, "first": [4, 15, 19, 20, 26, 28, 29, 30, 31, 34, 36, 38, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 58, 59, 60, 62, 64, 65, 69], "first_fiv": 62, "first_five_word": 53, "first_nam": 56, "first_sum": 44, "firstname_output_lett": 53, "fish": [49, 60], "fit": [1, 38, 47, 48, 49, 51, 53, 54, 58, 59, 60], "fit_resampl": 51, "fit_transform": [47, 48, 51, 53, 60], "fitintercept": 51, "five": [44, 49], "fix": [19, 32, 38, 43, 53, 58, 59, 65, 69], "fixabl": 65, "fixtur": [56, 59], "fl": [38, 47, 58], "fl_score": 65, "flag": 47, "flake": 49, "flake8": 65, "flask": 66, "flat": [47, 59], "flat_df": 46, "flatbush": 47, "flatiron": [47, 60], "flatten": [45, 46, 62], "flavor": [1, 49, 51, 53, 60, 62], "fleurieu": 59, "flexibl": [1, 27, 53, 56, 64, 65], "flierprop": 60, "flight": 44, "flight_data_2018_to_2022": 30, "flightdat": 46, "flipper": 64, "float": [1, 5, 6, 12, 13, 20, 23, 26, 31, 33, 43, 49, 50, 51, 59, 62, 64, 65, 68, 69], "float16": 31, "float32": [31, 57], "float64": [31, 34, 38, 44, 45, 51, 57, 58, 59], "float_col": 31, "float_fld": 52, "float_fld_1": [], "float_fld_2": [], "float_pars": 65, "floattyp": 56, "flow": [6, 68], "flower": 68, "fluctuat": 59, "fluent": 53, "fluentli": 47, "fluff": 49, "fluid": 60, "fly": 64, "fmt_number": 64, "fn": 50, "fo": 47, "foami": 50, "focu": [1, 48], "focus": 48, "fog": 5, "fold": [47, 51, 68], "folder": [22, 28, 38, 43, 46, 58, 64, 66, 67, 69], "follow": [1, 5, 6, 13, 22, 28, 30, 31, 38, 43, 45, 46, 49, 50, 51, 53, 54, 56, 58, 59, 64, 65, 66, 67, 68, 69], "follower_count": 49, "following_count": 49, "follwo": 53, "font": [48, 64], "font_dict": 48, "font_scal": 47, "font_siz": 48, "fontsiz": [51, 59], "foo": [43, 56, 64], "food": [1, 13, 17, 47, 53, 62], "food_box": 62, "food_pric": 17, "foot": 47, "footer": [48, 53, 64], "forc": [59, 64, 66], "force_all_finit": 53, "force_download": 64, "forecast": 51, "forecast_fitted_valu": 59, "forecasts_df": 59, "forest": 51, "forestdiffusiongener": 49, "forg": 51, "forget": [38, 50, 58, 65], "fork": 49, "forks_count": 67, "form": [25, 39, 53], "format": [13, 28, 31, 39, 43, 45, 46, 48, 50, 54, 55, 56, 59, 60, 62, 64, 65, 68, 69], "format_map": 68, "formatted_fil": 37, "former": 59, "formula": [38, 44, 58, 64], "forpath": 45, "fortun": 49, "forward": [47, 49], "found": [1, 6, 15, 26, 36, 38, 43, 45, 47, 48, 58, 60, 64, 65, 66, 68, 73], "found_alpha": 20, "foundat": [56, 59], "four": [49, 53], "fox": 53, "fp": 69, "fpdf": 48, "fr": [47, 49, 53], "frac": [25, 64], "fraction": [25, 49], "fragment": 48, "fragrant": 49, "frame": [31, 32, 41, 43, 46, 54, 57, 60], "framealpha": 60, "framework": [44, 51, 52, 59], "franc": 49, "franci": 49, "francisco": [38, 47, 56, 58], "frapp": 49, "fraud": 51, "fraudul": 47, "freakishli": 47, "free": [38, 48, 58, 59, 72, 73], "freez": 66, "freeze_tim": [38, 58], "french": 47, "freq": [32, 45, 51, 53, 56, 59], "freqdistvisu": 60, "frequenc": [48, 51, 59], "frequent": [43, 49, 53, 54, 56, 68], "frequent_item": [], "frequent_str": [], "frequentitem": [], "fresh": [49, 53], "fri": 53, "fridai": 49, "friend": [39, 53], "friend_count": 49, "friendli": [47, 52, 59, 60, 72], "friends1": 39, "friends2": 39, "friends_broken_in_st": 51, "frolick": 47, "from": [1, 2, 3, 5, 6, 10, 11, 12, 13, 15, 17, 18, 19, 20, 23, 24, 25, 26, 28, 29, 31, 32, 36, 38, 46, 47, 52, 54, 56, 57, 58, 60, 62, 63, 66, 68, 71, 73], "from_csv": 1, "from_docu": 50, "from_hugging_face_stream": 53, "from_iter": 60, "from_json": 55, "from_llm": 50, "from_opt": 62, "from_panda": 54, "from_password": 52, "from_pickl": 1, "from_pretrain": [53, 59], "from_yaml": 55, "fromisocalendar": 68, "fromisoformat": 68, "fromordin": 68, "fromtimestamp": 68, "froth": 50, "froth_milk": 50, "frozen": [38, 53, 58], "fruit": [4, 7, 9, 14, 17, 20, 21, 24, 26, 33, 34, 39, 43, 44, 50, 52, 56, 60, 62, 65], "fruit1": 53, "fruit2": 53, "fruit_data_with_color": 60, "fruit_label": 60, "fruit_nam": 60, "fruit_subtyp": 60, "fruit_typ": 26, "fruits_str": 9, "frustrat": [38, 58], "fsb": 47, "fsql": 43, "fsspec": [51, 66], "ft": 62, "fuel": [49, 64], "fugit": 47, "fugu": [38, 43, 58], "fugue_spark": 44, "fugue_sql": 43, "full": [38, 47, 49, 51, 56, 58, 59, 62, 64, 65, 66, 67, 69], "full_match": 53, "full_nam": 67, "fulli": 60, "fullrepositori": 67, "fulltim": 47, "fulluni": 53, "fun": [25, 47, 49], "func": [2, 5, 44, 62, 65], "func2": 2, "funcnam": 68, "function": [10, 12, 21, 23, 43, 45, 46, 47, 48, 50, 51, 53, 56, 59, 60, 72], "functioncal": 50, "functool": [5, 16], "fundament": [53, 60, 69], "funni": 49, "fur_color": 60, "furb108": 65, "furb109": 65, "furnitur": 4, "furniture_loc": 4, "further": [23, 38, 44, 48, 53, 58, 65, 72], "futur": [6, 35, 44, 47, 49, 51, 59], "futurewarn": [35, 47, 49, 53, 56, 60, 64], "fuzz": 53, "fuzzi": 53, "fuzzy_join": 47, "g": [38, 39, 44, 46, 47, 48, 49, 51, 53, 55, 58, 59, 66], "ga": 47, "gain": [53, 59], "gainesvil": 47, "galact": 53, "galacticdataset": 53, "game": 53, "gamma": 48, "gan": 49, "gangener": 49, "gap": [52, 59], "garden": 28, "garlic": 49, "garnish": 49, "gate": 1, "gather": 49, "gaussiannb": [51, 65], "gaza": 47, "gb": [47, 49], "gcc": 71, "gdp": 47, "gdppc": 47, "gdrive": 52, "geekcomput": 49, "gehid": 49, "gemini": 47, "gen_param": 49, "gen_x_tim": 49, "gender": [17, 47, 49, 53, 60], "gener": [6, 26, 30, 31, 45, 47, 48, 50, 51, 52, 54, 57, 65, 67, 71], "general_param": 53, "generalize_nam": 53, "generate_daily_seri": 59, "generate_data": 51, "generate_data_pip": 49, "generate_inst": 59, "generate_numb": [38, 58], "generate_prices_for_seri": 59, "generate_seri": 59, "generate_topic_wordcloud": 53, "genextrem": 48, "gensim": 53, "gentl": 49, "geocod": 48, "geoid": 49, "geoloc": 48, "geometr": 44, "geometri": 44, "georg": [49, 52], "geoseri": 44, "geospati": 48, "german": 47, "germin": 60, "get": [2, 9, 10, 14, 17, 20, 25, 30, 31, 33, 38, 45, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69], "get_add_act": 45, "get_answ": 49, "get_classification_dataset": 51, "get_clean_dataset": 51, "get_cluster_info": 53, "get_csv_data": 6, "get_data": [6, 38, 66], "get_data_for_last_week": 38, "get_day_of_week": [38, 58], "get_discount": 5, "get_dog": [38, 58], "get_dummi": [1, 39], "get_embed": 53, "get_feature_nam": 60, "get_group_info": 49, "get_height_in_feet": 26, "get_incoming_data": 69, "get_interv": 59, "get_item_info": 50, "get_match": 62, "get_mean": [38, 58, 64, 65, 69], "get_model_matrix": 48, "get_modulo": 64, "get_multiples_of_n": 12, "get_n_max_heapq": 8, "get_n_max_sort": 8, "get_name_pric": 65, "get_num_top": 53, "get_or_create_collect": 53, "get_pattern": 62, "get_pickle_data": 6, "get_plan_detail": 13, "get_pric": [1, 13, 24, 26, 62], "get_profil": 49, "get_related_quest": 49, "get_size_per_vari": [38, 58], "get_sum": 28, "get_tensor": 52, "get_ticket": 62, "get_top": 53, "get_topic_info": 53, "get_verdict": [38, 58], "get_working_days_delta": 59, "get_youngest_pet": 13, "getenv": 63, "getfreedom": 47, "getlogg": [38, 58], "getorcr": [45, 51, 56, 59], "getsiz": 2, "ggplot": 59, "gh": 67, "gif": [49, 64], "ginger": 49, "girl": [49, 53], "giskard_model": 50, "gist": [45, 67], "git": [47, 52, 53, 59, 60, 65, 69], "github": [30, 37, 43, 46, 47, 48, 49, 51, 53, 59, 60, 62, 65, 69, 73], "github_token": 67, "githubusercont": [30, 44, 45, 47, 59, 60, 67], "give": [4, 6, 13, 24, 26, 37, 38, 41, 47, 51, 56, 58, 59, 63, 64], "given": [5, 7, 13, 32, 38, 49, 50, 51, 53, 58, 59, 66, 68], "givennam": 48, "glass": 47, "gliner_medium": 53, "glob": [43, 46], "global": [8, 17, 48], "globe": 49, "gmail": 69, "go": [1, 6, 25, 28, 47, 49, 50, 53, 54, 60, 67], "go_to": 69, "goal": [53, 59, 72], "god": [49, 53], "golden": [18, 49], "good": [5, 17, 24, 31, 38, 47, 49, 53, 56, 58, 63, 65], "goog": 59, "googl": [1, 47, 53, 56, 59, 69, 73], "googlenew": 49, "got": [7, 12, 28, 32, 49, 53, 65], "govern": 53, "govner": 53, "gpe": 53, "gpt": [50, 51], "grade": [5, 38, 53, 58], "grader": 53, "gradientboostingclassifi": 51, "graduat": 47, "grain": 49, "gram": 53, "grammar": [15, 36], "grandma": 69, "grandpar": 22, "granny_smith": 60, "grape": [4, 7, 9, 13, 14, 20, 21, 24, 26, 33, 34, 65], "graph": [59, 60, 66, 68], "grate": 49, "grd": 51, "great": [47, 50, 51, 62, 65], "great_tabl": 64, "greater": [23, 41, 56], "greater_than": 23, "green": [4, 24, 37, 47, 48, 49, 50, 51, 59, 64], "greeneri": 59, "greet": 13, "greetng": 13, "gregorian": 68, "grep": 22, "grid": [6, 37, 51, 59, 60], "grid_param": 51, "grid_search": 51, "gridsearchcv": 65, "gridspec": 51, "gridspec_kw": 59, "groceri": [1, 9, 26, 50], "grocery_item": [1, 50], "groceryitemqueri": 50, "group": [12, 26, 38, 43, 44, 46, 47, 49, 51, 54, 56, 58, 59, 60, 65], "group1": 60, "group2": 60, "group_bi": 54, "group_column": [38, 58], "groupbi": [32, 33, 38, 43, 46, 47, 54, 56, 58, 59], "grow": [47, 49], "growth": 60, "gruvbox": 60, "gssapi": 58, "gt": [23, 47, 64, 66, 68], "guam": 49, "guarante": [45, 52], "gui": 47, "guid": [52, 53], "guidelin": [49, 65], "gz": [53, 62, 68], "gzip": 62, "h": [3, 39, 45, 47, 51, 59, 60, 68], "h1": 59, "h384": 53, "ha": [1, 5, 12, 18, 26, 30, 31, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 59, 60, 64, 65, 72], "habitat": 48, "had": [1, 31, 38, 53, 58, 59], "hadoop": [44, 45, 56], "hagan": 49, "haha": 53, "hai": 53, "half": 47, "halfwai": 45, "hall": 49, "hallucin": 50, "hampden": 48, "hand": [23, 49, 54, 60], "handi": [15, 18, 24, 25, 36, 38, 58, 59, 60, 63, 66, 67, 68, 69], "handl": [1, 4, 13, 14, 18, 22, 23, 38, 44, 45, 48, 49, 50, 51, 52, 54, 56, 58, 60, 62, 63, 67, 68, 69], "handle_unknown": [47, 51], "handler": 68, "handwritten": 64, "hansen": 49, "happen": [25, 38, 45, 65, 68], "happi": [38, 47, 58], "happiness_report_2022": 47, "har": 43, "hard": [1, 6, 47, 49, 53, 56, 60, 62, 67, 69], "hardcod": 6, "harder": [1, 4, 6, 23, 38, 58, 65, 69], "harlem": [47, 60], "harm": 62, "harri": 48, "harvard": 49, "has_": 56, "has_answ": 49, "has_company_logo": 47, "has_few_return": 56, "has_high_spend": 56, "has_quest": 47, "hash": 51, "hashabl": 4, "hashtag": [49, 53], "hasn": 59, "hassl": [67, 68], "hat": 49, "hate": 43, "have": [1, 3, 4, 11, 13, 20, 23, 24, 25, 26, 28, 30, 31, 32, 37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72], "hbr2own": 53, "hca": 47, "he": 53, "head": [30, 38, 44, 45, 47, 48, 49, 52, 53, 54, 58, 59, 60, 62, 64, 69], "head_view": 53, "headach": 68, "header": [41, 43, 46, 48, 53, 64, 67], "health": 47, "healthi": [53, 60], "heat": [49, 68], "heatmap": 47, "heavi": 54, "heavili": 51, "heavyladybug837": 49, "heavywolf743": 49, "heerhugowaard": 60, "hei": [47, 50], "heiberg": 64, "height": [13, 26, 47, 60], "heliport": 54, "hello": [6, 13, 22, 49, 50, 62, 64, 68, 69], "help": [1, 10, 31, 38, 41, 45, 47, 48, 50, 51, 52, 53, 56, 57, 58, 59, 63, 64, 68, 69, 71], "helper": 56, "helpfulli": 50, "her": [49, 53, 72], "here": [1, 14, 15, 23, 31, 36, 38, 44, 45, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69], "hero": 53, "hh": [47, 68], "hi": 59, "hidden": [38, 41, 57, 58, 65], "hierarch": [18, 51, 56, 57, 60], "hierarchi": [18, 47, 56], "hierarchicalforecast": 59, "hierarchicalreconcili": 59, "high": [6, 19, 23, 25, 47, 49, 53, 54, 56, 57, 59, 69], "high_level": 64, "higher": [38, 51, 58, 59], "highest": [41, 44], "highli": [47, 49], "highlight": [56, 57, 59, 64, 67, 68], "highlight_cel": 37, "highlight_numb": 37, "hight": 49, "hike": 53, "hill": [47, 60], "hillari": 53, "him": 49, "himself": 49, "hint": [6, 18, 64, 65, 67], "hip": 60, "histgradientboostingclassifi": 51, "histogram": 59, "histor": 59, "histori": 45, "hit": 68, "hive": 43, "hl": 49, "hline": 37, "hobbi": 53, "hock": 53, "hockei": 53, "hold": [6, 24, 55, 59], "holidai": 60, "hollywood": 49, "hollywoodreport": 49, "home": [8, 35, 38, 44, 49, 52, 53, 58, 60, 66, 68], "homebrewltd": 49, "hometown": 49, "honei": 53, "honeyinthejar": 53, "hood": 60, "hook": 65, "hope": 59, "horizon": 59, "horizont": 48, "hors": [49, 53], "host": [43, 48, 49, 52, 58], "hostnam": [44, 52], "hot": [48, 49, 50], "hour": [15, 32, 36, 38, 45, 47, 58, 59, 60, 62, 68, 69], "hourli": [45, 59, 69], "hous": [47, 51, 57], "houseag": 51, "how": [1, 3, 6, 12, 15, 24, 26, 29, 32, 33, 36, 38, 43, 45, 48, 49, 50, 52, 53, 54, 56, 58, 59, 60, 62, 63, 65, 66, 67, 68], "howev": [1, 5, 6, 9, 18, 20, 23, 24, 33, 34, 38, 43, 51, 56, 58, 59, 60, 62, 63, 65, 69], "howto": 47, "hq720": 69, "hrec": 59, "href": 41, "hspace": 59, "hstreeclassifiercv": 51, "ht": 49, "html": [28, 47, 49, 50, 51, 59, 60, 64], "html_url": 67, "htmlmin": 66, "http": [1, 23, 28, 30, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 62, 63, 64, 65, 66, 67, 69], "http_proxi": 66, "https_proxi": 66, "hudson": [47, 60], "hue": [60, 69], "huge": 54, "huggingfac": [53, 64], "huggingface_hub": 64, "human": [47, 50, 59], "humid": 60, "hundr": 53, "hunter": 59, "hurl": 49, "hydra": [38, 58], "hydra_exampl": 63, "hyperparam": 43, "hyperparamet": [51, 60], "hypertun": 51, "i": [1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "i64": 54, "ic": [53, 60, 62, 68], "ichigo": 49, "icon": 73, "icrecream": 68, "id": [29, 30, 43, 44, 45, 46, 49, 50, 51, 53, 55, 56, 59, 63, 65, 67, 69], "id_00": 59, "id_01": 59, "id_1": 59, "id_var": 39, "idea": [38, 58], "ideal": [5, 23, 47, 56, 60], "ident": [15, 25, 36, 56], "identifi": [13, 38, 43, 46, 48, 51, 52, 53, 57, 58, 59, 65, 68, 69], "idf": 53, "idg": 63, "idjit": 53, "if__name__": 6, "if_exist": [43, 46], "ignor": [17, 26, 30, 38, 47, 51, 53, 56, 58, 60, 62, 66], "ignore_index": [43, 46], "ignore_ord": [38, 58], "ignore_warn": 51, "ihavetwoappl": 53, "ii": [47, 48], "iid": 63, "iii": 47, "ikea": 4, "illeg": 44, "illustr": [1, 13, 59], "iloc": [6, 28, 30, 31, 52, 59, 60], "im": 47, "imag": [43, 49, 60, 64, 66], "imageri": 47, "imagin": [1, 23, 32, 47, 51, 54], "imbalanc": 49, "imblearn": 51, "img": 49, "immedi": [53, 54, 62], "immut": [4, 18], "impact": [38, 54, 58, 59], "implement": [18, 19, 23, 28, 38, 45, 50, 51, 53, 56, 58, 59, 67, 71], "import": [1, 2, 3, 5, 6, 8, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 67, 68, 71], "imposs": 6, "improv": [6, 26, 29, 30, 43, 46, 47, 49, 50, 51, 56, 60, 62, 64, 65, 70], "improvis": 47, "imput": [47, 51], "in_rang": [38, 58], "in_season": 24, "in_timezon": 59, "in_word": 59, "inact": 45, "inadvert": 6, "inc": [47, 48, 53], "inch": 49, "includ": [6, 37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 62, 65, 66, 68, 72], "include_lowest": [38, 58], "incom": [47, 49, 56, 69], "incompat": [26, 65, 66], "incomplet": [45, 68], "inconsist": [38, 43, 45, 53, 56, 58, 59, 62, 68], "inconveni": 64, "incorpor": [51, 53, 59, 72], "incorrect": [38, 46, 47, 58, 62], "increas": [15, 18, 28, 32, 36, 47, 48, 51, 56, 59, 60, 65], "increment": [1, 45, 65], "ind": 33, "inde": 26, "indent": 43, "independ": [56, 59, 60], "index": [2, 8, 11, 20, 21, 28, 30, 31, 34, 39, 43, 46, 47, 49, 53, 59, 65, 68], "index_col": [30, 59], "indexingerror": 33, "india": 47, "indic": [7, 20, 21, 41, 49, 51, 53, 56, 59], "indicator_id": 47, "individu": [28, 59, 65], "indol": 53, "industri": 47, "ineffici": [17, 20, 31, 43, 45, 46, 54, 56], "inf": 59, "infer": [26, 31, 43, 46, 53, 56, 59, 69], "infer_object": 49, "infer_signatur": 51, "inferred_df": 31, "infin": 25, "infix": 62, "inflex": 59, "influenc": [51, 53], "info": [18, 31, 32, 38, 44, 50, 51, 53, 57, 58, 59, 66, 67, 68, 69], "inform": [6, 23, 24, 44, 47, 48, 49, 50, 51, 56, 57, 60, 65, 66, 68, 69], "infrequ": [47, 53], "ingest": 45, "ingredi": 49, "inher": [38, 58, 62], "inherit": 51, "ini": 69, "init": [52, 59, 66, 67], "initi": [18, 24, 38, 44, 45, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 62, 66], "initial_bal": 1, "initial_data": 45, "inject": [49, 55, 56], "ink": [15, 36], "inlier": 51, "inlin": 60, "inner": [47, 56], "inner_f": 68, "inplac": [35, 65], "input": [13, 23, 24, 43, 49, 50, 51, 53, 59, 60, 63, 64, 65, 68, 69, 71], "input_data": 65, "input_df": [43, 44], "input_field": 53, "input_model": 65, "input_path": 63, "input_s": 59, "input_schema": [38, 58], "input_text": [53, 63], "input_typ": [23, 65], "input_valu": [23, 65], "input_vari": 50, "inquisit": 47, "insampl": 59, "inse": 49, "insert": [8, 28, 38, 39, 43, 45, 50, 53, 58, 59, 68, 71], "insert_rows_sql": 43, "insid": [6, 15, 22, 36, 38, 58, 60, 62, 69], "insight": [47, 50, 51, 53, 59, 60], "inspect": 51, "inspector": 68, "inspir": [48, 51], "instal": [1, 2, 23, 24, 25, 26, 28, 30, 31, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71], "install_al": 69, "installablerequir": 51, "instanc": [6, 18, 23, 38, 48, 51, 53, 56, 58, 59, 62, 65], "instanti": [1, 38, 44, 51, 53, 58, 59, 60], "instantli": 6, "instead": [1, 2, 5, 7, 13, 17, 20, 21, 24, 25, 26, 28, 30, 31, 32, 33, 34, 38, 39, 41, 44, 45, 49, 51, 53, 54, 58, 59, 62, 64, 65, 66, 67, 68], "instruct": [32, 47, 49, 50], "instructlab": 49, "int": [2, 5, 6, 8, 12, 13, 18, 23, 26, 38, 43, 44, 46, 48, 50, 53, 55, 56, 57, 58, 60, 64, 65, 68, 69], "int64": [28, 30, 31, 32, 33, 34, 39, 43, 44, 45, 46, 47, 49, 51, 54, 57, 59], "int8": 57, "integ": [5, 12, 15, 18, 20, 23, 26, 31, 36, 38, 43, 50, 58, 65, 69], "integer_column": 54, "integertyp": 56, "integr": [31, 38, 44, 47, 49, 52, 53, 58, 64], "intellig": 62, "intend": [28, 49, 56, 69], "intens": 45, "intention": [38, 58], "interact": [38, 44, 48, 49, 51, 53, 58, 59, 62], "intercept": [48, 51, 59], "interest": [53, 59, 60], "interest_over_tim": 49, "interfac": [1, 43, 44, 47, 67, 68], "intermedi": 54, "intern": [23, 43, 46, 47, 48, 59], "internet": 47, "internship": 47, "interpol": [56, 64], "interpret": [57, 59, 66], "interquartil": [38, 58], "interrogate_exampl": 65, "intersect": 44, "interv": [45, 48, 56], "intervent": 59, "interview": 45, "intrigu": 49, "intrins": 21, "introduc": [1, 5, 6, 56, 58, 72], "intuit": [1, 18, 43, 56, 59, 64, 68, 69], "invalid": [1, 5, 13, 38, 58, 64], "invalid_student_df": [38, 58], "invari": 45, "invest": 59, "invok": [26, 56], "involv": [28, 38, 45, 51, 52, 53, 54, 56, 58, 62], "io": [45, 49, 51, 52, 53, 54, 60], "ipcc": 50, "ipcc_ar6_syr_longerreport": 50, "ippc": 50, "iprogress": 60, "ipykernel_174022": 68, "ipykernel_23035": 64, "ipykernel_337430": 1, "ipykernel_38110": 20, "ipykernel_40588": 20, "ipykernel_77093": 28, "ipykernel_791962": 33, "ipynb": [22, 41, 60, 69, 71], "ipytest": 56, "ipython": [24, 47, 64, 68], "ipythonexperimentdisplai": 60, "ipyvizzustori": 60, "ipywidget": 60, "iqr": [38, 58], "iri": 60, "iris_data": 51, "irrelev": 51, "is_all_nan": 33, "is_bool_index": 33, "is_csv": 6, "is_dir": 69, "is_even": [5, 57], "is_in": 54, "is_list_like_index": 33, "is_long_term": 56, "is_mal": [38, 58], "is_mamm": 60, "is_month_end": 59, "is_month_start": 59, "is_numb": 6, "is_pet": 60, "is_post_process": 49, "is_quarter_end": 59, "is_quarter_start": 59, "is_sequ": 6, "is_subset": 14, "is_us": 6, "is_working_dai": 59, "is_year_end": 59, "is_year_start": 59, "isalnum": 68, "isalpha": 68, "isascii": 68, "isb": 47, "isdecim": 68, "isdigit": [20, 68], "isidentifi": 68, "isin": [38, 58], "isinst": [1, 6, 7, 12, 13, 18, 19, 23, 38, 50, 58], "island": [44, 59, 64], "islands_mini": 64, "islist": [38, 58], "islow": 68, "isn": 25, "isna": [33, 38, 52, 58], "isnotnul": 56, "isnow": [38, 58], "isnumer": 68, "iso": 68, "isocalendar": 68, "isoformat": 68, "isol": [38, 58], "isoweekdai": 68, "ispartialdict": [38, 58], "isprint": 68, "isra": 53, "israel": 53, "isspac": 68, "isstr": [38, 58], "issu": [5, 6, 18, 26, 31, 32, 38, 43, 46, 47, 49, 53, 56, 57, 58, 62, 65, 67, 73], "issubset": 14, "istitl": 68, "istruelik": [38, 58], "isupp": [7, 68], "itag": 69, "item": [1, 6, 8, 10, 11, 28, 33, 37, 38, 43, 49, 50, 51, 53, 56, 58, 62, 64, 65, 69], "item_id": [51, 56], "item_pric": 56, "item_price_panda": 56, "item_price_view": 56, "itemid": 51, "iter": [10, 38, 51, 58, 59, 62, 68, 72], "iterdir": 69, "itertool": [15, 16, 36, 51, 62], "ites": 53, "its": [1, 2, 6, 13, 15, 18, 24, 25, 31, 36, 37, 38, 43, 45, 49, 51, 53, 56, 58, 59, 60, 62, 64, 66, 68], "itself": [68, 71], "iv": 47, "ivers": 71, "ivi": 45, "ivy2": 45, "ivyset": 45, "j": [15, 20, 36, 47, 53, 69], "ja_cal": 59, "jake": 47, "jalakeno": 47, "jalaoeno": 47, "jalapend": 47, "jalapenh": 47, "jalapeno": 47, "jalapeto": 47, "jalaponi": 47, "jalapxno": 47, "jalqceno": 47, "jalxpeno": 47, "jamaica": 47, "jame": 49, "jane": [38, 43, 45, 56, 58], "januari": [6, 44, 68], "japan": 59, "japapeno": 47, "jar": [44, 45, 53], "jasmin": 49, "java": [44, 45, 56], "javascript": [60, 69], "jaw": 47, "jbrownle": 59, "jean": 49, "jendrikseipp": 65, "jeremi": 49, "jerk": 49, "jew": 53, "jewish": 53, "jinja2": [64, 66], "job": [5, 47, 49, 53, 67], "job_descript": 53, "job_id": 47, "joblib": [1, 2, 51], "john": [31, 38, 43, 45, 48, 50, 53, 56, 58, 69], "johnson": [45, 56], "join": [10, 20, 22, 39, 41, 43, 48, 53, 54, 68], "join_column": 52, "joined_df": 56, "joint": 53, "joke": 49, "jokerit": 53, "jordan": 47, "jose": 60, "josh": [4, 39, 60, 62], "jpg": [49, 69], "jpg_e15_fr_q65": 49, "jpg_e15_q65_s120x120": 49, "jr": 59, "json": [38, 45, 49, 51, 55, 64, 67, 69], "json_output_path": 62, "juic": 49, "juli": [44, 49, 60], "jump": 53, "june": [44, 50, 53], "jupyt": [37, 41, 51, 59, 64, 67, 69, 72, 73], "jupyter_displai": 64, "just": [1, 17, 24, 48, 49, 50, 51, 52, 53, 59, 60, 64, 66, 67, 69], "justifi": 68, "juvenil": 51, "juvenile_clean": 51, "jylapeno": 47, "jzlapeno": 47, "k": [4, 8, 51, 53, 59, 65], "k7z": 49, "kale": 49, "kanari": 60, "kanhari": 67, "karimloo": 49, "kate": 48, "kb": [31, 68], "keep": [6, 29, 30, 38, 39, 44, 47, 49, 50, 52, 54, 56, 58, 63, 65, 67, 72], "keepend": 68, "kei": [7, 14, 29, 32, 33, 34, 38, 43, 45, 47, 48, 50, 52, 53, 54, 55, 56, 58, 60], "kendra": 49, "kept": 53, "kernel": [1, 51, 65], "key1": 29, "key2": 29, "key_func": 20, "keyboard": [43, 53, 60], "keyboardaug": 53, "keyword": [9, 23, 43, 50, 63], "keyword_processor": 53, "keywordprocessor": 53, "kh": 53, "khaki": 49, "khuen": [15, 36], "khuyen": [13, 15, 17, 22, 35, 36, 38, 39, 41, 44, 53, 58, 60, 62, 66, 68, 72], "khuyen_tweet": 49, "khuyentran": [13, 38, 45, 49, 51, 53, 55, 56, 58, 59, 60, 64, 65, 68], "khuyentran1401": [45, 47, 48, 62, 67], "khuyentran16": 49, "ki": 64, "kid": 47, "kill": 47, "kill_brows": 69, "kilomet": 62, "kind": [25, 30, 31, 53], "king": 59, "kingdom": [49, 53], "kitchen": [24, 69], "kiwi": 5, "km": 64, "kmean": [1, 53], "kmeans_file_path": 1, "kmeans_model": 1, "kneedl": 59, "kneeloc": 59, "kneighborsclassifi": [51, 65], "kneighborsregressor": 59, "kneighborstimeseriesclassifi": 59, "knn": 51, "knock": 69, "know": [6, 25, 31, 38, 49, 51, 53, 58, 59, 62, 68], "knowledg": [53, 72], "known": 64, "kotaemon": 49, "ks120626hmwcxjwjc7vk": 53, "ks120gv6c72jmszkmtd7": 53, "ks1218w78fgvpvp2kxpx": 53, "ks123k75yyk8vgh90nc": 53, "ks125ls6n7wp4s6sftck": 53, "ks1282t6std9rjz677xl": 53, "ks440w865gc4vrbw6ljp": 53, "ks7lo8p3mxb93r3c9rwl": 53, "kw_list": 49, "kw_onli": 51, "kwarg": [1, 5, 35, 62, 65, 68], "l": [2, 7, 8, 11, 24, 26, 31, 33, 34, 37, 38, 39, 47, 51, 58, 60, 65, 69], "l1": [6, 51], "l12": 53, "l2": [6, 51], "l3": 6, "l6": 53, "l_extendedpric": [43, 46], "l_quantiti": [43, 46], "l_returnflag": [43, 46], "l_train": 47, "lab": 51, "label": [19, 33, 34, 38, 39, 43, 48, 50, 51, 53, 56, 58, 59, 60, 64], "label_": 53, "labelcol": 51, "labelcolor": 60, "labeling_funct": 47, "labelpropag": 51, "labels_": 51, "labelspread": 51, "labor": 59, "labour": 59, "labrador": 53, "lacinato": 49, "lack": [45, 48, 50, 59, 64], "ladi": 49, "lag": [51, 59], "lag120": 59, "lag144": 59, "lag168": 59, "lag24": 59, "lag48": 59, "lag7": 59, "lag72": 59, "lag96": 59, "lag_featur": 59, "lai": 60, "lake": [43, 46, 48], "lambda": [7, 17, 20, 23, 24, 28, 31, 39, 44, 53, 54, 57, 62, 65], "lampton": 49, "landmass": 64, "lang": 53, "langchain": 50, "languag": [51, 60, 67], "laptop": [43, 46, 69], "larg": [8, 15, 28, 35, 36, 38, 39, 45, 47, 49, 51, 53, 56, 57, 58, 59, 60, 62, 65], "large_log": 20, "large_log_fil": 20, "large_num": 12, "larger": [34, 43, 45, 46, 48], "largest": [41, 51, 64], "last": [1, 4, 5, 6, 9, 13, 20, 24, 26, 33, 38, 41, 45, 47, 49, 58, 62, 65, 71], "last_int": 26, "last_n": 59, "last_nam": 56, "last_str": 26, "last_talk": 45, "last_upd": 45, "lastli": 60, "later": [51, 59, 65], "latest": [49, 59, 66, 67], "latex": 71, "latexifi": 64, "latin": 30, "latitud": [48, 49, 51], "latt": 50, "latter": 59, "lau": 47, "laudabl": 49, "laugh": 47, "launch": [38, 50, 53, 56, 58, 73], "lauren": [4, 39], "lauri": 49, "layer": [48, 53], "lazi": [24, 53], "lazili": 20, "lazy_frame1": 54, "lazy_frame2": 54, "lazy_frame3": 54, "lazy_load": 51, "lazyclassifi": 51, "lazyfram": [38, 54, 58], "lazypredict": 51, "lcemyr5": 49, "lead": [1, 4, 5, 6, 9, 13, 15, 18, 28, 36, 38, 45, 46, 48, 49, 51, 53, 54, 56, 58, 59, 60, 62, 67, 68], "leaf": 51, "learn": [1, 10, 23, 25, 38, 49, 50, 53, 54, 56, 58, 60, 62], "learner": 53, "learning_r": 20, "least": [6, 41, 53, 69], "leav": [34, 45, 60], "lebanon": 47, "ledataset": [38, 58], "lee": 56, "left": [19, 25, 39, 59, 62, 64, 65, 68], "left_on": [29, 47], "legend": [38, 51, 58, 59, 60], "lego": 68, "leisur": 59, "lemon": 20, "len": [1, 6, 13, 38, 44, 45, 53, 58, 59, 60, 64, 65, 69], "len_list": [38, 58], "length": [9, 31, 33, 44, 51, 53, 59, 62, 65, 68], "lengthi": [4, 6, 20, 33, 57], "lenox": [47, 60], "leon": 47, "lesampl": [38, 58], "lesotho": 47, "less": [1, 2, 4, 6, 18, 20, 23, 31, 38, 41, 47, 51, 53, 56, 58, 68], "less_than": 23, "lesuccess": [38, 58], "let": [1, 4, 6, 13, 14, 23, 25, 38, 43, 45, 46, 47, 49, 51, 53, 54, 56, 58, 59, 60, 62, 63, 64, 65, 66, 69], "letter": 47, "level": [6, 18, 44, 45, 47, 52, 53, 54, 56, 57, 59, 60, 68, 69], "levelnam": 68, "leverag": [28, 38, 43, 44, 46, 53, 54, 58, 60, 67], "lex": 53, "lexicograph": 62, "lf": [38, 47, 58], "lf_summari": 47, "lfanalysi": 47, "lgb": [51, 59], "lgbmregressor": 59, "li": 59, "lib": [33, 35, 41, 44, 45, 49, 51, 53, 56, 59, 60, 62, 64, 65, 66, 68], "librari": [0, 17, 19, 20, 21, 22, 23, 24, 25, 27, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 65, 66, 68, 70, 71, 72], "life": [25, 47], "lift": 54, "light": [51, 60, 69], "lighter": [23, 68], "lightgbm": 59, "lightn": 54, "like": [3, 6, 8, 17, 18, 24, 25, 32, 33, 37, 38, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69], "likelihood": 48, "likely_unsaf": 62, "lime": 49, "limeston": 59, "limit": [12, 15, 20, 31, 36, 38, 43, 49, 50, 53, 57, 58, 59, 65], "limit_and_offset": 43, "limit_denomin": 12, "linalg": 51, "lincoln": [47, 60], "line": [1, 4, 5, 9, 13, 17, 18, 20, 24, 25, 28, 30, 41, 43, 44, 46, 48, 52, 60, 62, 67], "line_color": 6, "line_width": 6, "linear": 51, "linear_model": [47, 51, 59], "lineardiscriminantanalysi": 51, "linearregress": [51, 59], "linearregressionlinearregress": 51, "linearsvc": 51, "lineitemsf1": [43, 46], "lineno": 68, "linewidth": [6, 51, 59], "link": [23, 30, 32, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72], "linspac": 6, "lint": [43, 65], "linux": [38, 58, 69, 71], "lion": 1, "list": [2, 5, 12, 13, 18, 19, 26, 28, 32, 34, 38, 43, 46, 47, 48, 49, 50, 51, 53, 58, 59, 60, 62, 64, 65, 66, 69], "list_": 17, "list_comprehens": [38, 58], "list_data": 8, "list_rang": 65, "listen": 69, "lit": 56, "litellm": 49, "liter": [50, 65], "litt": 44, "littl": [47, 49], "live": [47, 48, 49, 60, 68, 73], "livingroom": 69, "lizi": 53, "ljust": 68, "ll": [10, 47, 51, 54, 59, 62, 64], "llc": 53, "llm": 44, "llmgener": 49, "llmtestcas": [38, 58], "lmbda2": 59, "ln": 48, "lo": [38, 46, 58, 59], "load": [1, 20, 30, 43, 44, 45, 46, 47, 49, 51, 53, 55, 56, 57, 59, 60, 62, 63, 69], "load_and_split": 50, "load_breast_canc": 51, "load_credit": 51, "load_dataset": [47, 60], "load_diabet": 51, "load_dotenv": 63, "load_ext": [64, 71], "load_from_df": 51, "load_iri": [31, 47, 51, 52, 60], "load_model": 51, "load_occup": 51, "load_robot_execution_failur": 59, "load_sunspot": 59, "load_win": 60, "load_wineind": 59, "loader": [50, 51, 62], "loader_modul": 51, "loblaw": 52, "loc": [28, 29, 32, 33, 48, 53, 54, 59], "loc1": 4, "local": [51, 53, 56, 59, 64, 65, 66, 68], "local_fil": 62, "localartifact": 51, "localfilesystem": 51, "localhost": [38, 43, 46, 53, 58], "localtim": 68, "locat": [1, 13, 38, 39, 47, 51, 52, 53, 58, 59, 69], "lock": 66, "log": [5, 20, 44, 45, 53, 56, 59, 69], "log1p": 47, "log4j": 44, "log_entri": 20, "log_loc": 68, "log_model": 51, "log_step": 68, "log_transform": 47, "loggamma": 48, "logger": [38, 58, 68], "logging_exampl": 68, "logic": [1, 5, 45, 48, 51, 60, 65], "login": [49, 69], "login_button": 69, "login_field": 69, "logist": 51, "logisticregress": [47, 51], "logisticregressioncv": 51, "lognorm": 48, "logo": 47, "loguru_exampl": 68, "loguru_vs_log": 68, "london": [43, 46, 47], "long": [1, 15, 36, 38, 39, 43, 44, 49, 53, 56, 58, 59, 64, 65, 68], "longer": [9, 11, 38, 49, 53, 58, 66, 68], "longitud": [48, 49, 51], "longmeadow": 48, "longtyp": 56, "look": [25, 38, 47, 48, 49, 51, 53, 58, 59, 60, 62, 66, 68], "loop": [4, 7, 17, 24, 30, 43, 45, 46, 54, 64, 68], "loopback": 44, "loos": 52, "lord": 47, "lose": [51, 57], "loss": [31, 45, 60, 69], "lot": [1, 24, 38, 47, 49, 58, 60, 66, 68], "love": [43, 47, 49, 53], "lover": 49, "low": [6, 19, 30, 31, 45, 54, 56, 57, 59], "lower": [33, 34, 50, 51, 53, 59, 68], "lower_1": [], "lowerboundsoncoeffici": 51, "lowerboundsonintercept": 51, "lowercas": [53, 68], "lowesssmooth": 59, "lowsurf": 53, "loyal": 56, "loyal_customer_condit": 56, "loyalty_year": 56, "lr": [51, 60], "lrr": 37, "lst": 8, "lstrip": 68, "lt": [23, 47, 68], "lt01": 43, "lt02": 43, "lt09": 43, "luca": 49, "lucikili": 51, "lucil": 52, "luckili": [25, 60], "lunar": 53, "lunat": 49, "luther": 59, "lynnbbt": 52, "l\u1ebb": 53, "m": [1, 3, 5, 8, 15, 26, 30, 31, 34, 36, 38, 39, 43, 45, 46, 47, 49, 52, 53, 54, 58, 59, 60, 65, 68], "m4": 59, "ma": 59, "machin": [1, 38, 46, 47, 50, 52, 53, 54, 57, 58, 59, 60, 62, 71], "mackai": 59, "madagascar": 47, "made": [15, 36, 49, 50, 53, 64, 67], "mae": 51, "magic": [64, 71], "mahari": 52, "mai": [1, 4, 5, 23, 38, 44, 45, 47, 48, 49, 51, 54, 58, 59, 60, 65, 69], "main": [1, 6, 13, 38, 44, 48, 49, 53, 56, 59, 63, 64, 65, 66, 68, 69], "mainli": 6, "maintain": [4, 5, 6, 19, 43, 44, 45, 46, 47, 49, 53, 56, 65, 67, 69], "mainten": [56, 63, 65], "mainthread": 50, "major": [47, 51], "make": [1, 4, 5, 10, 11, 13, 19, 20, 22, 23, 25, 26, 31, 38, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 63, 65, 67, 68, 69, 72], "make_blob": 1, "make_classif": [47, 51], "make_copi": 68, "make_deduplication_data": 47, "make_fruit": 26, "make_pip": 51, "make_pipelin": [47, 51], "make_regress": 51, "makedir": [22, 45], "maketran": 68, "malawi": 47, "male": [17, 49, 60], "malici": [52, 55, 62, 69], "mallard": 48, "malwar": 69, "man": [50, 53], "manafort": 53, "manag": [17, 18, 38, 45, 47, 49, 50, 51, 53, 56, 58, 59, 60, 62, 63, 65, 67], "mandarin": 60, "mango": 14, "manhattan": [47, 60], "mani": [6, 12, 32, 49, 50, 51, 59, 60, 67, 68, 69], "manim": 64, "manipul": [10, 22, 27, 43, 44, 45, 46, 48, 54, 56, 60, 64], "manual": [1, 18, 23, 31, 43, 44, 47, 48, 51, 52, 53, 56, 60, 62, 63, 64, 65, 67, 68, 69], "map": [6, 17, 20, 24, 44, 47, 48, 53, 68], "map_": 24, "map_pric": 44, "map_price_to_fruit": 44, "mapieregressor": 51, "mapl": 18, "march": [44, 47, 68], "margaret": 49, "mari": 56, "maria": 53, "marin": 59, "mark": 49, "markdown": [25, 41, 64, 66], "marker": [6, 38, 49, 51, 58, 60], "marker_s": 6, "markeredgecolor": 60, "markers": 6, "market": [56, 59], "market_data": 56, "market_df": 56, "market_tsdf": 56, "marsh": 48, "martin": [49, 59], "marvel": 53, "mask": [33, 53], "mask_al": 41, "mask_ani": 41, "mass": 60, "massachusett": 48, "massiv": 51, "master": [10, 30, 38, 44, 47, 58, 59, 60, 67], "mat": 53, "match": [23, 29, 33, 34, 38, 45, 48, 50, 51, 52, 56, 58, 59, 60, 64, 65, 66, 69], "match_pattern": [15, 36], "matcher": 53, "matching_scor": 47, "mateo": 47, "math": [13, 17, 25, 41, 65, 69], "mathdatasimplifi": [53, 62, 69], "mathemat": 25, "mathrm": 64, "matplotlib": [6, 41, 44, 51, 53, 59], "matplotlib_venn": 60, "matric": 48, "matrix": [8, 47, 48, 51], "matt": 49, "matter": [20, 47], "mauritania": 47, "max": [31, 34, 38, 39, 43, 45, 46, 49, 51, 56, 58, 59, 68], "max_acceptable_sever": 62, "max_card": 48, "max_depth": [51, 60], "max_epoch": 59, "max_insample_length": 59, "max_leaf_nod": 51, "max_length": 53, "max_pric": 56, "max_sampl": 53, "max_step": 59, "max_tim": [38, 58], "max_val": 4, "max_valu": [38, 58], "maxblocksizeinmb": 51, "maximum": [49, 51, 53, 59], "maxit": 51, "maxsplit": 68, "maxtostringfield": 45, "mayb": [15, 36], "maybe_cal": 33, "mb": [2, 31, 51], "mcneil": 64, "md": [64, 69], "md5": 49, "me": [38, 47, 49, 58, 60, 62], "meadow": 60, "mean": [1, 6, 8, 13, 30, 31, 32, 38, 39, 43, 45, 46, 47, 50, 51, 53, 54, 56, 58, 59, 60, 65, 73], "mean_num": 6, "mean_pric": [39, 56], "mean_square_err": 68, "mean_squared_error": 68, "meaning": [1, 13, 38, 56, 58, 59, 65], "meaningfulli": 59, "meant": 69, "measur": [26, 48, 51, 53, 62], "measure_nois": 59, "mech": 58, "mechan": 53, "med": 49, "media": 49, "median": [38, 39, 47, 49, 51, 58, 59], "median_incom": 49, "median_income_person": 49, "medic": 53, "medinc": 51, "medium": [35, 49, 54, 56], "meet": [47, 50, 59], "meeting3": 4, "meeting_detail": 50, "meetingdetail": 50, "meetingextractor": 50, "meetup": 53, "mem": [1, 65], "member": [49, 51], "membership": 43, "memor": 60, "memori": [2, 20, 23, 30, 32, 43, 45, 46, 51, 52, 53, 54, 59], "memory_byt": 51, "memory_profil": [1, 65], "memory_profiler_test": 65, "memory_usag": 31, "memoryerror": 45, "men": 49, "mention": 72, "meow": 60, "merg": [47, 48, 52, 54, 56, 59], "merged_df": 29, "mergeschema": 45, "merseysid": 49, "mess": 67, "messag": [6, 23, 38, 56, 58, 64, 65, 68], "messi": [1, 6, 67], "met": 20, "metaclass": 49, "metadata": [5, 45, 48, 53, 68], "meter": [26, 62], "method": [4, 8, 10, 15, 17, 20, 21, 22, 25, 27, 28, 31, 32, 33, 34, 35, 36, 39, 40, 43, 45, 47, 48, 49, 50, 53, 54, 56, 57, 59, 60, 62, 65, 67, 68, 72], "metric": [38, 51, 53, 58, 60, 64, 65, 68], "metric_column": 54, "metric_sc": 54, "metriccol": 56, "metrics_str": 64, "meurth": 49, "meyer": 49, "mg": 49, "mgmt": 47, "mherrmann": 69, "mi": [47, 64], "miami": [38, 58], "mib": [1, 65], "michael": [4, 31, 49, 52, 56], "microsecond": [51, 68], "microservic": 47, "microsoft": 53, "mid": [19, 47], "middl": 30, "midrul": 37, "midtown": [47, 60], "midwest": 49, "might": [1, 6, 12, 13, 18, 24, 28, 31, 33, 37, 41, 47, 51, 53, 56, 58, 60, 63, 64, 65, 66, 67, 68, 69], "mighti": 49, "mike": [43, 50], "mil": 53, "milk": [49, 50, 53], "milktea": 50, "million": [2, 30, 43, 45, 46, 49, 53, 54], "millisecond": [54, 68], "milwauke": 60, "mime": 69, "mime_typ": 69, "mimic": 64, "min": [13, 30, 31, 38, 39, 43, 45, 46, 56, 58, 68], "min_detectable_effect": [38, 58], "min_pric": 56, "min_round": [38, 58], "min_tim": [38, 58], "min_valu": [38, 58], "minc": 49, "mingramm": 49, "mini": 35, "minilm": 53, "minim": [49, 59, 64], "minimum": [47, 65], "minimum_ag": 49, "minimum_scor": [38, 58], "minor": [51, 56], "minut": [3, 38, 49, 58, 59, 62, 68, 72], "mirror": [62, 65], "misc": 26, "misconcept": 49, "misinterpret": 53, "mislead": 69, "mismatch": [41, 52, 56], "mispelled_food": 47, "miss": [20, 31, 37, 38, 47, 49, 50, 51, 52, 58, 59], "missingno": 66, "mission": [53, 72], "mistak": [45, 53, 60], "mistral": 50, "mistralai": 50, "misunderstand": [38, 58], "mix": [31, 44, 51, 64], "mixtur": 49, "mkdir": [22, 38, 43, 46, 58, 69], "ml": [38, 43, 58, 62, 65], "ml_app": 51, "mlemmodel": 51, "mlf": 59, "mlflow_vers": 51, "mlmodel": 51, "mlpclassifi": 51, "mlrun": 51, "mlxtend": 53, "mm": 68, "mmm": 68, "mmmm": 68, "mobil": 51, "mock_conn": 58, "mock_cursor": 58, "mock_datetim": 38, "mock_get": 38, "mock_remov": [38, 58], "mocker": [38, 58], "mockingbird": 47, "mod": [57, 59], "mode": [28, 44, 45, 59, 60, 66], "model": [1, 37, 43, 47, 48, 49, 52, 64, 65, 67, 69], "model1": 51, "model__max_depth": 51, "model__min_samples_split": 51, "model__n_estim": 51, "model_collect": 51, "model_info": 51, "model_nam": [51, 53], "model_path": [51, 53], "model_predict": 50, "model_select": [47, 51, 52, 59, 65], "model_size_byt": 51, "model_typ": 50, "model_uri": 51, "model_uuid": 51, "model_view": 53, "modellibrari": 51, "modern": [45, 51, 54, 64], "modif": [1, 5], "modifi": [1, 4, 5, 6, 18, 19, 28, 45, 56, 62, 67, 68], "modification_tim": 45, "modul": [1, 5, 13, 17, 18, 20, 21, 24, 26, 33, 45, 49, 51, 57, 64, 65, 68, 69, 71], "modulu": [38, 58], "moment": 47, "mon": 69, "monei": 53, "monitor": [43, 46, 52], "monk": 49, "monkey_exampl": 69, "month": [13, 32, 44, 45, 47, 49, 59, 60, 67, 68, 72], "month_nam": 47, "monthli": 59, "monthrang": 3, "moon": 53, "moor": 47, "mop": [38, 58], "moran": 49, "more": [4, 5, 7, 8, 10, 11, 13, 17, 18, 19, 23, 31, 34, 37, 38, 39, 41, 43, 45, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 63, 64, 67, 68, 69, 72], "more_fruit": 14, "moreov": [38, 53, 58], "mosel": 49, "most": [1, 4, 5, 6, 9, 10, 13, 20, 24, 25, 33, 41, 47, 51, 53, 54, 57, 60, 62, 65, 68], "most_frequ": 47, "mostli": 47, "motiv": 53, "mountain": [53, 59], "mous": [43, 46], "move": [32, 47, 49, 56, 59], "movement": 6, "movingwindowspec": 56, "mp": 54, "mp4": 69, "mp4a": 69, "mp4v": 69, "mprof": 65, "mr": [38, 48, 49, 58], "ms_per_char": 53, "msb": 47, "mse": 51, "msg": 41, "msno": 60, "mt": 60, "much": [6, 38, 47, 49, 50, 58, 59, 60, 64, 67], "mug": 49, "multi": [41, 51, 60], "multi_cel": 48, "multiarrai": 62, "multiindex": 39, "multimethod": 66, "multinomi": 51, "multinomialnb": 65, "multioutput": 68, "multipl": [1, 4, 5, 13, 23, 26, 45, 48, 50, 51, 53, 59, 62, 64, 65, 68, 72], "multiple_of": 23, "multipli": [5, 7, 20, 26, 41], "multiply_func": 26, "multiply_then_divide_by_two": 26, "multiply_thre": 65, "multiprocess": [2, 44, 54], "multivari": 51, "mundan": 43, "murrai": [47, 60], "music": [47, 49], "musician": 47, "must": [1, 6, 18, 20, 23, 38, 43, 46, 50, 51, 53, 54, 58], "mvc": 47, "mwaskom": [30, 44], "my": [1, 17, 22, 28, 32, 38, 43, 47, 50, 53, 58, 62, 63, 64, 66, 67, 68, 69, 71], "my_api_key_provided_by_nixtla": 59, "my_calc": 64, "my_cod": 65, "my_data": [38, 58], "my_data_dir": 1, "my_fil": [38, 58], "my_flow": 68, "my_tabl": 43, "myapp": 45, "myfil": 69, "mypi": 26, "mypy_exampl": 65, "mysql": 43, "myusernam": 63, "m\u01b0\u1eddi": 53, "n": [12, 30, 38, 41, 45, 47, 49, 51, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66], "n1": [38, 47, 58, 59, 69], "n10": 60, "n2": [38, 58, 59], "n_class": 51, "n_cluster": [1, 53], "n_clusters_per_class": [47, 51], "n_col": 68, "n_estim": 43, "n_featur": [1, 47, 51, 59], "n_fold": 51, "n_inform": 51, "n_init": 1, "n_job": [2, 59], "n_model": 59, "n_ob": 68, "n_point": 6, "n_rang": 65, "n_redund": [47, 51], "n_repeat": 51, "n_result": [50, 53], "n_sampl": [1, 47, 51, 59], "n_seri": 59, "n_split": 47, "n_static_featur": 59, "n_test": 51, "n_train": 51, "n_window": 59, "na": 53, "na_rep": 37, "naardema": 49, "nabsurdistan": 47, "nac": 53, "naccel": 64, "nadd": 49, "nage": 69, "naiv": [20, 68], "naive_bay": 65, "nake": 43, "name": [1, 4, 13, 17, 18, 23, 24, 29, 32, 34, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71], "name_of_your_fil": 65, "nameerror": 13, "nan": [28, 29, 32, 34, 37, 38, 39, 45, 47, 58, 60], "nanim": 49, "nardslei": 49, "narr": 60, "nasa": 53, "nat": [47, 49], "nativ": [44, 45, 56, 59], "nativecodeload": [44, 45, 56], "natur": [1, 47, 50, 62], "naugust": 49, "navig": [60, 65, 67, 69], "naw": 53, "nbeat": 59, "nbring": 49, "nbsp": [37, 38, 53, 58], "nbspand": 53, "nbspend": 53, "nbspproject": 53, "nbspto": 53, "nbspyou": 53, "nbuilt": 49, "nbviewer": 51, "ncall": 62, "ncamp": 49, "nclass": 49, "nclassic": 49, "ncol": [51, 59], "ncomput": 49, "ncurrent": 45, "nd": 59, "ndanc": 53, "ndarrai": [1, 51, 62], "ndata": 49, "ndecemb": 49, "ndesign": 48, "ndf": 48, "nearestcentroid": 51, "nearli": [43, 46, 59], "neat": 50, "necessari": [5, 39, 49, 53], "necessarili": [61, 72], "need": [1, 4, 5, 6, 9, 13, 15, 17, 18, 19, 20, 21, 24, 36, 38, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68], "neg": [1, 23, 37, 38, 43, 45, 48, 50, 51, 53, 58], "negat": 53, "neighbor": [53, 59, 65], "neighborhood": 53, "neither": 51, "neocon": 53, "nerdi": 47, "ness": 50, "nest": [13, 48], "nested_data": 46, "nested_list": 8, "net": 49, "netherland": 60, "network": [38, 39, 53, 59], "neutral": [49, 51], "never": [31, 47, 50, 53, 65], "new": [6, 18, 19, 30, 32, 35, 38, 39, 41, 43, 45, 46, 47, 48, 52, 53, 54, 56, 58, 59, 60, 64, 65, 66, 67, 68], "new_": 32, "new_arr": 41, "new_birth_year": 4, "new_categori": [38, 58], "new_data": [1, 6, 45, 47, 54], "new_df": [45, 47, 56, 57], "new_fil": 22, "new_index": 32, "new_method": 57, "new_ord": 5, "new_path": 48, "new_row_posit": 41, "new_sent": 53, "new_target1": 49, "new_target2": 49, "new_train1": 49, "new_train2": 49, "new_valu": [38, 58], "new_venv": 66, "newdatatyp": 1, "newlevel": [44, 45, 56], "newli": 49, "newsgroup": 53, "newsgroups_train": 60, "newspap": 53, "next": [43, 45, 49, 53, 54, 56, 59, 60, 63, 66], "nf": 59, "nfeatur": 59, "nfebruari": 49, "nfifth": 53, "nfirst": [49, 53], "nfounder": 49, "ngherkin": 49, "ngh\u00ecn": 53, "ngive": 49, "ngram": [47, 53], "ngram_scor": 53, "nhigh": 49, "nhour": 60, "nhra": 49, "nhttp": [47, 49], "ni": [47, 49, 53], "nice": [15, 18, 24, 25, 36, 38, 44, 47, 49, 53, 58, 63, 66, 68, 69], "nice_dai": [15, 36], "nicer": 60, "nidl": 64, "night": 49, "nineteen": 53, "nineteenth": 53, "nino": 49, "nio": 44, "nit": 49, "nitro": 49, "nixtla": 59, "nixtla_cli": 59, "nixtla_id_as_col": 59, "nixtlacli": 59, "nkarimloo": 49, "nl": 53, "nlargest": [8, 39], "nlong": 49, "nlp": [22, 64], "nlp_model": 51, "nltk": [51, 53], "nlynch": 47, "nmeta": 49, "nmismatch": 52, "nmiss": 52, "nn": 51, "nname": [55, 64], "nnkerri": 53, "nnumber": 56, "no_company_logo": 47, "no_company_profil": 47, "no_silent_downcast": 49, "noct": 49, "node": [51, 56, 60], "nois": [6, 51], "noise1": 6, "noise_std": 59, "nominatim": 48, "non": [20, 29, 31, 32, 33, 38, 45, 47, 51, 57, 58, 66], "non_tropical_fruit": 14, "none": [1, 5, 6, 26, 29, 31, 33, 38, 43, 45, 47, 49, 51, 53, 56, 57, 60, 62, 63, 64, 65, 68], "nonetyp": 68, "nonstandardimport": 62, "nonzero": 33, "noodl": 53, "nor": 51, "nord": 60, "norm": 48, "normal": [6, 12, 17, 19, 20, 21, 24, 25, 34, 47, 48, 53], "normalized_featur": 47, "north": [30, 47, 48, 49, 54, 59], "northeast": 60, "notat": [24, 46, 56], "note": [24, 31, 51, 59, 65], "notebook": [25, 37, 41, 50, 51, 59, 64, 66, 67, 68, 72, 73], "notebook_tqdm": 60, "noth": [38, 58, 62], "notic": 59, "notimplementederror": 19, "noun": 53, "noun_extractor": 51, "noun_phras": [51, 53], "noun_phrase_extractor": 51, "nounphraseextractor": 51, "now": [1, 6, 18, 22, 25, 26, 28, 30, 33, 38, 43, 45, 47, 48, 51, 53, 54, 58, 59, 60, 66, 67, 68, 69], "np": [1, 2, 6, 8, 28, 30, 31, 33, 37, 38, 44, 45, 47, 48, 49, 51, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 71], "np_data": 8, "npalo": 49, "npartit": 54, "nperform": 49, "nphillip": 49, "npost": 49, "npreviou": 45, "nrant": 47, "nremov": 49, "nrow": [51, 59], "nsa": 53, "nsampl": 53, "nsecond": 53, "nset": 49, "nsome": 69, "nsouth": 49, "nspeed": 64, "nstack": 39, "nstop": 64, "nsw": 59, "nt": 48, "ntabl": 45, "ntake": 49, "ntarget": 49, "ntest": 49, "nthe": 49, "nthei": 48, "nthi": 53, "ntime": 47, "nto": 49, "nub": 49, "null": [31, 32, 34, 38, 50, 51, 57, 58], "null_count": 45, "nullabl": [38, 58], "nulliti": 60, "num": [2, 5, 6, 7, 8, 9, 12, 13, 15, 20, 34, 36, 38, 39, 41, 47, 51, 56, 57, 58, 62, 64, 65, 68, 69], "num1": [5, 6, 19, 33, 38, 47, 54, 58, 64, 69], "num2": [5, 6, 19, 38, 47, 54, 58, 64, 69], "num_added_fil": 45, "num_breakpoint": 59, "num_copied_row": 45, "num_cor": 2, "num_deleted_row": 45, "num_experi": 57, "num_guest": 6, "num_list": [17, 20], "num_memb": 6, "num_record": 45, "num_removed_fil": 45, "num_row": [30, 54], "num_sampl": 59, "num_seri": 59, "num_thread": 59, "num_top": 53, "numba": 59, "numbatch": 45, "number": [2, 3, 6, 7, 8, 19, 25, 28, 30, 31, 38, 44, 45, 47, 48, 49, 51, 54, 56, 57, 58, 59, 60, 62, 64, 65, 68, 69], "numer": [23, 31, 47, 57, 59, 62, 64, 65, 67, 68, 69], "numeric_featur": 47, "numeric_transform": [47, 51], "numerical_column": 51, "numerical_featur": 47, "numerical_transform": 47, "numexp": 17, "numfilesad": 45, "numfilesremov": 45, "numpi": [1, 2, 6, 8, 28, 30, 31, 32, 33, 37, 38, 44, 45, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 71, 72], "numpy_arrai": 1, "numpy_memori": 31, "numpyndarraytyp": 51, "nums1": 6, "nums_2": 9, "nuniqu": 31, "nurs": 47, "nuse": 47, "nusvc": 51, "nutrient": 49, "nwe": 49, "nwintern": 49, "nwitti": 47, "nworld": 49, "ny": [46, 47], "nyep": 53, "nyou": 49, "o": [2, 6, 22, 33, 38, 43, 45, 46, 47, 49, 50, 53, 54, 58, 59, 63, 71], "oakland": 47, "oalapeno": 47, "oan": 53, "oatmeal": 53, "obj": [1, 6, 17, 33], "object": [5, 12, 17, 18, 25, 28, 30, 31, 32, 33, 34, 35, 43, 44, 45, 47, 49, 51, 52, 53, 56, 59, 60, 62, 65, 67], "object_typ": 51, "observ": 59, "obsolet": [38, 58], "obtain": [22, 34, 43, 48, 51, 59, 72], "obviou": 6, "occasion": 49, "occur": [6, 28, 44, 53, 59, 60], "occurr": [1, 15, 33, 36, 47, 60, 65, 68], "oct": 49, "octob": [38, 44, 58], "oe": 49, "off": 60, "offer": [14, 23, 30, 31, 38, 45, 49, 50, 53, 54, 56, 58, 59, 60, 62, 64, 65], "offic": [47, 69], "offlin": 50, "offset": [32, 49, 59], "offspr": 47, "oflass": 51, "often": [5, 6, 13, 38, 39, 43, 44, 46, 47, 48, 49, 51, 52, 53, 57, 58, 59, 62, 64, 67, 68, 69], "oh": [47, 49], "oi": 41, "oil": 49, "ok": [1, 38, 53, 58], "okai": 47, "old": [6, 47, 68], "old_valu": [38, 58], "old_venv": 66, "older": 45, "oldest": 56, "oliv": [4, 17, 49], "olivia": [4, 49], "omit": 65, "onc": [2, 5, 6, 24, 46, 49, 51, 53, 54, 59, 69], "one": [5, 6, 10, 13, 15, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 38, 39, 41, 43, 44, 47, 48, 49, 50, 51, 53, 56, 58, 59, 60, 62, 64, 65, 67, 68, 69, 72], "one_month_ago": 45, "onedark": 60, "onefil": 66, "onehot": 47, "onehotencod": [47, 51], "oneormor": 62, "ones": [37, 45, 47, 50, 66], "onion": [4, 49], "onli": [1, 4, 7, 11, 12, 15, 19, 20, 24, 26, 28, 29, 31, 36, 41, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 59, 62, 63, 64, 65, 66, 68, 69], "onlin": 4, "only_adversari": 49, "only_generated_data": 49, "oo": 25, "op": [38, 47, 57, 58], "open": [20, 22, 27, 46, 49, 51, 59, 62, 66, 68, 72], "open_new": 69, "openai": [44, 50], "openai_api_kei": [49, 50, 67], "openai_model": 51, "openaical": 50, "openaicallparam": 50, "openaiembed": 50, "openaiextractor": 50, "opencv": 64, "openhand": 49, "openml": 53, "openstreetmap": 60, "oper": [11, 12, 13, 26, 30, 32, 38, 47, 49, 52, 54, 58, 59, 62, 65, 66, 67, 68], "operand": [6, 65], "operationalerror": 58, "opportun": [47, 49], "opt": 49, "optim": [6, 30, 43, 46, 48, 49, 51, 59, 60], "option": [8, 17, 28, 30, 37, 38, 43, 44, 45, 48, 49, 51, 53, 57, 58, 62, 63, 64, 65, 66, 68], "optional_schem": 62, "opu": 69, "oracl": 43, "orang": [4, 5, 7, 9, 13, 14, 17, 20, 21, 24, 26, 29, 33, 34, 38, 39, 43, 44, 49, 52, 56, 58, 65], "orbit": 53, "orchestra": 49, "ord5": 49, "order": [5, 6, 10, 15, 20, 31, 36, 38, 39, 41, 43, 46, 47, 51, 54, 56, 58, 60, 62, 64], "order_bi": 44, "order_count": 56, "order_d": 56, "order_df": 56, "order_id": 56, "order_info": 56, "order_schema": 56, "orderbi": 56, "ordered1": 17, "ordered2": 17, "ordered_s": 35, "orders_df": 56, "ordin": [53, 68], "ordinal_num": 53, "oreo": 53, "org": [28, 30, 44, 45, 51, 53, 62], "organ": [1, 17, 47, 50, 51, 53, 54, 65], "orient": [34, 47], "origin": [4, 5, 6, 25, 30, 31, 33, 38, 39, 41, 45, 47, 49, 51, 53, 56, 58, 59, 63, 67, 69], "originalgener": 49, "origincitynam": 46, "orlando": [38, 58], "osaka": 49, "osmnx": 60, "other": [1, 6, 10, 13, 18, 23, 32, 38, 45, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 63, 64, 65, 67, 69, 72], "other_column": 54, "otherwis": [1, 6, 15, 36, 38, 56, 58, 64, 68], "ounc": 49, "our": [1, 6, 11, 25, 38, 45, 47, 49, 51, 53, 58, 59, 60, 62], "out": [5, 12, 25, 30, 33, 45, 47, 48, 49, 53, 59, 62, 63, 65, 67, 68], "out_of_season": 24, "out_schema": [38, 58], "outback": 59, "outcom": 59, "outdat": [65, 67], "outer": [29, 39, 52], "outlier": [38, 48, 53, 58, 59, 68], "outlin": 51, "outperform": 59, "output": [1, 6, 8, 15, 18, 25, 36, 37, 38, 41, 43, 46, 47, 48, 49, 51, 53, 55, 56, 57, 58, 59, 60, 63, 65, 66, 68, 69, 71], "output_attent": 53, "outputtenv": 49, "outsid": [1, 17], "over": [20, 25, 28, 43, 46, 53, 56, 59, 72], "over_sampl": 51, "overal": [50, 59], "overfit": 53, "overflow": 49, "overhead": [23, 54, 56, 57, 63, 65], "overlap": [29, 47], "overli": 51, "overlook": 65, "overrid": 26, "overs": 31, "overtim": 49, "overtlybadev": 62, "overwhelm": 65, "overwrit": [6, 38, 51, 53, 58, 63, 65, 66, 69], "overwritten": 53, "owen": 48, "own": [2, 18, 24, 49, 53, 56, 64, 68], "owner": [49, 67], "ox": 41, "p": [15, 36, 43, 48, 51, 53, 56, 59, 60, 69, 71], "p1": [43, 44], "p2": [43, 44], "p3": 43, "p_test": 47, "p_train": 47, "p_val": 60, "pa": [38, 58], "pablo": 49, "pace": 47, "pacif": [30, 47], "pack": 49, "packag": [33, 35, 40, 41, 44, 45, 47, 49, 51, 53, 56, 58, 59, 60, 62, 64, 65, 67, 68], "package_nam": 51, "packagenod": 66, "pacoti": 60, "pad": 68, "page": [1, 30, 48, 51, 64, 69, 72], "page_view": 54, "pair": [4, 9, 55, 60], "pairplot": 60, "pairwis": [53, 60], "palett": 59, "palo": 49, "pan": 60, "panda": [1, 2, 5, 6, 19, 47, 48, 50, 51, 52, 53, 59, 60, 64, 65, 66, 71, 72], "pandas_ai": 44, "pandas_api": 45, "pandas_appli": 57, "pandas_dataread": 49, "pandas_df": [54, 56], "pandas_df1": 54, "pandas_df2": 54, "pandas_merg": 54, "pandas_on_spark": 56, "pandas_plus_on": 56, "pandas_read": 49, "pandas_seri": 1, "pandas_tim": [54, 57], "pandas_util": 68, "pandas_vs_swift": 57, "pandasdatafram": 43, "pandasdataset": 59, "pandaslfappli": 47, "paper": 60, "papermil": 71, "paragraph": 49, "parallel": [2, 56, 60], "parallel_appli": 44, "param": [20, 38, 44, 51, 58], "param_grid": 51, "param_nam": 51, "param_rang": 51, "paramet": [7, 8, 18, 19, 20, 30, 31, 32, 35, 44, 46, 48, 49, 51, 53, 56, 63, 66, 68, 71], "parameter": 71, "parametr": 48, "parent": [1, 26, 45, 68], "parenthes": [15, 36], "pari": [43, 46], "park": [47, 53, 60], "parquet": [43, 56], "pars": [23, 53, 59, 64, 65, 67, 68], "parse_arg": 64, "parse_d": [59, 60], "parsed_data": 67, "parsed_queri": 43, "parser": [43, 64], "parsing_report": 64, "part": [5, 38, 45, 47, 48, 57, 58, 62, 68], "parti": 8, "partial": 45, "particip": 50, "particular": [6, 32, 38, 45, 58, 59], "particularli": [13, 23, 43, 51, 54, 57, 62], "partit": [51, 56, 68], "partition_bi": 45, "partition_col": 56, "partition_filt": 45, "partitionbi": 56, "partitionsoptim": 45, "partner": [47, 49], "pass": [1, 7, 17, 28, 38, 43, 49, 51, 53, 54, 56, 58, 63, 65, 66], "passeng": [44, 47, 59, 60], "passiveaggressiveclassifi": 51, "password": [43, 49, 52, 53, 58, 63, 69], "password_field": 69, "past": [25, 37, 41, 45, 47, 49, 59], "pasta": 53, "patch": [38, 58, 60], "path": [2, 38, 43, 45, 46, 48, 51, 52, 53, 58, 63, 64, 66, 69], "pathlib": [38, 43, 46, 48, 58, 69], "patienc": 49, "patricia": 49, "pattern": [6, 15, 24, 36, 39, 59, 60, 68], "pawown": 49, "payload": 53, "payment": [47, 60], "pc_1": 51, "pc_2": 51, "pca": [51, 53], "pcap": 47, "pd": [1, 2, 5, 6, 19, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 65, 66, 68, 71], "pd_df": 54, "pdf": 50, "pdf2imag": 64, "pdfminer": 64, "pdfreader": 48, "peach": 13, "peak": 59, "peel": 49, "pelt": 59, "pen": [15, 36, 59], "penalti": 51, "pencel": [15, 36], "pencil": [15, 36], "penguin": [44, 60, 64], "peninsula": 59, "peopl": [47, 53], "people_t": 45, "pepper": [4, 13, 18, 49, 53], "per": [6, 13, 30, 43, 45, 46, 47, 53, 54, 56, 59, 63, 72], "perc_differ": [38, 58], "perc_difference_test": [38, 58], "percent": [38, 58, 64], "percentag": [38, 51, 52, 58, 59], "perceptron": 51, "perf_count": [38, 58], "perfect": [53, 69], "perform": [1, 2, 6, 23, 28, 30, 38, 39, 43, 44, 45, 46, 47, 49, 50, 51, 56, 57, 58, 60, 64, 68], "perimat": 44, "perimet": 44, "period": [34, 49, 59, 69], "perk": 47, "permiss": 67, "permut": [15, 36], "person": [17, 18, 53], "person1": 39, "person2": 39, "person_data": 18, "perth": 59, "pet": [13, 47, 62], "pet_info": 13, "pet_info1": 13, "pet_info2": 13, "petal": 31, "peter": 49, "pgml": 43, "ph": 68, "phik": 66, "phillip": 59, "phone": [18, 43, 46, 49, 53, 60], "php": 49, "phrase": [1, 50, 53], "phrasematch": 53, "physic": [17, 45, 56, 62], "physica": 47, "physically_ass": 51, "pi": [6, 13, 25, 60], "pic": 49, "picasso": 49, "pick": [8, 53, 65], "pickl": [1, 49, 52, 59, 62], "pickleablekmean": 1, "pickleablemixin": 1, "pickleablemodel": 1, "pickleablesvm": 1, "picklebal": 49, "pickled_data": 62, "pickled_model": 51, "pickup": [47, 60], "pickup_borough": [47, 60], "pickup_dai": 47, "pickup_hour": 47, "pickup_month": 47, "pickup_zon": [47, 60], "pickup_zone_count": 47, "pickup_zone_dist": 47, "pickup_zone_far": 47, "pictur": [22, 47, 49], "pid": 50, "piec": [1, 6, 53, 60, 72], "pii": 53, "pin": 66, "pinch": 49, "pineappl": 14, "pip": [1, 2, 23, 24, 25, 26, 28, 30, 31, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 68, 69, 71], "pip3": 51, "pipe": [1, 6, 44, 46, 47, 53, 54, 68], "pipelin": [1, 53, 54, 59, 62, 64], "pisc": 47, "pit": 49, "pitaya_smoothi": 60, "pizza": 53, "pke": 53, "pkl": [1, 6, 47, 51, 59, 62], "pl": [38, 54, 58], "pl_df": 54, "place": [4, 5, 6, 19, 49, 51, 53, 56, 59, 62, 68, 69], "placehold": [43, 64], "plai": [47, 53, 60], "plain": [45, 49, 69], "plain_text": 69, "plan": [13, 45, 47, 49, 54, 56], "plant": 48, "plasma": 37, "platform": [38, 44, 45, 47, 49, 51, 56, 58], "play": 49, "playbil": 49, "player": 53, "playlist": 69, "playwright": 49, "pleas": [19, 44, 49, 50, 51, 60], "plenti": 47, "plnk6m_jbrvnopnqnvrwaytz2g4nftngz": 69, "plot": [6, 41, 44, 47, 48, 49, 59, 65], "plot_anomali": 59, "plot_cv": 59, "plot_decision_region": 51, "plot_knee_norm": 59, "plot_random": 59, "plot_similar": 47, "plot_text": 60, "plot_time_seri": 6, "plotli": [49, 60], "plotstyl": 6, "plt": [6, 41, 44, 51, 53, 59, 60], "plu": 56, "pluggabl": 1, "pluggi": [38, 58], "plugin": [38, 58], "plural_noun": 53, "plural_verb": 53, "plus_on": [38, 56, 58, 68], "plus_two": 65, "pm": [15, 36, 50, 59, 60], "png": [53, 60], "po": [38, 53, 58], "poetri": 69, "point": [6, 31, 32, 38, 44, 49, 51, 53, 58, 60, 67, 69], "point1": 44, "point2": 44, "pol": 47, "polar": [47, 51, 52, 53], "polars_df": 54, "polars_df1": 54, "polars_df2": 54, "polars_merg": 54, "polars_tim": 54, "polic": 47, "polit": 50, "polycollect": 59, "polygon": 44, "polynomi": 48, "pomona": 49, "pond": 48, "poodl": 1, "poor": [38, 49, 50, 53, 58, 59], "poorli": [47, 51], "pop": 8, "poppler": 64, "popul": [38, 51, 58, 67], "popular": [23, 47, 49, 53, 54, 60, 64, 65, 70, 72], "popup": 60, "port": [43, 44, 56, 58], "portion": [20, 30], "portrait": 49, "pose": [51, 52, 59, 65], "posit": [5, 15, 20, 23, 34, 36, 37, 43, 45, 48, 50, 51, 53, 59], "posix": 68, "posixpath": [22, 38], "possibl": [6, 8, 31, 45, 49, 50, 57, 59, 64], "possibli": [4, 48], "post": [6, 15, 30, 36, 47, 49, 51, 53, 59], "post1": [51, 56], "post_period": 59, "postcod": 49, "posterior": 59, "postgr": [38, 43, 46, 58], "postgresql": 46, "pot": 49, "potenti": [1, 6, 9, 31, 49, 51, 54, 59, 62, 63, 65, 67], "poverti": 30, "power": [1, 14, 25, 27, 38, 43, 45, 46, 48, 50, 51, 53, 54, 58, 62, 64, 66, 67, 68, 69], "pp": 48, "pp_matrix_from_data": 60, "pprint": [49, 53], "pr": 67, "practic": [11, 38, 50, 53, 58, 65, 69], "pre": [19, 46, 51, 53, 62, 65, 68], "pre_period": 59, "pre_process_doc": 53, "precis": [6, 31, 38, 44, 51, 58, 64, 68, 69], "precomput": 59, "pred": 51, "predefin": [43, 46, 48, 53], "predic": 20, "predict": [1, 6, 37, 38, 43, 47, 49, 50, 53, 58, 60, 62], "predict_boolq": 53, "predict_ent": 53, "predict_fn": 51, "predict_r": 51, "predict_shortq": 53, "predicted_breakpoint": 59, "prediction_funct": 50, "prediction_interv": 59, "prediction_length": 59, "predictioncol": 51, "predictionfunctionmodel": 50, "predictioninterv": 59, "predictions_1": 37, "predictions_2": 37, "predictor": [48, 51], "prefect": [48, 65, 68], "prefer": [12, 22, 34, 49, 56], "prefix": 68, "prefixmarit": 48, "pregeneration_frac": 49, "premium": [13, 47], "premium_plan": 13, "prep": 49, "prepar": [48, 50, 51, 53, 60, 68], "prepend": 68, "preprocess": [43, 46, 51, 59, 60], "preprocess_text": 53, "preprocessor": [47, 51, 53], "presenc": 60, "present": [18, 38, 45, 49, 58, 59, 64, 68], "preserv": [5, 45, 62, 65], "preserveinsertionord": 45, "presid": 53, "presidenti": 53, "press": 49, "pretrain": 59, "pretti": [25, 43], "prettier": 60, "pretty_confusion_matrix": 60, "prev": 57, "prevent": [6, 30, 38, 45, 47, 49, 58], "preview": [49, 65], "previou": [45, 54, 59, 62], "previous": [26, 31, 56], "previous_pl_df": 54, "price": [1, 4, 5, 6, 7, 9, 13, 15, 20, 24, 30, 32, 33, 34, 36, 37, 38, 39, 43, 44, 47, 50, 51, 54, 56, 58, 59, 62, 65], "price1": [38, 58], "price2": [38, 58], "price_differ": 6, "prices_catalog": 59, "primari": [1, 38, 43, 50, 58], "primarili": 49, "primary_kei": 43, "prime": 56, "primer": 49, "primetim": 49, "princip": 51, "principl": 6, "print": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 17, 18, 19, 20, 22, 23, 26, 28, 29, 30, 31, 33, 34, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 69, 71, 72], "print_fn": 68, "print_result": 62, "printabl": 68, "printer": 72, "prior": [45, 56], "pro": [47, 49, 53, 56], "prob": [47, 51, 53, 59], "prob_mistake_per_lett": 47, "probabilitycol": 51, "probabl": [41, 47, 51, 59], "problem": [1, 32, 43, 45, 47, 49, 51, 57, 62, 64], "problemat": [6, 45, 51], "proc": 47, "procedur": 51, "process": [1, 6, 19, 30, 31, 38, 44, 45, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 62, 63, 65, 68, 69], "process_data": [6, 19, 64, 69], "process_data2": 19, "process_dict": 19, "process_dict2": 19, "process_list": 19, "process_list2": 19, "process_log_entri": 20, "process_nois": 59, "process_t": 49, "processed_data": 1, "processed_df": [19, 34, 56], "processed_text": 53, "processing_fn": [38, 58], "processor": [2, 51, 65, 71], "processors_cach": 51, "processtext": 1, "produc": [6, 50, 53, 54, 56, 59, 62], "product": [5, 38, 43, 46, 47, 50, 56, 58, 59, 64], "product_data": 43, "product_id": [43, 59], "products_to_upd": 43, "prof_df": 52, "prof_view": 52, "profil": [1, 38, 44, 47, 49, 52, 58, 65, 66], "profile_pictur": 49, "profit": 59, "program": [1, 6, 10, 47, 49, 51, 53, 57, 65, 69], "programmat": 49, "progress": [60, 69], "progress_appli": 44, "progress_bar": 44, "prohibit": 49, "project": [17, 38, 42, 43, 49, 51, 53, 58, 60, 64, 65, 67, 69, 72], "project_uri": 51, "projectpro": 49, "prolept": 68, "promin": 53, "promis": [49, 51], "promot": [1, 49], "prompt": 44, "prompt_templ": 50, "prompttempl": 50, "prone": [1, 4, 6, 13, 18, 43, 45, 46, 48, 51, 60, 62], "pronunci": 53, "prop": 37, "prop_cycl": 60, "proper": [1, 44, 59, 68], "properli": 59, "properti": [1, 44, 49, 68], "property_typ": 53, "proport": [47, 60], "protect": [47, 49, 56], "proteincont": 49, "proven": 59, "provid": [1, 3, 5, 6, 10, 13, 15, 18, 23, 25, 31, 33, 36, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 71, 72], "proxi": 66, "prr": 47, "pr\u00e4gt": 47, "psb": 47, "psdf": 56, "psf": 49, "psutil": 51, "psychologi": 49, "psychologist": 53, "psycopg2": [43, 46, 58], "pt": [52, 53], "public": [47, 60, 68], "publish": 66, "publish_d": 53, "pud": 53, "pull": [52, 69], "pull_data": 69, "pull_request": 67, "puls": 30, "punch": 49, "punctuat": 53, "punkt": [51, 53], "purchas": [6, 54], "purd": 60, "purpl": 4, "purpos": [5, 26, 45, 53, 59], "push": [30, 52, 54], "put": [6, 63, 69], "puzzl": 66, "pw_constant": 59, "px": 49, "py": [1, 6, 13, 20, 26, 28, 33, 35, 38, 41, 49, 51, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69], "py2": 68, "py3": 68, "py4j": 56, "py_": 24, "pyarrow": [2, 56, 57], "pyarrow_ignore_timezon": 56, "pyarrow_memori": 31, "pycodestyl": 65, "pydant": [43, 50], "pydantic_tim": 23, "pydash": 16, "pydata": 28, "pyenv": [38, 59], "pyfakef": [38, 58], "pyflak": 65, "pyfunc": 51, "pyg": 60, "pygment": 68, "pyheat_exampl": 68, "pyinstrument": 66, "pyinstrument_exampl": 57, "pylabtool": [47, 60], "pypdf": 50, "pypdf2": [48, 64], "pypdfload": 50, "pypi": 66, "pyplot": [6, 41, 44, 51, 53, 59, 60], "pyproject": [65, 66], "pyspark": [44, 45, 51, 59], "pyspark_at_target": 56, "pyspark_group": 56, "pyspark_interv": 56, "pyspark_moving_stat": 56, "pyspark_oldest": 56, "pytest": [56, 65], "pytest_benchmark_exampl": [38, 58], "pytest_cach": [38, 58], "pytest_combin": [38, 58], "pytest_fixtur": [38, 58], "pytest_id": [38, 58], "pytest_mark": [38, 58], "pytest_mark_xfail": [38, 58], "pytest_param": [38, 58], "pytest_parametr": [38, 58], "pytest_repeat_exampl": [38, 58], "pytest_scop": [38, 58], "pytest_skip": [38, 58], "pytest_step": [38, 58], "pytest_sugar_exampl": [38, 58], "pytest_to_fail": [38, 58], "pytest_without_id": [38, 58], "python": [2, 7, 21, 22, 25, 34, 40, 50, 54, 56, 67, 71], "python3": [33, 35, 38, 41, 44, 45, 49, 51, 53, 56, 58, 59, 60, 62, 64, 65, 66, 68], "python_env": 51, "python_funct": 51, "python_list": 1, "python_vers": 51, "pytorch": 52, "pytz": [56, 59], "q": [19, 34, 43, 46, 48, 59, 60], "q1": 19, "q2": 19, "q3": 19, "q4": 19, "q_01": [], "q_05": [], "q_10": [], "q_25": [], "q_75": [], "q_90": [], "q_95": [], "q_99": [], "qa": [50, 64], "qalapeno": 47, "qcut": 19, "qe": 53, "qg": 53, "qq": 56, "quack": [1, 43, 46], "quadraticdiscriminantanalysi": 51, "qualifi": 49, "qualiti": [38, 47, 49, 52, 58], "quantifi": [53, 59, 62], "quantil": [19, 33, 49], "quantiti": [38, 52, 54, 56, 58, 62], "quarter": 59, "quartil": [19, 38, 58], "quartile_bin": 19, "qubit": 47, "queen": [47, 49, 60], "queensland": 59, "queri": [30, 38, 44, 48, 50, 54, 58, 59, 66], "query1": 56, "query2": 56, "query_embed": 53, "query_result": [46, 53], "query_str": 48, "query_text": [50, 53], "query_tool": 50, "question": [25, 38, 47, 49, 50, 58, 59, 64], "qui": 53, "quick": [49, 52, 59, 67], "quickest": 49, "quickli": [13, 30, 44, 49, 51, 53, 54, 60, 68], "quiet": [43, 46, 55, 65], "quikli": 53, "quintile_bin": 19, "quot": [38, 49, 53, 54, 56, 58], "quuci": 53, "r": [1, 15, 22, 36, 43, 47, 51, 53, 54, 62, 64, 69], "r0lgodlhaqabaiaaap": 49, "r2": 60, "r_ui": 51, "race": 49, "racewai": 49, "radian": 69, "radii": 60, "radiu": [6, 13], "rais": [1, 6, 9, 13, 18, 19, 23, 26, 33, 38, 41, 45, 58, 62, 64, 65, 68], "ramin": 49, "ramsrigouthamg": 53, "rand": [30, 54, 60, 62], "randi": 49, "randint": [1, 2, 6, 17, 31, 32, 38, 44, 45, 49, 54, 57, 58], "randn": [59, 60, 66], "random": [1, 2, 6, 17, 30, 31, 32, 38, 44, 45, 47, 48, 51, 54, 57, 58, 59, 60, 62, 66], "random_num": 8, "random_numb": 31, "random_st": [1, 47, 51, 59, 65], "randomcharaug": 53, "randomforestclassifi": 51, "randomli": 53, "randomoversampl": 51, "randomsplitt": 47, "randomus": 49, "rang": [1, 2, 6, 8, 10, 15, 17, 26, 30, 31, 36, 38, 43, 44, 45, 46, 47, 49, 50, 51, 54, 56, 58, 59, 60, 65], "range_of": 47, "rangebackwindowsec": 56, "rangebetween": 56, "rangeindex": [31, 32, 57], "rank": [51, 53], "rapper": 47, "rare": [38, 58], "rarelabelencod": 47, "rate": [38, 51, 58, 59, 60], "rather": [30, 45, 47, 53, 59], "rating_scal": 51, "ratings_data": 51, "ratings_dict": 51, "ratings_matrix": 51, "ratio": [8, 15, 36, 53, 57, 59], "ration": 25, "ravel": 51, "raw": [30, 44, 45, 47, 49, 51, 59, 60, 67], "raw_text": 49, "rawpredict": 51, "rawpredictioncol": 51, "rb": [1, 59, 62], "rbf": [1, 51, 59], "rd": 59, "re": [1, 5, 6, 12, 19, 25, 26, 35, 38, 48, 49, 51, 53, 54, 58, 59, 62, 64, 65, 69], "reach": [38, 58, 69], "read": [1, 5, 6, 11, 20, 22, 38, 41, 43, 45, 46, 47, 49, 50, 53, 54, 56, 57, 58, 59, 62, 64, 65], "read_csv": [1, 6, 30, 32, 43, 44, 45, 47, 52, 53, 54, 59, 60], "read_delta": 54, "read_html": 30, "read_parquet": [30, 43, 45, 46], "read_pdf": 64, "read_pickl": [6, 47], "read_sql": [43, 46], "read_tabl": 60, "read_text": [22, 38, 43, 58], "readabl": [4, 7, 10, 19, 20, 26, 28, 38, 43, 53, 56, 58, 59, 64, 65, 69, 72], "reader": [48, 51], "readi": [49, 53], "reading_tim": 53, "readm": 37, "readthedoc": 60, "real": [25, 38, 43, 50, 53, 58], "real_label": 37, "realis": 49, "realist": 59, "rearrang": 54, "reason": [38, 58], "rebal": 51, "recal": 64, "recent": [1, 4, 5, 6, 9, 13, 20, 24, 33, 41, 53, 62, 65, 68], "recipe_embed": 53, "recipe_scrap": 49, "recipient_email": 69, "recogn": 53, "recommend": [53, 64], "recomput": 13, "reconcil": 59, "reconstruct": 55, "record": [32, 34, 43, 45, 47, 52, 56, 57, 60], "recov": 45, "recoveri": 45, "recreat": [45, 51], "recruit": [47, 53], "rectangl": 60, "rectifi": 50, "recurs": [52, 62], "recursivecharactertextsplitt": 50, "red": [1, 4, 24, 37, 47, 49, 51, 52, 64], "reddit": [49, 54], "redo": 66, "reduc": [1, 5, 13, 31, 32, 38, 49, 54, 56, 57, 58, 60, 69], "reduct": [31, 51, 53], "redund": [1, 6, 19, 51, 54], "refactor": 1, "refer": [30, 53, 64, 72], "refid": 49, "refinedweb": 53, "reflect": [44, 47, 59], "refund": [38, 58], "refus": 53, "regex": [59, 62], "region": [30, 54, 59, 60], "regist": [19, 49, 56, 60, 68], "regparam": 51, "regress": [51, 59], "regression_coverage_scor": 51, "regressor": 51, "regrex": [15, 36], "regular": [38, 47, 49, 51, 56, 58], "rehabilit": 47, "rehears": 49, "reject": [24, 45], "rel": [38, 41, 53, 58, 59], "relat": [49, 53, 54, 56, 69], "related_quest": 49, "relation_nam": 43, "relationship": [39, 48, 49, 56, 60], "relative_to": 22, "releas": [43, 44, 46, 53, 71], "release_d": 23, "relev": [38, 54, 58], "reli": [38, 53, 58], "reliabl": [50, 51], "religion": 47, "remain": [9, 25, 38, 45, 47, 49, 51, 58, 65], "remaind": 12, "remark": 41, "rememb": [6, 25, 47], "remo": 53, "remot": [51, 52, 62, 67], "remote_fil": 62, "remoteauth": 52, "remotedir": 52, "remov": [6, 31, 35, 38, 45, 47, 49, 53, 54, 58, 60, 62, 64, 68], "remove_diacrit": 53, "remove_digit": 53, "remove_punctu": 53, "remove_url": 1, "remove_whitespac": 53, "removeprefix": 68, "removesuffix": 68, "remsen": 47, "renam": [43, 46, 47, 53, 56, 59], "render": [51, 60, 64], "render_notebook": 60, "reorder": [1, 54, 62], "rep": 47, "repartit": 45, "repeat": [1, 5, 6, 13, 19, 24, 51, 53], "repeatedli": [19, 20], "repetit": [4, 5, 38, 48, 53, 58, 69], "replac": [1, 6, 13, 24, 26, 38, 43, 46, 47, 48, 51, 56, 58, 59, 65, 67, 68], "replace_keyword": 53, "replace_with": 47, "repo": [65, 67], "repo_nam": 67, "report": [44, 45, 49, 50, 52, 57, 59, 60, 65], "repositori": [49, 69], "repr": 68, "repres": [11, 18, 25, 28, 45, 48, 51, 53, 56, 68], "represent": [18, 45, 46, 51, 53, 59], "representative_doc": 53, "reproduc": [38, 45, 47, 51, 54, 58, 59, 63], "republ": 47, "reqs1": 66, "reqs2": 66, "request": [38, 49, 51, 55, 66], "requir": [5, 18, 20, 23, 32, 38, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 64, 65, 68, 69], "required_educ": 47, "required_experi": 47, "rerun": [2, 51], "resampl": [51, 56], "rescu": [47, 49], "rescuer": 47, "research": 53, "reserv": 1, "reset_index": [39, 43, 46, 47, 59], "reshap": [47, 51, 62], "resid": [20, 47], "resolut": [45, 68, 69], "resolv": [44, 45, 51], "resourc": [38, 53, 57, 58, 65, 72], "resp": 67, "respect": [47, 48, 59, 69], "respond": 50, "respons": [33, 38, 48, 49, 59, 67], "rest": [6, 20, 30, 31, 49, 65, 67], "restaur": 50, "restrict": [1, 59], "result": [2, 4, 5, 6, 11, 19, 20, 23, 28, 30, 31, 33, 38, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69], "result1": [6, 56], "result2": [6, 56], "result_df": 56, "resum": [53, 64], "resume_download": 64, "retain": [45, 56], "retrain": [53, 69], "retriev": [43, 45, 49, 50, 52, 53, 56, 59], "retrievalqa": 50, "return": [1, 2, 4, 6, 7, 8, 12, 13, 15, 18, 19, 20, 23, 24, 26, 28, 30, 33, 34, 35, 36, 37, 38, 39, 44, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69], "return_scor": 47, "return_tensor": 53, "return_two": 6, "return_valu": [38, 58], "return_x_i": [31, 47, 51, 52, 57], "returntyp": 56, "retweeeet": 53, "retweet": 53, "reus": [5, 6, 13, 38, 56, 58, 64], "reusabl": [1, 5], "rev": [51, 65], "reveal": [51, 59], "revenu": [19, 43, 46, 54, 56], "revenue_level": 19, "revers": [8, 39], "review": [43, 45, 50, 67], "revis": [6, 64, 65], "reviv": 49, "rewrit": [25, 38, 43, 45, 58], "rewrite_time_m": 45, "rfind": 68, "rib": 49, "rice": 49, "rich": 43, "ride": 53, "ridgeclassifi": 51, "ridgeclassifiercv": 51, "ridicul": 47, "right": [19, 25, 39, 49, 59, 62, 64, 67, 68, 73], "right_on": [29, 47], "rindex": 68, "ring": [47, 49], "ringslap": 49, "rins": 49, "risk": [45, 49, 51, 52, 55, 56, 59, 62, 63], "rivalri": 53, "rjust": 68, "rm_file": [38, 58], "rmt_auth": 52, "rmt_dir": 52, "rmtree": 69, "rnn": 59, "ro": 51, "robert": [49, 52], "roberta": 53, "roboflow": 49, "robot_execution_failur": 59, "robust": [38, 50, 53, 56, 58], "roc": 51, "roc_curv": 65, "rock": 53, "rocki": 53, "rodriguez": 53, "role": [6, 38, 58, 60], "roll": 59, "ron": 49, "root": [22, 25, 38, 51, 53, 58, 68], "root_mean_square_err": 68, "rootdir": [38, 58], "rotat": 47, "roughli": [34, 53], "round": [8, 38, 49, 51, 57, 58, 62, 64], "row": [2, 30, 31, 37, 43, 44, 45, 46, 47, 50, 51, 54, 56, 57, 59], "row_group_s": 30, "row_index": 28, "row_num": 56, "row_numb": 56, "rowname_col": 64, "rpartit": 68, "rpt": 59, "rsplit": 68, "rsquo": 47, "rss": 48, "rstrip": 68, "ru": 53, "rue": 49, "ruff": 26, "rule": [49, 51, 65], "run": [2, 6, 8, 24, 30, 44, 45, 46, 49, 50, 51, 53, 54, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 72, 73], "run_id": 51, "run_interact": 64, "run_pend": 69, "run_process": 69, "run_test": [38, 58], "runpi": 57, "runtim": [38, 45, 58, 62, 67], "rust": [38, 45, 54, 58], "rwanda": 47, "s1": 31, "s2": 31, "s2v_reddit_2015_md": 53, "s3": [59, 60, 62], "s3_client": 62, "s3_file": 62, "s_df": 59, "s_email": 69, "s_numpi": 31, "s_pyarrow": 31, "safe": [18, 26, 51], "safe_open": 52, "safer": 45, "safeti": [55, 56, 62, 65], "sagittariu": 47, "saharan": 30, "sai": [47, 54, 62, 69], "said": 59, "salari": [19, 45, 47, 56], "salary_gt_0": 45, "salary_in_thousand": 56, "salary_level": 19, "salary_na": 47, "salary_rang": 47, "sale": [43, 45, 46, 56, 59], "sales_feb": [43, 46], "sales_jan": [43, 46], "salt": 49, "sam": 56, "same": [1, 5, 6, 9, 11, 13, 15, 18, 20, 21, 24, 29, 30, 33, 34, 36, 39, 41, 47, 51, 53, 56, 57, 59, 60, 62, 66, 68, 69], "samefil": 22, "sampl": [1, 6, 28, 38, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 65, 68, 69], "sample_data": 51, "sampledata": 60, "samplelesuccess": [38, 58], "sampler": 49, "san": [38, 47, 56, 58, 60], "sanctuari": 49, "sander": 53, "sankeywidget": 60, "sapporo": 49, "sarah": [50, 56], "sat": [53, 69], "satisfi": [7, 41, 56, 68], "saturatedfatcont": 49, "saturdai": [15, 36, 49], "sauc": [49, 53], "savannah": 47, "save": [1, 31, 38, 43, 45, 46, 47, 48, 49, 50, 51, 54, 58, 60, 62, 63, 64, 66, 67, 69], "save_figur": 51, "save_fil": 52, "save_path": 54, "save_result": [38, 58], "savefig": 60, "savepath": 66, "saw": [38, 58, 62], "say_hello": 6, "sc": [44, 45, 56], "scalabl": [26, 59], "scale": [48, 56, 60], "scale_color": 60, "scaled_featur": 60, "scaler": [47, 51], "scam": 49, "scan": 56, "scan_csv": 54, "scan_result": 50, "scan_time_m": 45, "scatter": [51, 60], "scatterplot": [53, 60], "scenario": [13, 38, 51, 56, 58, 59], "scene": 56, "schema": [38, 43, 44, 45, 46, 51, 54, 56, 58], "schemaerror": [38, 58], "schemarerror": [38, 58], "scheme": [48, 66], "school": [25, 47, 49], "scie": 53, "scienc": [22, 44, 47, 48, 49, 51, 53, 59, 60, 61, 67, 72], "scientif": [40, 60], "scientist": [1, 43, 44, 46, 49, 51, 53, 56, 59, 67, 69, 70], "scikit": [60, 68], "scipi": [51, 57], "scontent": 49, "scoop": 60, "scope": [38, 58], "score": [5, 38, 43, 47, 51, 53, 58, 60], "scorer": 53, "scott": 49, "scrape_m": 49, "scrape_repo": 66, "scrape_us": 66, "scratch": 51, "screen": [53, 69], "screenshot": 49, "script": [46, 63, 65, 66, 69], "sdk": [49, 62], "seaborn": [30, 44, 47, 53, 66], "seal": 52, "seamless": [44, 59], "seamlessli": [38, 43, 47, 51, 54, 58, 59], "search": [15, 36, 45, 48, 50, 59, 63, 65], "search_term": 53, "search_top": 53, "season": [6, 24, 49, 53, 59, 60], "season_length": 59, "seasonal_data": 6, "sec": [25, 48, 59, 68], "second": [4, 5, 23, 24, 26, 28, 38, 41, 43, 46, 47, 49, 53, 54, 56, 58, 59, 60, 62, 68], "second_sum": 44, "secondari": 49, "secret": [55, 67], "section": [2, 6, 10, 13, 17, 19, 20, 21, 30, 34, 39, 44, 47, 49, 52, 53, 55, 57, 59, 60, 62, 63, 65, 67, 69, 71, 72], "secur": [47, 51, 52, 53, 56, 58, 62], "see": [2, 4, 6, 15, 25, 28, 30, 36, 38, 45, 47, 49, 51, 53, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69], "seed": [2, 6, 8, 17, 31, 45, 47, 53, 54, 59, 60], "seed_topic_list": 53, "seem": 51, "seen": [49, 64], "segment": [43, 45, 46, 53, 56], "segment_custom": 56, "select": [12, 28, 30, 38, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 58, 59, 60, 62, 65], "select_dtyp": 54, "select_target": 43, "selector": [37, 49, 69], "self": [1, 18, 23, 26, 33, 38, 48, 51, 56, 58, 59, 62, 65, 68], "self_inst": 65, "sell": [49, 59], "semant": [48, 50], "send": [47, 51], "send_kei": 69, "sender_email": 69, "senior": [47, 56], "sens": 53, "sense2vec": 53, "sensit": 47, "sent": [15, 36, 53], "sentenc": [15, 36, 38, 49, 53, 58], "sentence_transform": 53, "sentencepiec": 53, "sentencetransform": 53, "sentiment": [38, 43, 50, 51, 53, 58], "sentiment_analyz": 51, "sentimentanalyz": 51, "sentimetn": [38, 58], "seoul": 49, "sep": [39, 68], "sep_mark": 64, "sepal": 31, "separ": [1, 6, 9, 12, 18, 28, 34, 38, 43, 45, 46, 52, 53, 56, 58, 60, 62, 63, 66, 68], "seper": 63, "septemb": 44, "sequenc": [6, 10, 20, 38, 58, 69], "sequenti": 54, "serd": 55, "seri": [1, 3, 6, 31, 38, 49, 54, 58, 66], "serial": [1, 38, 43, 58, 59, 62], "serialization_format": 51, "series_ddf": 51, "series_with_pric": 59, "seriou": [47, 62], "serv": [1, 44, 49], "server": [43, 46, 51, 52, 58, 66], "servic": [44, 47, 48, 56, 62, 65], "session": [43, 73], "sessionfinish": [38, 58], "set": [1, 5, 13, 19, 20, 21, 26, 28, 32, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 56, 59, 60, 63, 65, 66, 68, 69], "set_font": 48, "set_index": [32, 59], "set_label": 60, "set_openai_kei": 51, "set_openai_org": 51, "set_opt": [49, 60], "set_output": 47, "set_size_inch": 59, "set_table_styl": 37, "set_them": 60, "set_time_rang": 49, "set_titl": [47, 51], "set_verbosity_error": 53, "set_xlim": 60, "set_xtick": 60, "set_xticklabel": [47, 60], "set_ylim": 60, "set_ytick": 60, "set_yticklabel": 60, "seth": 49, "setloglevel": [44, 45, 56], "settingwithcopyerror": 28, "settingwithcopywarn": 28, "setup": [43, 46, 51, 64, 65, 66, 68, 69], "setuptool": 51, "sever": [2, 6, 13, 24, 38, 51, 58, 59, 62, 64], "seward": [47, 60], "sex": [47, 60], "sf": 59, "sgd": 60, "sgdclassifi": 51, "sh": 53, "sha1": 49, "sha256": 49, "shade": 59, "shallow": 6, "shape": [1, 8, 30, 38, 41, 44, 51, 52, 54, 58, 59, 60], "shape_match": 52, "share": [1, 18, 26, 49, 50, 51, 66, 67], "sharei": 51, "sharp": 59, "she": [49, 53, 72], "sheet": [37, 52], "shell": 69, "shipping_fe": 6, "shirt": [49, 62], "shit": 47, "shoe": [38, 58], "shoelac": 44, "shop": [38, 58], "short": [6, 47, 49, 50, 57, 59, 60, 62, 69], "shorten": [6, 33], "shorter": [9, 33], "shot": 59, "should": [1, 23, 38, 43, 51, 53, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69], "shouldn": 26, "show": [1, 2, 6, 12, 13, 17, 19, 20, 21, 23, 30, 32, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 56, 57, 59, 60, 63, 64, 65, 66, 67, 68, 69, 71], "show_figur": 51, "show_heatmap": 68, "show_html": 52, "show_info": 1, "show_tre": 60, "showa": 59, "showcas": 56, "shown": [15, 36, 38, 41, 54, 58], "shrinkag": 51, "shutil": 69, "shuttl": 53, "si": 69, "si1": 47, "si2": 47, "sicher": 47, "sick": 60, "side": [47, 49, 56, 59, 60, 68], "side_effect": 38, "sierra": 47, "sigma": 59, "sign": [47, 60, 69, 72], "signal": [38, 58, 69], "signatur": [51, 55, 68], "signific": [1, 30, 31, 38, 47, 51, 53, 58, 59], "significant_digit": [38, 58], "significantli": [48, 54, 56, 59, 60], "silenc": 65, "silli": 47, "sim_randomwalk": 59, "similar": [1, 19, 29, 50, 51, 53, 54, 59, 65, 68], "similarityencod": 47, "similaryencod": 47, "simmer": 49, "simpl": [1, 6, 18, 23, 32, 43, 47, 49, 50, 51, 53, 56, 59, 60, 62, 64], "simplefilt": [47, 53, 56, 60], "simplefunctionregistri": 56, "simpleimput": [47, 51], "simplepickleio": 51, "simpler": [5, 21, 22, 23, 43, 46, 49, 51, 56, 68], "simpli": [1, 18, 25, 28, 32, 38, 41, 45, 47, 49, 54, 57, 58, 60, 67, 68, 73], "simplic": [45, 53], "simplifi": [6, 48, 49, 52, 53, 60, 69], "simplist": 51, "simul": [6, 45, 58, 59], "simultan": [11, 56], "sin": [6, 8, 25, 60, 64], "sinc": [4, 5, 6, 26, 32, 33, 34, 38, 43, 45, 46, 49, 51, 53, 58, 59, 60, 64, 65, 66], "singl": [4, 14, 19, 28, 43, 45, 46, 47, 48, 49, 51, 53, 54, 59, 62, 64, 68, 69], "single_fil": 64, "singular_noun": 53, "sink": 24, "sir": 49, "site": [33, 35, 41, 44, 45, 49, 51, 53, 56, 59, 60, 62, 64, 65, 66, 68], "situat": [4, 5], "sitzprob": 49, "six": [47, 56, 68], "sixti": 53, "size": [2, 31, 33, 38, 44, 45, 47, 48, 49, 51, 53, 54, 56, 58, 59, 60, 64, 72], "size_byt": 45, "sk": 50, "sk_model": 51, "skill": 50, "skill_db": 53, "skill_extractor": 53, "skill_extractor_class": 53, "skill_id": 53, "skillet": 49, "skillextractor": 53, "skip": [20, 41, 62, 69], "skip_first_two": 62, "sklearn": [1, 31, 47, 49, 52, 53, 57, 60, 65, 68, 71], "sklearn_pyfunc": 51, "sklearn_vers": 51, "sklearnmodel": 51, "sklego": 68, "skllm": 51, "skllmconfig": 51, "skrub": 47, "skub": 47, "slack": 69, "slahzi": 53, "slant": 64, "slate": [6, 49], "sleep": [38, 44, 53, 58, 62, 68, 69], "slice": [20, 28, 49], "slide": 60, "slide1": 60, "slide2": 60, "slightli": 6, "slow": [17, 38, 54, 58, 60], "slower": 31, "slowest": [38, 58], "slyboot": 53, "sma": 59, "sma1": 59, "sma2": 59, "smacross": 59, "small": [5, 17, 35, 38, 39, 45, 48, 49, 54, 58, 59, 65], "small_cnn": 53, "small_font_threshold": 48, "smaller": [6, 30, 31, 34, 38, 41, 58], "smallest": [31, 41, 57], "smart": 47, "smile": 47, "smith": [45, 53, 56], "smoke": 47, "smooth": 60, "smooth_data": 59, "smooth_fract": 59, "smoother": 59, "smoothi": 1, "sn": [47, 53, 60], "snappi": [43, 46], "snapshot": [53, 59], "snippet": [48, 49, 67, 69, 72], "snippet_data": 49, "snippet_str": 49, "snippet_str_bodi": 49, "snippet_typ": 49, "snoop": 64, "snorkel_exampl": 47, "snowflak": 52, "so": [1, 6, 18, 20, 26, 41, 45, 47, 49, 51, 53, 60, 62, 64, 66, 67, 69], "social": 47, "socialtoken": 53, "sodiumcont": 49, "soft": [51, 53], "soften": 49, "softwar": [47, 51], "soi": 49, "solar": 60, "sold": 60, "sole": 53, "solid": 53, "solut": [47, 49, 50, 51, 56, 59, 65], "solv": [31, 43, 45, 54, 57, 62, 64, 65, 66], "solver": 66, "some": [0, 1, 2, 6, 9, 13, 17, 19, 20, 21, 24, 25, 26, 27, 28, 30, 31, 34, 38, 39, 40, 42, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72], "someth": [38, 53, 58, 68, 69], "sometim": [12, 18, 24, 28, 30, 37, 38, 41, 47, 58, 59, 60, 65, 66, 67, 68, 69], "somewhat": 47, "song": 23, "song1": 23, "sorri": 50, "sort": [8, 20, 31, 41, 56], "sort_valu": [31, 35, 43, 46, 47, 56, 64], "sortino": 59, "sour": [4, 26], "sourc": [23, 26, 27, 45, 53, 59, 60, 62, 64, 65, 66, 67, 68, 69, 72, 73], "source_not": 64, "source_url": 51, "south": [30, 47, 49, 54, 59, 60], "soybean": 60, "space": [1, 15, 36, 43, 47, 48, 53, 68], "spaci": [53, 66], "spam": 49, "span": 44, "spanish": [17, 47], "spare": 53, "spark": [45, 51, 52, 54], "spark_2": 45, "spark_catalog": 45, "spark_data": 56, "spark_df": 59, "spark_local_ip": 44, "sparkexecutionengin": 44, "sparkr": [44, 45, 56], "sparksess": [45, 51, 56, 59], "sparkstringutil": 45, "sparkui": [44, 56], "sparse_output": 47, "spatial": 44, "speak": [47, 49], "spec": [51, 59, 66], "speci": [1, 44, 47, 60], "special": [1, 44, 47, 49, 51, 52, 57], "specialist": 47, "specif": [6, 8, 23, 34, 43, 45, 46, 47, 48, 49, 50, 51, 53, 56, 59, 60, 62, 63, 64, 66], "specifi": [2, 5, 6, 15, 18, 24, 36, 37, 38, 39, 41, 45, 46, 47, 48, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71], "speed": [6, 8, 30, 31, 43, 46, 53, 62], "speed_kmh": 62, "spell": 53, "spell_correct_elong": 53, "spellingaug": 53, "spend": [47, 51, 53, 59, 63], "spent": 57, "spici": 49, "splat": 11, "split": [6, 39, 48, 51, 53, 59, 60, 68], "split_data": 65, "splitaug": 53, "splitconfig": 65, "splitlin": 68, "sport": [53, 59], "spot": 51, "spread": 72, "springfield": 18, "sprinkl": 49, "spy": 59, "sq": [47, 60], "sql": [51, 53, 59], "sql_metadata": 43, "sql_metdata": 43, "sqlalchemi": [43, 46], "sqlfluff_exampl": 43, "sqlite": [46, 50, 64], "sqlite3": [43, 46, 50], "sqn": 59, "sqrt": [25, 44, 50, 64, 69], "squad": 64, "squar": [25, 47, 48, 56, 60], "square_numbers_udf": 56, "square_root": 69, "squared_list": 8, "squared_np": 8, "squarenumb": 56, "src": 64, "sriracha": 49, "sroccoli": 47, "ss": [43, 68], "ssh": 52, "st": [18, 59], "st06": 43, "stabl": [28, 60], "stack": [51, 60, 65], "stacked_df": 39, "stackoverflow": 49, "stacktrac": 68, "stad": 60, "stage": [44, 56, 67], "stai": [6, 8], "stakehold": 53, "stand": [28, 71], "standard": [1, 8, 19, 38, 44, 51, 58, 59, 62, 65, 66, 68], "standardize_data": 1, "standardizedatastrategi": 1, "standardscal": [47, 51, 60], "star": [49, 69], "star_button": 69, "star_script": 69, "stargazers_count": 67, "start": [5, 6, 7, 9, 15, 25, 31, 32, 34, 36, 38, 41, 45, 47, 48, 49, 51, 52, 53, 56, 57, 58, 59, 60, 64, 66, 68], "start_chrom": 69, "start_dat": [30, 38, 43, 45], "start_run": 51, "start_t": 56, "start_tim": [54, 62], "startswith": [24, 68], "stat": 59, "statannot": 60, "state": [1, 38, 45, 48, 49, 51, 53, 58, 59, 60, 67, 68, 69], "statecitypricestrstri64": [38, 58], "statement": [1, 4, 5, 7, 19, 28, 33, 41, 45, 53, 56, 65, 68, 69], "static": [26, 60], "static_0": 59, "static_1": 59, "static_featur": 59, "staticmethod": 1, "station": 53, "statist": [33, 38, 39, 45, 48, 51, 52, 56, 58, 59, 66, 68], "statisticsinput": 65, "statisticsoutput": 65, "statu": [1, 38, 45, 47, 58], "statuscod": 1, "std": [1, 6, 8, 30, 43, 45, 46, 51, 54, 59], "std_dev": 8, "stddev": [38, 58], "stdout": 68, "step": [1, 32, 47, 51, 53, 54, 56, 59, 60, 62, 64, 65, 67, 68, 69], "stephen": 49, "steps_data": [38, 58], "stepwis": 59, "stewart": 49, "stick": 65, "still": [31, 38, 45, 51, 58, 65, 69], "stir": 49, "stock": [6, 43, 49], "stock_pric": 6, "stop": [15, 36, 41, 49, 53, 57, 60], "stop_word": 60, "stopword": 53, "storag": [2, 51, 52, 54, 55], "store": [1, 2, 9, 10, 18, 24, 31, 39, 43, 45, 48, 49, 50, 51, 59, 60, 62], "store1": 29, "store2": 29, "store_id": 59, "stori": 49, "stp": 49, "str": [1, 2, 6, 7, 13, 15, 18, 20, 23, 26, 28, 36, 37, 38, 39, 43, 47, 48, 49, 50, 54, 55, 58, 59, 60, 64, 65, 68], "str__": 1, "straight": 47, "straightforward": 52, "strasbourg": 49, "strategi": [1, 19, 38, 47, 51, 58], "stratifiedkfold": 65, "strawberri": 60, "stream": 69, "streamlin": [47, 48], "streamlit": 53, "streamlit_app": 53, "street": [18, 49], "strength": 60, "stress": 49, "strftime": [38, 43, 60, 68], "strict": 68, "strictli": [47, 59], "string": [20, 23, 26, 32, 38, 39, 45, 47, 49, 56, 57, 58, 63, 64, 65, 68], "string_with_d": 59, "stringio": 52, "stringtyp": 56, "strip": [49, 53, 68], "strip_interact": 64, "strong": [53, 59], "strongli": [60, 67], "strptime": [3, 59, 68], "structfield": 56, "structtyp": 56, "structur": [1, 10, 22, 23, 44, 46, 49, 51, 53, 59, 64, 66, 69], "struggl": [52, 57], "stub": 69, "student_df": [38, 58], "student_schema": [38, 58], "studi": 49, "stuff": [24, 47], "style": [6, 48, 53, 56, 59, 65, 68], "sub": [1, 25, 30, 53, 60, 64, 66, 68], "subclass": [1, 26, 62], "subject": [51, 53], "submit": [45, 68, 73], "subpar": [38, 58], "subplot": [51, 59, 60], "subscript": 13, "subscriptionplan": 13, "subsequ": [6, 43, 46, 59], "subset": [11, 30, 39, 45, 47, 53, 54, 59, 60], "subset_i": 6, "subset_x": 6, "substant": 59, "substitut": [43, 53, 56, 64], "substr": [49, 50, 62, 68], "subtitl": 64, "subtl": 62, "subtract": [3, 59], "succe": 38, "success": [6, 38, 51, 58, 69], "successfulli": [45, 50, 66, 68], "suck": 53, "suddenli": 66, "suffici": 59, "suffix": [52, 68], "suffixgener": 48, "sugar": [49, 53], "sugarcont": 49, "suggest": [51, 60], "suitabl": [5, 31, 53, 68], "sum": [1, 3, 5, 6, 7, 24, 28, 32, 38, 39, 43, 44, 46, 53, 54, 56, 58, 59, 64, 65], "sum_": 6, "sum_all_column": 6, "sum_num": 6, "sum_test": [38, 58], "summar": 39, "summari": [38, 52, 53, 58, 59, 67], "summarytyp": [], "summer": 47, "sunda": 53, "sundai": [15, 36, 38, 58, 59, 68], "sunspot": 59, "super": [1, 67], "super_tre": 60, "superior": [31, 51], "supervis": [49, 51], "supervisor": 47, "suppli": 64, "support": [38, 43, 48, 49, 50, 51, 53, 58, 59, 62, 64, 67, 68, 69], "suppos": [1, 45], "suppress": 53, "suppress_warn": 59, "sure": [26, 38, 51, 53, 58], "surg": 45, "surnam": 48, "surpass": 53, "surprisingli": 53, "surround": 64, "susan": 49, "susanli2016": 60, "suscept": 45, "sushi": 53, "sv": [38, 52, 58], "svc": [1, 51], "svc__c": 51, "svc__gamma": 51, "svd": 51, "svm": [1, 51, 65], "swap": [1, 15, 36, 62], "swapcas": 68, "sweet": [1, 4, 24, 38, 51, 58, 62], "sweeten": 53, "sweetness_percentag": 50, "swifter_appli": 57, "swifter_tim": 57, "swim": 60, "switch": [4, 52, 60, 68], "sy": [8, 38, 58, 68], "symbol": [5, 56, 64, 66], "symmetr": 39, "synchron": 67, "synonym": 53, "synonymaug": 53, "syntax": [1, 13, 18, 21, 44, 46, 55, 56, 60, 62, 64, 67, 68], "synthes": 47, "synthesi": 50, "syr": 50, "system": [38, 43, 45, 46, 49, 50, 53, 54, 58, 60, 62], "s\u00e8ntenc\u00e9": 53, "t": [1, 4, 11, 18, 19, 20, 23, 24, 25, 26, 28, 32, 38, 43, 44, 47, 48, 49, 50, 51, 53, 56, 58, 59, 60, 62, 64, 66, 68, 69], "t31": 49, "t39": 49, "t5": 59, "t_x": 59, "t_y": 59, "t_z": 59, "tab": [60, 68], "tab10": [59, 60], "tab20": 60, "tab20r": 60, "tab_head": 64, "tab_source_not": 64, "tab_stubhead": 64, "tabl": [4, 37, 38, 43, 44, 46, 50, 58, 68], "table_nam": 43, "table_path": 45, "tablefmt": 37, "tablelist": 64, "tablespoon": 49, "tablet": [43, 46], "tabsiz": 68, "tabul": 37, "tabular": [37, 48, 51, 54, 57, 59], "tabularpredictor": 51, "tag": [59, 71], "tail": [47, 54, 59, 62], "tailor": 53, "take": [2, 3, 5, 17, 20, 25, 31, 38, 49, 50, 53, 54, 56, 57, 58, 59, 60, 62, 68, 69], "taken": [51, 59, 60], "talk": 49, "tamari": 49, "tampa": [38, 58], "tamper": 55, "tan": 25, "tangl": 66, "tanzania": 47, "tar": [53, 68], "target": [31, 43, 45, 47, 49, 51, 59, 60, 69], "target_col": 59, "target_nam": 60, "target_tim": 56, "target_transform": [51, 59], "task": [38, 43, 45, 46, 47, 49, 50, 51, 53, 56, 58, 59, 60, 64, 68, 69], "task1": 68, "task2": 68, "tast": [4, 24, 26, 49], "tauru": 47, "taxi": [47, 60], "td": 60, "te": 47, "tea": [1, 50], "teach": 53, "teacher": 49, "team": [47, 49, 51, 53, 56, 69], "teardown": [38, 58], "teaspoon": 49, "tech": 47, "technic": 60, "techniqu": [10, 51, 53, 59], "technologi": [47, 48, 53], "tediou": [4, 43, 53, 59, 68, 69], "telecommut": 47, "tell": [31, 51, 60, 65], "temp": [56, 62], "temperatur": [50, 51, 60, 62], "templat": [50, 53], "tempo_at_target": 56, "tempo_group": 56, "tempo_interv": 56, "tempo_moving_stat": 56, "tempo_oldest": 56, "tempor": 47, "temps_f": 62, "ten": [8, 18, 23, 64], "tender": 49, "tensor": [51, 59], "term": [25, 48, 51, 53, 59, 64], "termcolor": 64, "termin": [38, 51, 53, 57, 58, 63, 64, 65, 66, 69, 71], "ternari": 49, "terrac": 47, "terribl": 48, "test": [6, 23, 45, 47, 50, 51, 52, 59, 60, 65, 68], "test_add_two": [38, 58], "test_approx": [38, 58], "test_bark": [38, 58], "test_benchmark_exampl": [38, 58], "test_calc_suit": [38, 58], "test_calculate_average_empty_list": [38, 58], "test_calculate_average_two_num": [38, 58], "test_calculation_with_approx": [38, 58], "test_calculation_without_approx": [38, 58], "test_cas": [38, 51, 58], "test_cget_mean": [38, 58], "test_chatbot": [38, 58], "test_concat": [38, 58], "test_contain_word_1": [38, 58], "test_contain_word_2": [38, 58], "test_contain_word_different_cas": [38, 58], "test_contain_word_exact": [38, 58], "test_d": [38, 58], "test_data": [47, 51, 56, 59], "test_database_interact": [38, 58], "test_df": 49, "test_divide_by_0": [38, 58], "test_divis": [38, 58], "test_extract_senti": [38, 58], "test_fetch_user_from_db": 58, "test_fetch_user_from_db_with_mock": 58, "test_fixtur": [38, 58], "test_floats_are_commut": [38, 58], "test_freezegun": [38, 58], "test_func_complex": 62, "test_func_simpl": 62, "test_function_1": [38, 58], "test_function_2": [38, 58], "test_gen": 59, "test_generate_numb": [38, 58], "test_get_data_fail": 38, "test_get_data_for_last_week": 38, "test_get_data_succe": 38, "test_get_day_of_week": [38, 58], "test_get_dog": [38, 58], "test_get_mean": [38, 58], "test_hypothesi": [38, 58], "test_ind": 60, "test_index": 47, "test_is_float": [38, 58], "test_list_of_float": [38, 58], "test_log": [38, 58], "test_long_running_funct": [38, 58], "test_main": 38, "test_modulu": [38, 58], "test_parametr": [38, 58], "test_pd": 59, "test_pick": [38, 58], "test_plus_on": [38, 58], "test_postgr": [38, 58], "test_processing_fn": [38, 58], "test_query_result": [38, 58], "test_query_return_correct_number_of_row": 56, "test_refurb": 65, "test_repeat_exampl": [38, 58], "test_rm_fil": [38, 58], "test_save_result": [38, 58], "test_siz": [47, 51, 65], "test_step": [38, 58], "test_tabl": [38, 58], "test_text_contain_word": [38, 58], "test_tmp_path": [38, 58], "test_unix_f": [38, 58], "test_walk": [38, 58], "test_with_forecast": 59, "test_with_unittest_mock": [38, 58], "testabl": 51, "testasia": 49, "testcas": [38, 58], "testdb": 58, "testdog": [38, 58], "testfind": [38, 58], "testmod": [38, 58], "testset": 51, "testus": 58, "text": [1, 6, 7, 15, 20, 22, 36, 38, 43, 49, 50, 58, 62, 68, 69], "text1": [15, 36], "text2": [15, 36], "text_bodi": 48, "text_column": 1, "text_contain_word": [38, 58], "text_gener": 50, "text_processor": 53, "text_splitt": 50, "textblob": [28, 38, 51, 58], "textpreprocessor": 53, "textual": [48, 53], "textur": 50, "textwrap": 57, "tf": 53, "tfidf": 53, "th": [38, 53, 58, 59], "thai": 49, "than": [2, 8, 9, 17, 23, 30, 31, 33, 34, 38, 41, 43, 45, 46, 51, 53, 54, 56, 57, 58, 59, 60, 65, 68, 69, 72], "thank": [1, 49], "thankless": 43, "thanksgiv": 59, "theatermania": 49, "theatr": [47, 60], "thedachshundown": 49, "thei": [1, 2, 4, 5, 6, 10, 28, 33, 38, 47, 48, 49, 50, 51, 53, 56, 58, 59, 60, 62, 63, 64, 72], "them": [6, 12, 15, 26, 28, 31, 36, 38, 43, 46, 47, 51, 53, 56, 58, 59, 60, 62, 63, 65, 66, 67, 72], "theme": 48, "therebi": 52, "therefor": [38, 47, 58], "thi": [0, 1, 2, 4, 5, 6, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "thick": 49, "thin": [47, 49, 58], "thing": [6, 13, 21, 25, 38, 47, 49, 53, 58, 62, 66], "thinh": 39, "think": 47, "thinli": 49, "third": [38, 54, 58], "thirti": 49, "those": [6, 41, 49, 50, 53, 59, 68, 69], "though": [6, 31, 43, 46, 51, 56], "thought": [6, 38, 58], "thousand": [12, 15, 36, 47, 53], "thread": [53, 54], "three": [14, 15, 36, 38, 49, 53, 56, 58, 59, 60, 64, 68], "threshold": [33, 47, 48, 51], "through": [1, 38, 43, 50, 53, 56, 58, 59, 60, 62, 65, 68, 69], "throughout": [10, 19], "throw": [18, 28, 49], "thrown": [38, 58], "thu": [6, 12, 25, 30, 45, 51, 56, 66], "thumb": 49, "thumbnail": 49, "thumbnail_url": 69, "tiburon": 47, "ticket": 62, "tiger": 1, "tightli": 64, "tiiuae": 53, "tiktoken": 50, "time": [1, 3, 5, 6, 8, 13, 17, 20, 23, 30, 31, 43, 44, 45, 46, 50, 53, 54, 60, 62, 63, 64, 65, 66, 67], "time1": 2, "time2": 2, "time_": 51, "time_col": 59, "time_column": 59, "time_func": 5, "time_func_complex": 62, "time_func_simpl": 62, "time_func_with_wrap": 5, "time_heapq": 8, "time_of_dai": 69, "time_of_week": 69, "time_period": 32, "time_sort": 8, "timedelta": [6, 38, 56, 58, 59, 68], "timegpt_fcst_df": 59, "timeit": [2, 6, 8, 17, 23, 30, 43, 45, 46, 54, 57], "timer": [38, 58], "timeseri": 59, "timeseriesanalysiswithpython": 59, "timeseriessplit": 65, "timestamp": [56, 60, 68], "timestep": 59, "timetupl": 68, "timetz": 68, "timezon": [49, 59, 68], "timothycroslei": 65, "tip": [30, 47, 60, 72], "titl": [6, 18, 23, 37, 47, 48, 49, 51, 53, 59, 60, 64, 68, 69], "titlecas": 68, "tjp": 53, "tm": 48, "tmp": [1, 20, 33, 45, 54, 68], "to_csv": [2, 30, 32, 43, 46, 60, 64], "to_datetim": [30, 32, 47, 49, 59], "to_df": [43, 46], "to_dict": [60, 62], "to_do_tonight": 8, "to_excel": [37, 64], "to_html": [50, 64], "to_json": [55, 64], "to_latex": 37, "to_list": 53, "to_ltx": 41, "to_markdown": 64, "to_panda": [43, 45, 46, 52], "to_parquet": [2, 30, 45, 46], "to_pickl": 1, "to_pyarrow_dataset": [43, 46], "to_sql": [43, 46], "to_sqlit": 64, "to_timestamp": 56, "to_timezon": 59, "to_uppercas": 54, "to_yaml": 55, "todai": [9, 15, 23, 28, 36, 38, 50, 51, 53, 58, 60, 68], "todf": 45, "todo": [38, 58, 65], "togeth": [38, 49, 50, 54, 58, 60, 62], "togo": 47, "token": [53, 55, 59, 67], "token_pattern": 53, "tokyo": [43, 46, 49, 59], "tokyo_night": 60, "tokyo_tim": 59, "tokyo_tz": 59, "tol": [47, 51], "toler": [38, 51, 58], "toll": [47, 60], "tom": [53, 56], "tomato": 17, "toml": [65, 66], "tong": 53, "toni": 49, "too": [6, 38, 45, 47, 51, 53, 58, 65], "tool": [14, 15, 27, 36, 43, 47, 48, 49, 50, 51, 54, 55, 60, 62, 65, 67, 69, 70, 71], "tooltip": 60, "toordin": 68, "top": [18, 19, 45, 49, 50, 51, 53, 56, 59, 60, 64, 69, 73], "top_filter_quantil": 49, "top_github_scrap": 66, "top_imag": 53, "top_indic": 53, "top_k": 53, "top_n_top": 53, "topic": 50, "topic_model": 53, "topic_num": 53, "topic_scor": 53, "topic_word": 53, "topics_": 53, "toprul": 37, "torch": [52, 53, 59], "torch_dtyp": 59, "total": [1, 8, 15, 31, 32, 36, 38, 43, 47, 56, 57, 58, 59, 60], "total_pric": 24, "total_purchas": 56, "total_revenu": 56, "total_sal": [43, 46], "total_tim": 49, "total_weight": 1, "totalconsideredfil": 45, "totalfil": 45, "totalfilesskip": 45, "totals": 45, "tote": 49, "touch": [22, 38, 58], "tough": 49, "tourism": 59, "toward": [53, 72], "tpp": 53, "tqdm": [59, 60, 68], "tqdmexperimentalwarn": 59, "tqdmwarn": 60, "tr": 47, "trace": 68, "traceback": [1, 4, 5, 6, 9, 20, 24, 33, 41, 62, 65], "track": [2, 5, 38, 45, 49, 51, 52, 53, 58, 62, 69], "trackback_test": 13, "trade": 6, "tradit": [4, 6, 13, 38, 43, 45, 46, 50, 51, 53, 56, 58, 59, 60, 69], "tradition": [43, 45, 46], "traffic": 47, "trail": 68, "train": [43, 49, 51, 52, 53, 60, 69], "train_d": [38, 58], "train_data": [47, 51], "train_df": [47, 49], "train_fake_job": 47, "train_index": 47, "train_model": 69, "train_pd": 59, "train_siz": 59, "train_test_split": [47, 51, 52, 59, 65], "train_your_nicest_model": 69, "trainer_kwarg": 59, "training_data": 59, "tran": [53, 72], "transact": [45, 49, 54], "transaction_d": 56, "transfatcont": 49, "transfer": [44, 52, 59], "transfer_to": 52, "transform": [10, 43, 44, 48, 50, 51, 53, 59, 60, 64, 68], "transit": [59, 60], "translat": [43, 53, 68], "translation_t": 47, "transluc": 49, "transmiss": 55, "transpar": [6, 51, 62, 64], "transpil": 43, "travel": [45, 47, 54], "travers": 62, "treasur": 47, "treat": [46, 51], "tree": [22, 51, 65], "treeaggreg": 51, "trend": 59, "trend1": 6, "trendforecast": 59, "trendreq": 49, "tri": [25, 30, 53], "trial": 53, "triangleq": 64, "trick": [3, 25, 67], "tricki": 52, "trigger": 6, "trigsimp": 25, "trim": [33, 56], "trip": [59, 60], "tropic": 1, "tropical_fruit": 14, "true": [1, 5, 6, 8, 12, 13, 14, 17, 20, 22, 30, 31, 33, 34, 35, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 68, 69], "true_breakpoint": 59, "trump": 53, "truncat": [45, 53, 56], "trust": [47, 51, 60], "truth": 41, "try": [2, 8, 23, 25, 28, 38, 39, 41, 44, 45, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 64, 65, 66, 68, 69], "ts_col": 56, "tscv": 47, "tsdf": 56, "tseri": 32, "tub": 49, "tune": [51, 59, 60], "tupl": [4, 6, 17, 20, 33, 51, 56, 62, 65, 68], "turbinado": 49, "turbo": [50, 51], "turn": [1, 4, 24, 28, 30, 37, 49, 53, 69], "turtl": [47, 60], "tuscan": 49, "tutori": [64, 68], "tv": [47, 49], "tweet": 49, "twenti": [49, 53], "twice": [4, 6, 13, 41], "twitter": [49, 53, 55], "two": [1, 5, 6, 8, 13, 14, 15, 17, 19, 20, 32, 34, 36, 37, 39, 44, 45, 47, 52, 53, 54, 56, 59, 60, 69], "txt": [22, 38, 51, 58, 60, 62, 63, 65], "txtmarker": 64, "type": [4, 18, 23, 25, 33, 38, 39, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68], "type_": [1, 51], "type_error": 65, "type_example_right": 26, "type_example_wrong": 26, "typecheck": 26, "typeerror": [1, 4, 5, 6, 20, 23, 50, 64, 65], "typeguard": [38, 58], "typehint": 65, "typer": 66, "typer_exampl": 64, "typevar_exampl": 26, "typic": [18, 43, 46, 53, 54, 59, 62, 64], "typing_annot": 26, "typing_fin": 26, "typing_liter": 26, "typo": [13, 47, 53], "tz": [49, 68], "tzinfo": [59, 68], "tzname": 68, "u": [1, 24, 25, 38, 45, 47, 48, 49, 50, 53, 55, 56, 58, 59, 60, 63, 65, 66], "u4": 59, "ubuntu": 67, "uc": 55, "ui": [68, 69], "uid": 59, "ukctvrjsol0": 69, "un": [47, 60, 65], "unabl": [23, 44, 45, 51, 56, 65], "unalign": 33, "unavoid": 59, "unbeliev": 47, "uncas": 53, "uncertainti": 59, "unclear": [38, 56, 58, 62], "uncompress": 2, "und": 47, "undefin": [51, 65], "undefined_vari": 65, "under": [38, 49, 51, 58, 69], "underfilled_job_titl": 47, "undergra": 63, "underli": [43, 53, 59], "underscor": 1, "understand": [1, 5, 6, 11, 13, 22, 38, 43, 50, 51, 53, 56, 58, 60, 62, 63, 65, 66, 67, 68], "undesir": 48, "undo": [38, 45, 58], "unequ": 9, "unevalu": 25, "unexpect": [4, 6, 18, 28, 59, 60, 62], "unfamiliar": 51, "unfil": 51, "unfold": 62, "unhash": 4, "unicod": 66, "unicorn": 47, "unidecod": 53, "unifi": [47, 60, 65], "uniform": [45, 48, 54, 60], "uninstal": 66, "unintend": [1, 6], "unintention": 6, "union": [44, 65], "uniqu": [14, 31, 39, 49, 55, 59, 60], "unique_id": 59, "uniquecarri": 46, "unit": [6, 13, 26, 48, 49, 59], "unitedst": 59, "unitregistri": 62, "univers": [47, 49], "universal_tagset": 53, "unix_timestamp": 56, "unknown": [4, 13, 47, 53], "unless": [6, 43], "unlik": [59, 69], "unlink": 69, "unmock": 58, "unnecessari": [5, 19, 43, 46, 54, 56, 65], "unnot": 9, "unordered1": 17, "unordered2": 17, "unpack": [10, 53], "unpack_contract": 53, "unpack_hashtag": 53, "unpickl": 52, "unread": 62, "unrel": 49, "unreli": [38, 58], "unsaf": [44, 45, 62, 65], "unsafe_2": 44, "unsafefileerror": 62, "unseen": 51, "unsort": 65, "unstar": 69, "unstar_button": 69, "unstructur": [53, 59], "unsupervis": 47, "unsupport": [1, 6], "until": [20, 24, 38, 49, 51, 53, 54, 56, 58, 65, 69], "untouch": 45, "untrack": [38, 58], "untrust": 62, "unus": [35, 65], "unusu": 33, "unwant": 54, "unyt_arrai": 62, "up": [2, 6, 8, 15, 25, 34, 36, 38, 43, 45, 46, 47, 49, 50, 51, 53, 58, 59, 60, 66, 67, 69, 72], "upcom": 50, "updat": [5, 6, 43, 48, 49, 54, 60, 64, 66, 67, 71], "updated_pl_df": 54, "updates_data": 45, "upgrad": [59, 63], "upload": [53, 62], "upload_fil": 62, "upon": 52, "upper": [33, 34, 43, 47, 51, 56, 59, 60, 68], "upper_1": [], "upper_c": 56, "upperboundsoncoeffici": 51, "upperboundsonintercept": 51, "uppercas": [7, 68], "urchad": 53, "ureg": 62, "uri": 51, "url": [1, 45, 49, 53, 55, 62, 66, 67], "urllib": 49, "urlopen": 49, "urlsafeseri": 55, "us": [0, 2, 7, 8, 9, 10, 11, 13, 17, 19, 21, 22, 25, 27, 34, 35, 37, 40, 42, 45, 50, 52, 53, 54, 55, 57, 61, 64, 65, 66, 72, 73], "us_cal": 59, "us_holidai": 59, "usa": [49, 59], "usabl": 68, "usag": [23, 32, 43, 46, 50, 51, 52, 54, 56, 63, 64, 66], "use_adversari": 49, "user": [8, 13, 22, 23, 38, 41, 43, 44, 45, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 64, 65, 66, 68, 69], "user1": [33, 43, 55, 62], "user2": [33, 43, 62], "user3": [33, 43], "user_ag": 48, "user_data": 4, "user_guid": 28, "user_id": [51, 54, 58], "user_instal": 60, "userattr": 23, "userid": 51, "usernam": [43, 49, 52, 53, 63, 67, 69], "username_field": 69, "userpydant": 23, "userwarn": [51, 53, 56, 60, 63], "usual": 47, "utc": [59, 68], "utc_now": 59, "utc_time_cr": 51, "utcfromtimestamp": 68, "utcnow": 68, "utcoffset": 68, "utctimetupl": 68, "utf": 68, "util": [24, 38, 41, 43, 44, 51, 53, 54, 56, 57, 58, 59, 60, 64, 66, 68, 69], "utils_func": 59, "utilsforecast": 59, "uuid": 49, "uuu": 68, "v": [4, 23, 49, 59, 60, 65], "v0": [50, 65], "v1": [29, 43, 46, 53, 65], "v2": [29, 53, 65], "v3": 67, "v4": 57, "va": 60, "vacat": 60, "vagu": [6, 47], "val": [6, 28, 29, 31, 32, 56, 59], "val1": [6, 38, 56, 58], "val2": [6, 38, 56, 58], "val3": [38, 58], "val_df1": 29, "val_df2": 29, "val_i": 29, "val_x": 29, "valapeno": 47, "valid": [1, 5, 45, 53, 64, 65, 68], "valid_pct": 47, "validate_python": 65, "validation_curv": 51, "validationerror": [23, 65], "valu": [1, 5, 13, 15, 18, 19, 23, 29, 30, 31, 36, 38, 43, 45, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 62, 63, 64, 65, 68], "valuabl": [1, 67, 72], "value1": 54, "value2": 54, "value_column": [38, 58, 59], "value_count": [34, 47], "value_i": 29, "value_var": 39, "value_x": 29, "valueerror": [1, 9, 13, 18, 23, 24, 38, 41, 58, 68], "values_chang": [38, 58], "van": 60, "vanna": 49, "var": [6, 15, 28, 36, 64], "var_": 47, "var_0": 47, "var_1": [47, 68], "var_2": [47, 68], "var_3": [47, 68], "var_4": 47, "var_5": 47, "var_nam": 39, "vararg": 51, "varargs_typ": 51, "varchar": [38, 43, 46, 58], "vari": [38, 43, 58, 59], "variabl": [5, 6, 10, 11, 13, 18, 25, 26, 38, 39, 47, 49, 50, 51, 53, 56, 58, 59, 60, 63, 65, 68, 69, 71], "varianc": 59, "variat": [19, 38, 47, 53, 58, 64], "varieti": [49, 51, 59, 62], "variou": [1, 5, 10, 18, 26, 38, 43, 46, 51, 52, 53, 56, 59, 64, 66], "varkw": 51, "varkw_typ": 51, "vbl8dny6b4anbtbbky3": 55, "vc": 51, "vcodec": 69, "vcs_commit": 51, "ve": [23, 49], "vector": [50, 51, 53, 60], "veget": [49, 50], "vegetarian": 47, "veggi": 17, "vehicl": 47, "venezuela": 47, "venn2": 60, "venn3": 60, "venv": [33, 35, 38, 41, 44, 45, 49, 51, 53, 56, 58, 60, 62, 64, 65, 66, 68], "ver": 53, "verbos": [1, 4, 20, 41, 43, 46, 48, 51, 53, 64, 67, 69], "verbose_feature_names_out": 47, "veri": [15, 18, 36, 47, 49, 59, 61, 69], "verif": 65, "verifi": [45, 55, 56, 64], "vernal": 59, "versa": 4, "versatil": [1, 10, 51, 64], "version": [25, 35, 38, 49, 51, 53, 54, 56, 58, 59, 60, 62, 64, 65, 66, 67, 68, 71, 72], "version_info": [38, 58], "versu": 28, "vertic": 48, "very_long_str": 65, "veteran": 59, "vi": [53, 60, 69], "vice": 4, "victoria": 59, "video": 49, "vie": 49, "vietnam": 47, "view": [28, 30, 31, 45, 47, 51, 52, 53, 57, 60, 63, 66, 67, 72], "vikparuchuri": 49, "villag": [47, 60], "vinegar": 49, "violat": [6, 45, 65], "violetbag": 49, "viral": 49, "virgil": 49, "virgo": 47, "virtual": [56, 69], "virtualenv": 51, "visi": 59, "visibl": 69, "vision": 66, "visit": [23, 59, 60, 65], "visitor": 48, "visitor_bodi": 48, "visitor_text": 48, "visual": [12, 44, 47, 49, 52, 67, 71], "visualize_barchart": 53, "visualize_top": 53, "viz": 51, "vladivostok": 49, "vmax": 47, "vmin": 47, "vnd": 67, "volatil": 59, "volum": [1, 13, 56, 59], "vote": 51, "vp9": 69, "vs1": 47, "vs2": 47, "vscode": 41, "vsketch": 60, "vulner": [50, 56, 62], "vv": [38, 58], "vvs2": 47, "w": [22, 46, 47, 53, 59, 62], "wa": [8, 38, 45, 53, 56, 59, 62, 64, 65, 67], "wad": 49, "wade": 49, "wai": [2, 4, 5, 6, 10, 11, 13, 14, 17, 23, 24, 28, 30, 32, 33, 38, 47, 49, 51, 53, 58, 59, 62, 64, 67, 68, 72], "wait": [38, 49, 58, 69], "wake": [15, 36], "wale": 59, "walk": [1, 38, 53, 58, 59, 60, 64], "wall": 8, "walmart": [24, 38, 39, 58, 62], "want": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 47, 49, 51, 52, 53, 54, 55, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72], "wanted_list": 49, "war": 53, "warehous": 53, "warm": 49, "warmup": [38, 58], "warmup_iter": [38, 58], "warn": [30, 38, 44, 45, 47, 53, 56, 58, 60, 64, 68, 69], "was_imposs": 51, "washington": [49, 59], "washingtonpost": 49, "wast": [38, 58, 63], "watch": 49, "water": [48, 49], "wave": 63, "wb": [1, 47, 59, 62], "we": [1, 2, 4, 5, 6, 11, 12, 13, 15, 19, 23, 24, 25, 26, 30, 31, 33, 36, 38, 43, 45, 46, 47, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 63, 69, 71], "weak": 50, "weather": [50, 53], "web": [23, 47, 51, 55, 72], "webbrows": 69, "webdriv": 69, "webdriverwait": 69, "webm": 69, "webpag": 49, "websit": [49, 62, 67], "wednesdai": 69, "week": [32, 38, 47, 59, 60, 68, 69], "weekdai": [38, 47, 58, 68], "weekday_nam": 47, "weekend": 53, "weekli": 69, "weigh": 8, "weight": [1, 23, 51, 53, 62], "weight1": 52, "weight2": 52, "weightcol": 51, "welcom": [49, 64], "well": [1, 47, 51, 53, 54, 60, 67], "wemak": 65, "went": 53, "were": [5, 53, 58, 59], "west": [47, 49, 54, 60], "western": 59, "wget": [43, 46, 53, 54], "what": [24, 38, 44, 45, 47, 49, 50, 51, 53, 54, 58, 60, 62, 64, 66, 67, 68], "wheel": 51, "when": [1, 3, 4, 7, 10, 12, 13, 15, 18, 20, 23, 24, 25, 26, 28, 33, 36, 37, 39, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68], "whenmatchedupd": 45, "whennotmatchedbysourceupd": 45, "whennotmatchedinsert": 45, "where": [1, 4, 5, 13, 43, 44, 45, 47, 50, 51, 54, 56, 57, 58, 59, 60, 62, 65, 68], "wherea": [38, 53, 56, 58], "whether": [22, 33, 38, 41, 49, 51, 56, 58, 59, 68], "which": [4, 6, 7, 15, 18, 24, 26, 28, 30, 31, 34, 36, 38, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 62, 65, 66, 68, 69], "while": [1, 2, 5, 13, 23, 24, 26, 28, 34, 38, 39, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 69], "whiskerprop": 60, "white": [37, 49, 60], "whitespac": [43, 64, 68], "whl": 68, "who": [53, 56, 62], "whose": [12, 28, 32, 33, 34, 41, 60], "why": [18, 25, 49, 51, 52, 53, 64, 72], "wide": [10, 31, 38, 39, 58, 59, 72], "wider": 50, "width": [31, 60, 68], "wifi": 69, "wiki": 30, "wikipedia": 30, "wild": 53, "wildcard": 43, "wilei": 64, "wilkinson": 48, "willianfuk": 59, "willing": 47, "wilson": [49, 56], "win": 59, "window": [53, 56], "windowspec": 56, "windsor": 47, "wine": 60, "wine_typ": 60, "winspe": 60, "winter": 60, "wintern": 49, "wise": [38, 58], "wish": [25, 62, 64, 68], "wit": 47, "with_column": 54, "with_frag": 48, "with_latex": 64, "with_path": 48, "with_queri": 48, "with_slot": 1, "with_trend": 59, "withgroupedstat": 56, "within": [1, 6, 38, 44, 47, 48, 49, 51, 53, 56, 58, 59, 60, 62, 67], "without": [5, 6, 12, 13, 18, 19, 20, 24, 30, 31, 33, 38, 43, 44, 45, 46, 48, 51, 53, 54, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71], "without_slot": 1, "withrangestat": 56, "wlp111s0": 44, "women": 49, "wonder": 60, "woof": 26, "worcest": 49, "word": [33, 38, 47, 50, 58, 60, 62, 68], "word_count": 53, "word_frequ": 53, "word_scor": 53, "wordlist": [51, 53], "wordnet": 53, "wordninja": 53, "work": [1, 4, 10, 12, 18, 19, 20, 23, 25, 28, 33, 44, 46, 47, 49, 51, 52, 53, 54, 57, 60, 62, 63, 64, 65, 66, 67, 69, 71, 72], "workaround": 45, "worker": [44, 47, 53, 56], "workflow": [1, 43, 46, 47, 51, 53, 60, 67], "working_hour": 59, "workload": [44, 56], "world": [22, 30, 49, 50, 53, 62, 64, 69], "worldwid": 59, "worri": 25, "worst": 59, "would": [25, 31, 38, 47, 53, 54, 58, 59], "wouldn": [24, 25, 38, 44, 47, 58, 63, 66, 68, 69], "wp": 53, "wrap": [5, 47, 50, 56], "wrapper": [5, 50, 58, 62, 65], "wratio": 53, "write": [1, 2, 5, 10, 22, 24, 37, 41, 45, 46, 49, 51, 52, 57, 60, 63, 64, 65, 66, 67, 68], "write_deltalak": [43, 45, 46, 54], "write_text": [22, 38, 58, 69], "writefil": [1, 6, 13, 26, 38, 43, 51, 53, 57, 58, 63, 64, 65, 66, 68, 69], "writer": [43, 45, 46, 54], "writfil": [38, 58], "written": [38, 45, 47, 54, 58, 73], "wrong": [1, 5, 6], "wrong_calc": 62, "wrote": 72, "wsm": 47, "www": [1, 49, 50, 53], "x": [1, 6, 7, 8, 20, 25, 28, 29, 31, 38, 39, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 64, 65, 68, 71], "x20": 64, "x2_muzaxc2cax9w6lz6": 49, "x7f": 64, "x86_64": 71, "x_b": 48, "x_c": 48, "x_coord": 44, "x_df": 59, "x_dirti": 47, "x_enc": 47, "x_is_even_and_neg": 6, "x_label": [6, 60], "x_preprocess": 47, "x_resampl": 51, "x_shift": 44, "x_test": [47, 51, 52, 59], "x_train": [47, 51, 52], "x_transform": 47, "x_valu": 60, "xgboost": 43, "xi": 51, "xlabel": [6, 48, 49, 51, 59], "xlnet": 53, "xlsx": 37, "xml": [45, 69], "xpath": 69, "xt": 47, "xtick": [51, 60], "xticklabel": 47, "xtremedistil": 53, "xvf": 53, "xwnpqwtd": 49, "xx": [47, 49, 59], "y": [1, 3, 6, 20, 25, 29, 31, 38, 39, 41, 43, 44, 47, 48, 49, 51, 52, 53, 57, 58, 59, 60, 64, 65, 66, 68, 71], "y1_valu": 60, "y2_valu": 60, "y3_valu": 60, "y_actual": 51, "y_column_nam": 43, "y_coord": 44, "y_df": 59, "y_fitted_df": 59, "y_hat_df": 59, "y_is_odd_and_posit": 6, "y_label": [6, 60], "y_name": 47, "y_pi": 51, "y_pred": [51, 59, 68], "y_predict": 51, "y_rec_df": 59, "y_resampl": 51, "y_shift": 44, "y_test": [47, 51, 52, 59, 60], "y_test_df": 59, "y_test_pr": 51, "y_test_scor": 51, "y_train": [47, 51, 52], "y_train_df": 59, "y_train_pr": 51, "y_train_scor": 51, "y_true": 68, "y_type": 68, "yakutsk": 49, "yaml": [51, 55, 63, 65, 69], "ye": [24, 25, 60, 67], "year": [3, 13, 44, 47, 49, 53, 59, 60, 68], "year_first_hir": 47, "yellow": [1, 4, 47, 48, 49, 52, 53, 60], "yellowbrick": 60, "yemen": [47, 49], "yep": 53, "yesterdai": 45, "yet": [6, 54, 59], "yh5baekaaealaaaaaabaaeaaaictaeaow": 49, "yi": 51, "yield": [56, 59], "yjp2stit_vgpqrm9oeibsydfg8ba": 49, "ylabel": [6, 48, 51, 59], "ylorrd": 47, "yml": 69, "yo": 50, "yoga": 53, "york": [43, 46, 47, 49, 53, 56, 60], "yorkvil": [47, 60], "you": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 73], "your": [2, 3, 5, 10, 13, 19, 20, 24, 25, 31, 32, 33, 34, 41, 46, 47, 49, 50, 54, 55, 56, 59, 62, 63, 64, 66, 72, 73], "your_api_kei": 50, "your_api_token": 44, "your_email": 69, "your_github_token": 67, "your_kei": 51, "your_local_fold": 67, "your_nicest_paramet": 69, "your_openai_api_key_her": 49, "your_organis": 51, "your_second_email": 69, "yourfileid": 55, "yournam": 67, "yourself": [6, 65, 68], "youtu": 69, "yt": 69, "ytick": [51, 60], "yticklabel": 47, "ytimg": 69, "yy": 43, "yyyi": 68, "z": [6, 29, 39, 47, 48, 51, 64, 65], "z5jceahnv3aax9ihcdv": 49, "z_score": 51, "z_squar": 48, "zaleski": 49, "zambia": 47, "zero": [6, 38, 52, 58, 59, 60, 68], "zerodivisionerror": [6, 69], "zeroshotgptclassifi": 51, "zfill": 68, "zimbabw": 47, "zip": [18, 44, 51, 53, 55, 59, 65], "zipcod": 63, "zon": 60, "zone": [47, 59], "zoo": 60, "zoom": 60, "zu": 47, "zucchifi": 47, "zucchini": 47, "zucchtni": 47, "zucchzni": 47, "zuck": 49, "zuckerberg": 49, "zuckhini": 47, "zycchini": 47, "zza": 59, "\u00b5": [6, 8, 30, 43, 45, 46, 54], "\u00bc": 49, "\u03bc": 8}, "titles": ["<span class=\"section-number\">2. </span>Python Built-in Methods", "<span class=\"section-number\">2.7. </span>Classes", "<span class=\"section-number\">2.9. </span>Code Speed", "<span class=\"section-number\">2.8. </span>Datetime", "<span class=\"section-number\">2.5. </span>Dictionary", "<span class=\"section-number\">2.6. </span>Function", "<span class=\"section-number\">2.10. </span>Good Python Practices", "<span class=\"section-number\">2.3.5. </span>Apply Functions to Elements in a List", "<span class=\"section-number\">2.3.2. </span>Get Elements", "<span class=\"section-number\">2.3.4. </span>Join Iterables", "<span class=\"section-number\">2.3. </span>Python List Operations", "<span class=\"section-number\">2.3.3. </span>Unpack Iterables", "<span class=\"section-number\">2.2. </span>Number", "<span class=\"section-number\">2.11. </span>New Features in Python", "<span class=\"section-number\">2.4. </span>Set", "<span class=\"section-number\">2.1. </span>String", "<span class=\"section-number\">3. </span>Python Utility Libraries", "<span class=\"section-number\">3.1. </span>Collections", "<span class=\"section-number\">3.7. </span>Data Classes", "<span class=\"section-number\">3.3. </span>Functools", "<span class=\"section-number\">3.2. </span>Itertools", "<span class=\"section-number\">3.6. </span>Operator", "<span class=\"section-number\">3.9. </span>pathlib", "<span class=\"section-number\">3.10. </span>Pydantic", "<span class=\"section-number\">3.4. </span>Pydash", "<span class=\"section-number\">3.5. </span>SymPy", "<span class=\"section-number\">3.8. </span>Typing", "<span class=\"section-number\">4. </span>Pandas", "<span class=\"section-number\">4.1. </span>Change Values", "<span class=\"section-number\">4.6. </span>Combine Multiple DataFrames", "<span class=\"section-number\">4.5. </span>Create a DataFrame", "<span class=\"section-number\">4.8. </span>Manipulate a DataFrame Using Data Types", "<span class=\"section-number\">4.3. </span>Work with Datetime", "<span class=\"section-number\">4.7. </span>Filter Rows or Columns", "<span class=\"section-number\">4.2. </span>Get Certain Values From a DataFrame", "<span class=\"section-number\">4.9. </span>Sort Rows or Columns of a DataFrame", "<span class=\"section-number\">4.10. </span>String", "<span class=\"section-number\">4.11. </span>Style a DataFrame", "<span class=\"section-number\">4.12. </span>Testing", "<span class=\"section-number\">4.4. </span>Transform a DataFrame", "<span class=\"section-number\">5. </span>NumPy", "<span class=\"section-number\">5.1. </span>NumPy", "<span class=\"section-number\">6. </span>Data Science Tools", "<span class=\"section-number\">6.13. </span>SQL Libraries", "<span class=\"section-number\">6.11. </span>Better Pandas", "<span class=\"section-number\">6.16. </span>Delta Lake", "<span class=\"section-number\">6.17. </span>DuckDB", "<span class=\"section-number\">6.2. </span>Feature Engineer", "<span class=\"section-number\">6.1. </span>Feature Extraction", "<span class=\"section-number\">6.3. </span>Get Data", "<span class=\"section-number\">6.18. </span>Large Language Model (LLM)", "<span class=\"section-number\">6.5. </span>Machine Learning", "<span class=\"section-number\">6.4. </span>Manage Data", "<span class=\"section-number\">6.6. </span>Natural Language Processing", "<span class=\"section-number\">6.14. </span>Polars", "<span class=\"section-number\">6.8. </span>Sharing and Downloading", "<span class=\"section-number\">6.15. </span>PySpark", "<span class=\"section-number\">6.9. </span>Tools to Speed Up Code", "<span class=\"section-number\">6.12. </span>Testing", "<span class=\"section-number\">6.7. </span>Time Series", "<span class=\"section-number\">6.10. </span>Visualization", "<span class=\"section-number\">7. </span>Cool Tools", "<span class=\"section-number\">7.3. </span>Alternative Approach", "<span class=\"section-number\">7.1. </span>Tools for Best Python Practices", "<span class=\"section-number\">7.7. </span>Better Outputs", "<span class=\"section-number\">7.5. </span>Code Review", "<span class=\"section-number\">7.9. </span>Environment Management", "<span class=\"section-number\">7.8. </span>Git and GitHub", "<span class=\"section-number\">7.6. </span>Logging and Debugging", "<span class=\"section-number\">7.4. </span>Workflow Automation", "<span class=\"section-number\">8. </span>Jupyter Notebook", "<span class=\"section-number\">8.1. </span>Jupyter Notebook", "Efficient Python Tricks and Tools for Data Scientists", "<span class=\"section-number\">1. </span>How to Read This Book"], "titleterms": {"": [4, 6, 9, 19, 20, 23, 24, 33, 34, 39, 41, 45, 46, 47, 48, 49, 50, 51, 56, 57, 59, 68], "0": [30, 31, 32], "1": 65, "10": [9, 13], "11": 13, "12x": 54, "2": [2, 20, 30, 31, 34, 52, 53], "23": 57, "3": [4, 9, 13, 51, 53, 56], "36": 53, "5": 56, "9": 4, "A": [6, 17, 20, 38, 43, 44, 52, 54, 58, 59, 60, 62, 69], "At": 69, "Be": [6, 26], "Being": 71, "For": [6, 20, 48, 53], "If": [6, 33], "Into": [29, 39, 48, 66], "Its": 66, "Not": [6, 17, 26, 38, 58], "OR": 6, "One": [6, 15, 17, 36, 38, 41, 49, 51, 53, 57, 58, 59, 60, 67, 68, 69], "That": [6, 26, 47, 62], "The": [2, 6, 15, 17, 32, 34, 36, 38, 45, 48, 52, 53, 58, 59, 60, 62, 71, 72], "Their": [31, 33], "Will": 6, "With": [4, 15, 20, 24, 29, 36, 38, 44, 58], "_": 6, "__call__": 1, "__main__": 6, "__name__": 6, "__repr__": 1, "__str__": 1, "ab": [38, 58], "about": [49, 71, 72], "abstract": 1, "acceler": 53, "access": [22, 32, 34, 62], "accur": 51, "accuraci": [38, 50, 58], "across": 71, "ad": [1, 14], "adapt": 1, "add": [18, 26, 32, 44, 57, 59, 60, 68], "add_datepart": 59, "adjust": 60, "aeon": 59, "after": [32, 38, 58, 69], "again": 68, "agg": 39, "aggreg": 39, "ai": [44, 47, 50, 53], "align": 39, "all": [6, 7, 29, 33, 34, 38, 41, 58], "almost": [15, 36], "alphanumer": 62, "also": 49, "altern": [53, 62], "an": [5, 6, 7, 9, 15, 17, 20, 25, 26, 28, 36, 41, 49, 51, 53, 60, 69], "analysi": [37, 38, 51, 54, 56, 58, 59, 65], "analyt": [43, 46], "analyz": [53, 65], "ani": [7, 41, 64, 66, 68], "anim": [60, 64], "annot": [26, 48, 60, 69], "anoth": [4, 15, 19, 22, 29, 33, 36, 67], "anywher": 43, "api": [49, 56, 60, 67], "app": 53, "append": [9, 45], "appli": [7, 19, 20, 28, 39, 44, 57], "applic": [60, 66], "approach": [20, 59, 62], "approx": [38, 58], "ar": [7, 17, 22, 41, 69], "arbitrari": 5, "argpars": 64, "argsort": 41, "argument": [5, 6, 19, 20], "arima": 59, "arithmet": 3, "around": 52, "arrai": [31, 34, 41, 56, 62], "articl": [15, 36, 53], "ask": 49, "assert": [38, 58], "assert_almost_equ": 41, "assess": 59, "assign": [6, 28, 38, 39, 58], "assist": 47, "associ": 9, "astral": 67, "attent": 53, "attr": 23, "attract": 60, "attribut": [1, 24], "augment": 53, "author": 72, "auto": [43, 59], "autogluon": 51, "autom": [46, 49, 53, 59, 67, 69], "automat": [59, 60, 65, 69], "autoremov": 66, "autoscrap": 49, "avail": 17, "averag": 32, "avoid": [6, 47, 56], "ax": 41, "back": 55, "background": 37, "backtest": 59, "bar": [38, 44, 58, 68], "base": [3, 9, 19, 29, 31, 32, 33, 38, 41, 48, 58, 66, 69], "basic": [25, 51], "beartyp": 65, "beauti": [63, 68], "befor": 32, "benchmark": [38, 58], "bert": 53, "bertop": 53, "berttop": 53, "bertviz": 53, "best": [15, 18, 36, 45, 48, 56, 63], "better": [1, 20, 44, 64], "between": [2, 9, 18, 34, 38, 41, 52, 58, 60, 62], "beyond": [45, 53, 59], "big": 56, "bin": 34, "blaze": 54, "blox": 60, "book": [72, 73], "boolean": [20, 33], "box": 62, "bracket": 62, "branch": 67, "break": [38, 58], "bring": 67, "browser": [67, 69], "build": [47, 51, 53, 64], "built": 0, "bundl": 66, "calcul": [3, 15, 34, 36, 44, 53, 64], "call": [1, 19, 62], "callabl": 26, "camelot": 64, "captur": [51, 60], "case": [38, 58], "catch": 6, "categor": [28, 31, 35, 47, 48], "categori": [28, 38, 39, 47, 58], "causal": 59, "cell": 37, "certain": [15, 34, 36, 41], "chain": [24, 28, 56], "chainmap": 17, "chang": [28, 34, 41, 59, 69], "charact": [15, 36], "chart": 60, "chatgpt": 51, "check": [6, 7, 14, 22, 38, 41, 58, 62, 65], "checker": 65, "checklist": 53, "choic": 8, "choos": [38, 58], "chroma": 53, "chrono": 59, "chunk": [24, 30], "class": [1, 18, 23, 26, 38, 58, 60], "classif": 59, "classifi": 51, "claus": 5, "clean": [6, 11, 20, 53], "cleaner": [1, 13, 56, 69], "clear": 48, "cli": [64, 67], "click": 64, "clip": 33, "clone": 66, "close": 1, "cloud": 62, "code": [1, 2, 5, 6, 13, 15, 28, 36, 38, 43, 47, 48, 49, 51, 53, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69, 71], "codebas": 65, "collect": 17, "collect_al": 54, "color": 37, "column": [28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 56, 59], "columnar": [43, 46], "combin": [17, 19, 20, 29, 38, 44, 58], "combine_first": 29, "comma": [15, 36], "command": [63, 64, 68, 69], "comment": 65, "commit": 67, "common": 64, "compar": [2, 18, 52, 64, 66, 68], "comparison": [1, 3, 41, 51, 52, 54, 56], "complex": [6, 43, 45, 56], "compon": [43, 48], "comprehens": [4, 7, 60, 68], "compress": 20, "comput": [34, 39, 54, 59], "concaten": 6, "concept": 64, "concurr": 2, "condens": 6, "condit": [6, 7, 13, 38, 41, 56, 58], "confirm": 12, "confus": 60, "consist": 50, "consol": 68, "constraint": 45, "cont_cat_split": 48, "contain": [33, 34, 62], "content": [47, 69], "context": 26, "contigu": 53, "continu": 48, "contract": 53, "control": [15, 36, 38, 52, 58], "convers": [31, 62], "convert": [32, 53, 59, 62], "cool": 61, "copi": [6, 30, 66], "corpora": 60, "correl": [34, 47, 60], "corrwith": 34, "count": [17, 33, 34], "counter": [6, 17], "cover": 10, "cpu": 2, "creat": [1, 6, 17, 22, 30, 38, 39, 43, 48, 49, 51, 53, 56, 58, 60, 63, 64, 66, 69], "cross": [39, 47, 59], "crosstab": 39, "csv": [30, 32, 43, 46, 54], "cummax": 34, "cumsum": 34, "cumul": [19, 34], "current": [19, 22, 28, 34], "curv": 51, "custom": [1, 24, 29, 47, 53], "cut": 34, "dai": 59, "dask": [43, 44], "data": [1, 9, 17, 18, 20, 23, 30, 31, 32, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 65, 71, 72], "databas": [38, 43, 58], "dataclass": [13, 55], "datacommon": 49, "datacompi": 52, "datafram": [28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 45, 46, 47, 49, 54, 56, 57, 58], "datapoint": 32, "dataset": [2, 43, 46, 47, 49, 51, 52, 53], "date": [3, 15, 23, 32, 36, 59], "datefind": 59, "dateoffset": 32, "datetim": [3, 30, 32, 59, 68], "dead": 65, "deal": 51, "debug": [15, 36, 68], "decim": [12, 15, 36], "decis": [51, 60], "declar": [1, 26, 38, 58], "decompos": 51, "decor": [5, 50, 62], "deep": [38, 58, 69], "deepcheck": [38, 58], "deepcopi": 6, "deepdiff": [38, 58], "deepev": [38, 58], "deepli": 24, "default": [6, 17, 18], "default_factori": 18, "defaultdict": 17, "defin": 53, "delet": 45, "delta": [45, 54], "dendogram": 60, "depend": [26, 66], "deriv": 25, "descript": [38, 58, 64], "deseri": [55, 62], "design": 1, "desktop": 69, "detect": [15, 36, 50, 51, 59, 60, 69], "determin": 51, "df": [29, 33, 34], "df_shrink": 57, "diagram": 60, "dict": 4, "dictdiff": 62, "dictionari": [4, 17, 21, 24, 28, 34, 43, 62], "diff": 34, "differ": [9, 20, 34, 38, 39, 41, 52, 58, 62, 71], "difflib": [15, 36], "dimens": [51, 53, 60], "dimension": [51, 60], "directli": 49, "directori": [22, 38, 58], "dirti": [38, 47, 58], "dirty_cat": 47, "discoveri": 60, "discret": 34, "disk": 2, "displai": [37, 60, 71], "distfit": 48, "distinguish": 1, "distribut": [48, 51, 52, 56], "divid": 30, "divis": 12, "do": 6, "docopt": 63, "docstr": [38, 58, 65], "doctest": [38, 58], "document": 63, "don": [6, 63], "dot": 62, "doubl": [4, 12, 41], "download": [55, 67, 69], "drag": 60, "drift": 60, "drive": 55, "drop": [47, 60], "dropwhil": 20, "dt": 32, "dtreeviz": 60, "dtype": 31, "duck": 1, "duckdb": [43, 46], "duplic": 6, "durat": 3, "dvc": 52, "dynam": [43, 59, 64], "e": 67, "each": [5, 7, 28, 34, 39], "eas": [60, 67], "easi": [51, 52, 59], "easier": [37, 56], "easiest": [52, 60], "easili": 46, "effect": [6, 39], "effici": [6, 20, 30, 31, 38, 43, 44, 45, 46, 47, 53, 58, 65, 72], "effortless": 55, "effortlessli": 59, "ekphrasi": 53, "eleg": 62, "element": [7, 8, 9, 20, 24, 28, 29, 34, 41, 48], "elementwis": 28, "els": [4, 5, 6], "email": 69, "embed": 53, "embrac": 1, "encod": [28, 47], "end": 3, "enforc": [45, 65], "engin": [44, 47, 48, 51, 53, 59], "english": 53, "enhanc": [1, 5, 13, 15, 29, 36, 47, 53, 56], "ensur": [1, 50], "enum": 1, "enumer": 6, "env": 63, "environ": [55, 66], "equal": [15, 34, 36, 38, 41, 58], "equat": [25, 71], "erad": 65, "error": [6, 38, 56, 58], "estim": [51, 53, 59], "evalu": [7, 56], "evenli": 41, "evid": 60, "exampl": [38, 58], "except": [6, 28, 38, 58], "exclud": [31, 33], "execut": [2, 13, 24, 38, 54, 58, 64, 66, 68, 69], "expand": [25, 53], "expect": [38, 58, 72], "expert": 53, "explicit": 69, "explod": 28, "explor": 68, "exponenti": 59, "express": [15, 20, 33, 36, 54, 62], "extend": [9, 11], "extens": [1, 60], "extern": [38, 50, 58], "extract": [43, 48, 49, 50, 53, 59, 62, 64], "f": [15, 36], "facebook": 49, "factor": 25, "fail": [38, 58], "failur": [38, 58], "fake": 49, "faker": 49, "fals": 51, "falsifi": [38, 58], "familiar": 59, "fashion": 47, "fast": [51, 53, 54, 59, 65], "fastai": [48, 57, 59], "fastapi": 51, "faster": [43, 46, 54, 57], "featur": [3, 13, 47, 48, 51, 52, 59], "feel": 62, "fetch_openml": 49, "few": 64, "fewer": 6, "field": 23, "figur": 60, "file": [22, 32, 38, 43, 45, 46, 55, 58, 63, 65, 66, 67, 69], "fill": 28, "filter": [7, 20, 30, 33, 54, 62], "final": 26, "find": [4, 8, 15, 24, 32, 34, 36, 38, 48, 58, 62, 65], "fine": 13, "finish": 69, "fire": 64, "first": 7, "fix": 30, "fixtur": [38, 58], "flag": 6, "flaki": [38, 58], "flashtext": 53, "flatten": [24, 41], "flatten_deep": 24, "flexibl": [26, 59], "flick": 62, "float": [38, 58], "floor": 12, "flow": 60, "flowchart": 60, "fluke": 52, "folium": 60, "forecast": 59, "fork": 67, "format": [12, 15, 36, 37, 53], "formatt": 43, "formula": 48, "forward": [12, 28], "four": 6, "fraction": 12, "freez": [38, 58], "freezegun": [38, 58], "frequenc": [32, 47, 53, 60], "frequent": 28, "friendli": 56, "from": [4, 8, 9, 21, 22, 30, 33, 34, 39, 41, 43, 44, 45, 48, 49, 50, 51, 53, 55, 59, 64, 65, 67, 69, 72], "fromkei": 4, "frozen": 18, "fugu": 44, "fuguesql": 43, "function": [1, 2, 5, 6, 7, 19, 20, 24, 25, 26, 28, 38, 44, 58, 62, 64, 65, 68, 69], "functiontransform": 47, "functool": 19, "fuzzi": 47, "gain": 44, "galat": 53, "gdown": 55, "gener": [20, 38, 49, 53, 58, 59, 60, 64, 66, 69], "geograph": 44, "geopanda": 44, "geopi": 48, "get": [1, 4, 6, 7, 8, 12, 15, 21, 22, 24, 32, 34, 36, 39, 41, 49, 51, 71], "get_close_match": [15, 36], "getattr": 1, "getter": 1, "gif": 60, "giskard": 50, "git": [38, 58, 67], "github": 67, "github1": 67, "githubkit": 67, "gliner": 53, "gluont": 59, "good": 6, "goodby": 31, "googl": [49, 55], "gpt": 67, "gradient": 37, "grain": 13, "graphviz": 60, "great": 64, "gridsearchcv": 51, "group": [20, 24, 32, 34, 39], "groupbi": [20, 39], "grouper": 32, "guid": [54, 72], "handcalc": 64, "handl": [6, 31, 43, 46, 47, 59], "har": [53, 54, 59], "hard": 63, "hardwar": 71, "have": 6, "heapq": 8, "heartrat": 68, "heatmap": 68, "helium": 69, "hierarch": 59, "high": [51, 60], "highlight": 37, "hint": 26, "hiplot": 60, "holidai": 59, "home": 22, "how": [5, 47, 51, 64, 73], "html": 30, "human": [62, 64], "hvplot": 60, "hydra": 63, "hyperfin": 68, "hypothesi": [38, 58], "i": [7, 12, 17, 25, 26, 38, 51, 58], "ibi": 44, "icecream": 68, "id": [38, 58], "idea": 60, "ignor": [6, 11], "iloc": 34, "imbalanc": 51, "imodel": 51, "implement": 1, "import": [51, 65, 66, 69], "improv": [1, 5], "includ": [29, 31], "incorpor": [38, 58], "indefinit": 53, "index": [6, 15, 24, 32, 33, 36, 41], "indic": 6, "infer_object": 31, "inflect": 53, "inform": [53, 63, 71], "inherit": 1, "init": 18, "input": [26, 38, 56, 58], "insert": 29, "insight": 44, "inspect": 68, "instal": 67, "instanc": 1, "instantli": [38, 58], "instead": [4, 6, 12, 63], "integr": [1, 25, 43, 50, 51], "intellig": 60, "inter": 7, "interact": [43, 60, 64, 67], "interfac": [59, 63, 64], "internet": 49, "interpret": [51, 53, 60], "interrog": 65, "intersect": 14, "interv": [32, 34, 41, 51, 59], "intuit": 62, "ipysankeywidget": 60, "ipython": [60, 69, 71], "ipyvizzu": 60, "isin": 33, "islic": 20, "isort": 65, "issu": 50, "item": [4, 7, 17, 19, 21, 24, 39], "itemgett": 21, "iter": [4, 7, 9, 11, 19, 20, 28], "itertool": 20, "itsdanger": 55, "jinja": 64, "join": [6, 9, 47, 56], "junk": 65, "jupyt": [48, 60, 70, 71], "kei": [4, 17, 20, 49, 62], "keyword": [5, 49, 53], "knee": 59, "kneed": 59, "knockknock": 69, "label": 47, "lake": [45, 54], "lambda": 5, "languag": [49, 50, 53, 59], "larg": [2, 12, 20, 30, 43, 46, 50, 54, 64], "largest": [4, 39], "later": 56, "latex": [25, 37, 41, 64], "latexify_pi": 64, "lazi": [51, 54, 56], "leab": [38, 58], "leakag": [47, 51], "learn": [43, 47, 51, 59, 69], "length": [20, 41], "letter": 64, "level": 1, "leverag": [30, 56, 59], "librari": [16, 38, 43, 54, 58, 59, 60, 62, 69], "lightn": 53, "lightweight": [17, 53, 69], "like": [1, 59], "limit": 25, "line": [6, 49, 51, 53, 57, 59, 63, 64, 65, 68, 69], "linspac": 41, "linter": 43, "list": [4, 6, 7, 8, 9, 10, 15, 17, 20, 21, 24, 31, 33, 36, 39, 41, 68], "liter": 26, "llm": [38, 49, 50, 51, 53, 58], "load": 54, "loc": 34, "local": [62, 67], "locat": [29, 48, 49, 60], "log": [38, 51, 52, 58, 68], "logic": [6, 56], "loguru": 68, "look": 64, "loop": [6, 20], "loss": 9, "lovelyplot": 60, "lump": 53, "lux": 60, "machin": [43, 51, 69], "made": [51, 52, 56, 59], "magent": 50, "magic": 1, "magika": 69, "maintain": [38, 58], "make": [6, 18, 30, 57, 62, 64], "make_column_transform": 47, "makefil": 69, "manag": [43, 46, 52, 66], "mang": 17, "manimml": 64, "manipul": [14, 31, 39, 62], "map": [7, 28, 60, 62], "mapi": 51, "mark": [38, 58], "markdown": [37, 69], "massiv": 53, "master": 14, "match": [13, 15, 24, 36, 47, 53, 62], "math": [64, 71], "matplotlib": 60, "matplotx": 60, "matrix": 60, "matter": 6, "max": [4, 8, 41], "maxim": 50, "maximum": 34, "maya": 59, "mayb": 62, "mean_squared_error": 51, "meaning": [6, 53], "media": 53, "melt": 39, "memori": [1, 31, 56, 57, 65], "merg": [4, 29, 45], "mermaid": 60, "met": [38, 58], "metadata": [26, 43, 51], "method": [0, 1, 6, 7, 9, 18, 19, 24, 26, 38, 41, 51, 58], "minim": 1, "mirascop": 50, "mismatch": [38, 45, 47, 58], "miss": [4, 28, 32, 60, 65], "missingno": 60, "misspel": 47, "mixin": 1, "ml": [51, 64], "mlem": 51, "mlflow": 51, "mlforecast": [51, 59], "mllib": 51, "mlxtend": 51, "mock": [38, 58], "mode": [30, 54], "model": [23, 38, 50, 51, 53, 58, 59, 60, 62], "modelkit": 51, "modern": [65, 69], "modul": [62, 66], "modular": [1, 56, 60], "modulu": 12, "monkeytyp": 69, "month": 3, "more": [1, 6, 20], "most": 28, "motiv": 25, "move": 52, "multilin": [15, 36], "multipl": [6, 8, 11, 12, 15, 17, 21, 28, 29, 36, 38, 39, 43, 46, 54, 56, 58, 60], "mutabl": [6, 18], "mypi": 65, "n": [8, 24, 32, 39], "name": [5, 6, 33, 38, 39, 48, 53, 58], "namedtupl": 17, "nan": 33, "natsort": 62, "natur": [49, 53], "ner": 53, "nest": [4, 6, 18, 20, 24, 46, 56, 62], "network": 49, "neural": 59, "neuralforecast": 59, "never": [6, 68], "new": [1, 13, 22, 28, 49], "newspaper3k": 53, "nice": 60, "ninja": 53, "nlp": 53, "nlpaug": 53, "non": 59, "normal": 18, "notat": 62, "notebook": [48, 60, 69, 70, 71], "notedown": 69, "notif": 69, "notifi": 69, "np": 41, "null": [29, 62], "num2word": 53, "number": [5, 12, 15, 23, 32, 34, 36, 41, 53], "numer": [12, 53], "numpi": [34, 40, 41, 62], "object": [1, 6, 24, 38, 39, 55, 58, 64, 68], "occurr": 17, "omit": [5, 24], "onc": [38, 43, 58], "onli": [5, 6, 18, 33, 38, 58], "open": [1, 67, 69], "openml": 49, "oper": [1, 3, 4, 6, 9, 10, 14, 19, 21, 25, 28, 39, 41, 43, 44, 45, 46, 56], "operatorn": 13, "optim": [1, 28, 31, 45, 54, 56, 65], "order": [9, 17, 35], "ordereddict": 17, "ordinari": 64, "organ": [38, 58, 67, 69], "out": [56, 64], "outlier": [33, 51], "outlin": 50, "output": [50, 64], "over": [1, 34, 38, 39, 41, 49, 51, 58], "overfit": 51, "overridden": 26, "overwrit": 45, "packag": [66, 71], "pad": [15, 36], "page": [49, 67], "paint": 60, "pair": 20, "pairwis": 34, "pampi": 62, "panda": [27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 45, 46, 49, 54, 56, 57, 58, 68], "pandarallel": 44, "pandas_udf": 56, "pandasai": 44, "pandera": [38, 58], "paper": 64, "parallel": [44, 54], "paramet": [4, 6, 26, 38, 58, 65], "parameter": 56, "parametr": [38, 58], "parent": 22, "parquet": [2, 30, 45, 46], "pars": [46, 48, 62], "parse_d": [30, 32], "parsera": 49, "partial": 19, "partit": 45, "pass": [5, 6, 55], "path": 22, "pathlib": 22, "pattern": [13, 53, 62], "pct_chang": 34, "pd": 34, "pdf": [48, 64, 72], "pendulum": 59, "peopl": 49, "people_also_ask": 49, "per": [38, 58], "percentag": 34, "perform": [12, 53, 54, 59, 65], "perfplot": 65, "period": 32, "pick": [38, 58], "pickl": 51, "pigeon": 48, "pint": 62, "pip": [66, 67], "pipe": [28, 62], "pipelin": [47, 51, 68], "pipreq": 66, "pivot": 39, "pivot_t": 39, "plant": 24, "plot": [51, 60], "plot_seri": 59, "plural": 53, "pmdarima": 59, "poetri": 66, "point": [5, 59], "polar": [38, 54, 58], "posit": 41, "possibl": [26, 38, 58], "post": 18, "postgresml": 43, "postgresql": [38, 43, 58], "power": [56, 59], "practic": [6, 18, 56, 63], "pre": 59, "precis": [41, 48], "predict": [51, 59, 69], "pregex": 62, "prepar": [47, 59], "preprocess": [47, 53], "present": 60, "pretti": 60, "prettymap": 60, "prevent": [9, 51], "previou": [28, 32], "principl": 1, "print": [15, 25, 36, 37, 68], "printabl": 72, "prior": 34, "privat": 1, "probabilist": 59, "probablepeopl": 48, "process": [20, 43, 46, 53, 54, 56], "produc": [49, 68], "product": [20, 51], "profil": [57, 68], "program": 68, "programmat": 47, "progress": [38, 44, 58, 68], "project": [52, 66], "prompt": 50, "properti": [32, 38, 58], "prototyp": 51, "public": 49, "pull": 67, "pyarrow": [30, 31, 43, 46], "pydant": [23, 65], "pydash": 24, "pydep": 66, "pyfiglet": 64, "pygwalk": 60, "pyheat": 68, "pyinstal": 66, "pyinstrument": 57, "pyod": 51, "pypdf": 48, "pyserd": 55, "pyspark": 56, "pytest": [38, 58], "python": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 26, 36, 38, 43, 44, 47, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 72], "pytrend": 49, "pytub": 69, "qcut": 34, "quadrat": 52, "qualiti": [45, 65], "quantstat": 59, "queri": [33, 43, 45, 46, 53, 56], "questgen": 53, "question": 53, "quick": 53, "quickli": 48, "r": [45, 59], "rais": 28, "random": [8, 39, 49], "randomli": 8, "rang": 32, "rank": 41, "rapid": 51, "rapidfuzz": 53, "rare": 47, "ravel": 41, "re": [15, 36], "read": [18, 30, 32, 67, 73], "read_csv": 46, "readabl": [1, 5, 6, 13, 15, 29, 36, 51, 57, 60, 62, 68], "reader": 49, "real": [47, 68], "receiv": 69, "recip": [49, 53], "recommend": 51, "reduc": [19, 43, 53], "reduct": 60, "refurb": 65, "refurbish": 65, "region": 51, "regular": [15, 36, 62], "reindex": 32, "rel": 22, "relat": [38, 58], "relationship": 59, "relev": [50, 59], "reliabl": [38, 45, 58], "remov": [14, 41, 65, 66], "removestar": 69, "repeat": [38, 58], "repetit": 19, "replac": [15, 28, 32, 36, 41, 53, 69], "report": [64, 68], "repositori": 67, "represent": 1, "request": 67, "requir": [1, 66], "rerun": 69, "resampl": 32, "result": 12, "resum": [38, 58], "return": [5, 17, 31], "reus": 71, "reusabl": 56, "revers": 4, "review": 65, "rich": [64, 68], "risk": 1, "rmse": 51, "robust": [47, 59], "rocketri": 69, "roll": 32, "row": [28, 29, 32, 33, 34, 35, 39, 41], "ruff": 65, "run": [38, 43, 58, 69, 71], "runtim": [65, 69], "ruptur": 59, "safe": [45, 52, 55, 62], "safer": 56, "safetensor": 52, "sai": 31, "same": [22, 38, 58, 71], "sampl": [8, 39], "sankei": 60, "save": 2, "scalabl": 51, "scale": [51, 59], "scan": [45, 50], "schedul": 69, "scienc": [1, 42, 52], "scientif": 64, "scientist": [54, 72], "scikit": [47, 51, 59], "scrape": 49, "scraper": 49, "script": [6, 64], "seaborn": 60, "search": [49, 53], "second": [7, 67], "secur": 63, "select": [8, 31, 32, 33, 34, 56], "select_dtyp": 31, "selectexpr": 56, "selenium": 69, "semant": 53, "send": 69, "sensit": 63, "separ": [2, 48], "sequenc": 53, "sequencematch": [15, 36], "sequenti": 20, "seri": [28, 32, 33, 34, 39, 47, 51, 56, 59], "serial": 55, "servic": [38, 49, 58], "session": [38, 58], "set": [14, 38, 54, 58], "set_categori": 35, "setter": 1, "setup": [38, 58], "share": [38, 55, 58], "shift": [32, 34], "short": [38, 58], "shorter": 62, "should": [6, 26, 72], "show": [38, 58], "shrink": 57, "shuffl": 56, "side": 6, "sign": [15, 36], "signal": 59, "signific": 60, "silli": 49, "similar": [15, 36, 47, 52], "simpl": [44, 45, 52, 54], "simplifi": [1, 7, 13, 18, 19, 23, 25, 38, 43, 44, 45, 46, 47, 50, 51, 56, 58, 59, 62, 67, 68], "simul": 38, "singl": [5, 56, 66], "singledispatch": 19, "singular": 53, "size": [34, 39], "sketch": 47, "skill": 53, "skillner": 53, "skip": [38, 58], "skipif": [38, 58], "sklearn": [51, 59], "slash": 12, "slice": [6, 53], "slide": 59, "slot": 1, "smart": [31, 52, 68], "smart_open": 62, "smooth": 59, "snippet": 65, "snoop": 68, "snorkel": 47, "snscrape": 49, "social": [49, 53], "solut": [45, 53, 54], "solv": [25, 47], "sort": [7, 35, 62, 65], "sound": 69, "sourc": 49, "space": [2, 41, 59], "spacy_streamlit": 53, "spark": [43, 44, 56, 59], "speadsheet": 52, "special": 25, "specif": [32, 35, 38, 41, 58, 69], "specifi": [26, 29, 30], "speed": [2, 45, 54, 57, 68], "split": [15, 24, 28, 36, 47], "sql": [43, 44, 45, 46, 52, 56], "sqlfluff": 43, "sqlglot": 43, "sqlite": 43, "sqlitedict": 43, "sqlmodel": 43, "squar": 51, "squarifi": 60, "squeez": 41, "stack": 39, "standard": [53, 56], "star": 67, "starmap": 20, "start": [3, 69], "statement": [6, 13, 43], "static": [1, 59, 65, 69], "stationari": 59, "statist": [49, 53, 60], "statsforecast": 59, "step": [38, 58], "stock": 59, "stop": [4, 6, 38, 58, 68], "storag": [43, 45, 46, 62], "store": [52, 63], "stori": 60, "strategi": 59, "stratifi": 47, "stream": [20, 54], "streamlin": 59, "strict": 9, "string": [1, 6, 7, 9, 15, 28, 31, 36, 43, 48, 53, 59, 62], "strip": 64, "structur": [13, 17, 18, 48, 50, 56], "style": [24, 37, 43, 60], "sub": [15, 36], "subset": [14, 31, 33], "substitut": 25, "substr": [15, 36], "suffix": 29, "sugar": [38, 58], "suit": [38, 58], "sum": 34, "sumi": 53, "summar": [53, 67], "supercharg": 51, "supertre": 60, "support": 47, "surpris": [6, 51], "sweetviz": 52, "swifter": 57, "symbol": 25, "sympi": 25, "syntax": [54, 59], "synthet": 49, "system": 51, "t": [6, 63], "tabgan": 49, "tabl": [30, 39, 45, 47, 56, 64], "tabul": 39, "tabular": [47, 49], "tabularpanda": 47, "take": [34, 41], "task": [2, 6], "templat": [43, 64], "tempo": 56, "temporari": [38, 56, 58], "tensor": 52, "termin": 67, "test": [38, 41, 49, 53, 56, 58], "text": [37, 48, 51, 53, 59, 60, 64], "textaci": 53, "textblob": 53, "texthero": 53, "textstat": 53, "tfcausalimpact": 59, "than": [6, 20], "theme": 53, "theoret": 48, "thi": [72, 73], "three": 51, "through": 20, "time": [2, 24, 32, 38, 47, 49, 51, 56, 57, 58, 59, 68, 69], "timedelta": 3, "timegpt": 59, "timelin": 68, "timeseriessplit": 47, "timestamp": 32, "tmp_path": [38, 58], "to_dict": 34, "to_markdown": 37, "togeth": 53, "token": 60, "tool": [42, 44, 52, 53, 57, 59, 61, 63, 64, 66, 68, 72], "top2vec": 53, "topic": [10, 53], "tqdm": 44, "trace": 59, "traceback": [13, 68], "trade": 59, "train": [38, 47, 58, 59], "transform": [28, 33, 39, 47, 54, 56, 62], "tree": [60, 64], "treemap": 60, "trend": 49, "trick": 72, "trigonometr": 25, "true": [7, 9, 18], "trust": 55, "try": 6, "tsfresh": 59, "tsmoothi": 59, "tupl": 7, "turn": [9, 31, 34, 39, 41], "twice": [38, 58], "two": [4, 9, 18, 22, 29, 38, 41, 51, 58, 62, 64, 66, 68], "txt": 66, "type": [1, 6, 13, 19, 26, 31, 65, 69], "typehint": 26, "typer": 64, "typevar": 26, "udf": 56, "udtf": 56, "ultim": 59, "umap": 60, "underfit": 51, "underscor": [6, 12], "understand": [47, 59], "unevenli": 59, "union": [4, 13, 14, 26], "uniqu": 64, "unit": [17, 38, 56, 58, 62], "unittest": [38, 58], "unleash": 59, "unnam": 30, "unpack": 11, "unpivot": 39, "unstag": [38, 58], "unstructur": 48, "untrust": 55, "unus": 66, "unyt": 62, "unzip": 9, "up": [41, 54, 57], "updat": [4, 29, 45, 56], "upsert": 45, "url": 48, "us": [1, 3, 4, 5, 6, 12, 15, 18, 20, 23, 24, 26, 28, 29, 30, 31, 32, 33, 36, 38, 39, 41, 43, 44, 46, 47, 48, 49, 51, 56, 58, 59, 60, 62, 63, 67, 68, 69, 71], "usag": [1, 31, 57, 65], "user": 49, "util": 16, "v": [5, 6, 18, 38, 45, 51, 54, 56, 58, 67], "valid": [23, 38, 47, 51, 58, 59], "valu": [4, 6, 8, 11, 17, 20, 24, 26, 28, 32, 33, 34, 37, 39, 41], "variabl": [1, 12, 31, 48], "variou": 49, "vector": [28, 56], "venn": 60, "verifi": [38, 58], "versa": 69, "version": [45, 52], "vice": 69, "video": 69, "view": [56, 64, 68], "virtual": 66, "virtualenv": 66, "visual": [51, 53, 59, 60, 64, 66, 68], "vizro": 60, "vultur": 65, "wai": [1, 20, 45, 52, 56, 60], "walru": 13, "wat": 68, "watchfil": 69, "watermark": 71, "web": [49, 53], "websit": [30, 69], "weight": 8, "wget": 67, "what": [25, 72], "when": [5, 6, 11, 17, 29, 30, 32, 38, 51, 58, 69], "where": [41, 69], "whereami": 69, "whether": 12, "while": 6, "why": 6, "whylog": 52, "widget": 60, "window": 59, "withcolumn": 56, "within": [32, 34, 71], "without": [1, 49, 62], "word": [15, 36, 53, 57], "wordfreq": 53, "work": [24, 32, 38, 43, 56, 58, 59], "workalendar": 59, "workflow": 69, "world": 47, "wrapper": 49, "write": [4, 6, 13, 26, 30, 38, 43, 47, 48, 56, 58, 62, 69], "x": [13, 26], "xfail": [38, 58], "y": [13, 26], "yarl": 48, "year": 32, "yellowbrick": 51, "you": [69, 72], "your": [1, 6, 15, 17, 18, 26, 28, 36, 37, 38, 39, 43, 44, 45, 48, 51, 52, 53, 57, 58, 60, 65, 67, 68, 69, 71], "youtub": 69, "zero": [15, 36], "zip": [9, 20], "zip_longest": 20}})