Search.setIndex({"alltitles": {"3 Powerful Ways to Create PySpark DataFrames": [[52, "powerful-ways-to-create-pyspark-dataframes"]], "A Function Should Have Fewer Than Four Arguments": [[6, "a-function-should-have-fewer-than-four-arguments"]], "A Function Should Only Do One Task": [[6, "a-function-should-only-do-one-task"]], "About The Author": [[68, "about-the-author"]], "Abstract Classes: Declare Methods without Implementation": [[1, "abstract-classes-declare-methods-without-implementation"]], "Accelerate String Matching with RapidFuzz": [[49, "accelerate-string-matching-with-rapidfuzz"]], "Access a Group of Rows with loc and iloc": [[30, "access-a-group-of-rows-with-loc-and-iloc"]], "Add Progress Bar to Your List Comprehension": [[64, "add-progress-bar-to-your-list-comprehension"]], "Add Statistical Significance Annotations on Seaborn Plots": [[56, "add-statistical-significance-annotations-on-seaborn-plots"]], "Align Pandas Objects for Effective Data Manipulation": [[35, "align-pandas-objects-for-effective-data-manipulation"]], "Alternative Approach": [[58, null]], "Analyze the Memory Usage of Your Python Code": [[61, "analyze-the-memory-usage-of-your-python-code"]], "Apply Multiple Functions to a DataFrame with Pipe": [[24, "apply-multiple-functions-to-a-dataframe-with-pipe"]], "Apply a Function to a Column of a DataFrame": [[24, "apply-a-function-to-a-column-of-a-dataframe"]], "Apply a Function to a DataFrame Elementwise": [[24, "apply-a-function-to-a-dataframe-elementwise"]], "Assign IDs to Test Cases": [[34, "assign-ids-to-test-cases"], [54, "assign-ids-to-test-cases"]], "Assign Name to a Pandas Aggregation": [[35, "assign-name-to-a-pandas-aggregation"]], "Assign Names to Values": [[6, "assign-names-to-values"]], "Assign Values to Multiple New Columns": [[24, "assign-values-to-multiple-new-columns"]], "Astral: Organize Your Github Stars with Ease": [[63, "astral-organize-your-github-stars-with-ease"]], "AutoGluon: Fast and Accurate ML in 3 Lines of Code": [[47, "autogluon-fast-and-accurate-ml-in-3-lines-of-code"]], "Automate CSV Parsing with DuckDB\u2019s read_csv": [[42, "automate-csv-parsing-with-duckdb-s-read-csv"]], "Automate Time Series Feature Engineering with tsfresh": [[55, "automate-time-series-feature-engineering-with-tsfresh"]], "Automatically Adjust Annotations in Matplotlib for Readability": [[56, "automatically-adjust-annotations-in-matplotlib-for-readability"]], "Autoscraper: Automate Web Scraping in Python": [[45, "autoscraper-automate-web-scraping-in-python"]], "Avoid Duplication in Your Code": [[6, "avoid-duplication-in-your-code"]], "Avoid Side Effects When Using List in a Function": [[6, "avoid-side-effects-when-using-list-in-a-function"]], "Avoid Using Flags as a Function\u2019s Parameters": [[6, "avoid-using-flags-as-a-function-s-parameters"]], "Avoiding Data Leakage in Time Series Data": [[43, "avoiding-data-leakage-in-time-series-data"]], "Avoiding Surprises with Mutable Default Arguments in Python": [[6, "avoiding-surprises-with-mutable-default-arguments-in-python"]], "BERTopic: Harnessing BERT for Interpretable Topic Modeling": [[49, "bertopic-harnessing-bert-for-interpretable-topic-modeling"]], "Backtesting: Assess Trading Strategy Performance Effortlessly in Python": [[55, "backtesting-assess-trading-strategy-performance-effortlessly-in-python"]], "Basic Operations": [[21, "basic-operations"]], "Beartype: Fast, Efficient Runtime Type Checking for Python": [[61, "beartype-fast-efficient-runtime-type-checking-for-python"]], "BertTopic: Enhance Topic Models with Expert-Defined Themes": [[49, "berttopic-enhance-topic-models-with-expert-defined-themes"]], "BertViz: Visualize NLP Model Attention Patterns": [[49, "bertviz-visualize-nlp-model-attention-patterns"]], "Best Practices for PySpark DataFrame Comparison Testing": [[52, "best-practices-for-pyspark-dataframe-comparison-testing"]], "Better Outputs": [[60, null]], "Better Pandas": [[40, null]], "Beyond Keywords: Building a Semantic Recipe Search Engine": [[49, "beyond-keywords-building-a-semantic-recipe-search-engine"]], "Beyond Parquet: Reliable Data Storage with Delta Lake": [[41, "beyond-parquet-reliable-data-storage-with-delta-lake"]], "Beyond Point Estimates: Leverage Prediction Intervals for Robust Forecasting": [[55, "beyond-point-estimates-leverage-prediction-intervals-for-robust-forecasting"]], "Bloxs: Create an Attractive Display in Your Jupyter Notebook": [[56, "bloxs-create-an-attractive-display-in-your-jupyter-notebook"]], "Box: Using Dot Notation to Access Keys in a Python Dictionary": [[58, "box-using-dot-notation-to-access-keys-in-a-python-dictionary"]], "Calculate the Difference Between Rows of a pandas DataFrame": [[30, "calculate-the-difference-between-rows-of-a-pandas-dataframe"]], "Camelot: PDF Table Extraction for Humans": [[60, "camelot-pdf-table-extraction-for-humans"]], "ChainMap: Combine Multiple Dictionaries into One Unit": [[13, "chainmap-combine-multiple-dictionaries-into-one-unit"]], "Chaining": [[20, "chaining"]], "Change Values": [[24, null]], "Check if Two File Paths Are the Same": [[18, "check-if-two-file-paths-are-the-same"]], "Check if Two NumPy Arrays Are Equal": [[37, "check-if-two-numpy-arrays-are-equal"]], "Checklist: Create Data to Test Your NLP Model": [[49, "checklist-create-data-to-test-your-nlp-model"]], "Choose a Descriptive Name Over a Short One When Naming Your Function": [[34, "choose-a-descriptive-name-over-a-short-one-when-naming-your-function"], [54, "choose-a-descriptive-name-over-a-short-one-when-naming-your-function"]], "Chroma: The Lightning-Fast Solution to Text Embeddings and Querying": [[49, "chroma-the-lightning-fast-solution-to-text-embeddings-and-querying"]], "Chronos: Unleashing Pre-trained Language Models for Time Series Forecasting": [[55, "chronos-unleashing-pre-trained-language-models-for-time-series-forecasting"]], "Classes": [[1, null]], "Clean Iterables Unpacking in Python": [[7, "clean-iterables-unpacking-in-python"]], "Code Review": [[61, null]], "Code Speed": [[2, null]], "Collections": [[13, null]], "Color the Background of a pandas DataFrame in a Gradient Style": [[33, "color-the-background-of-a-pandas-dataframe-in-a-gradient-style"]], "Combine Multiple DataFrames": [[25, null]], "Combine Reduce and Operator Methods": [[15, "combine-reduce-and-operator-methods"]], "Combine SQL and Python Efficiently with Ibis": [[40, "combine-sql-and-python-efficiently-with-ibis"]], "Compare Between Two Data Classes": [[14, "compare-between-two-data-classes"]], "Compare Dependencies of Two Requirements Files": [[62, "compare-dependencies-of-two-requirements-files"]], "Compare The Execution Time Between 2 Functions": [[2, "compare-the-execution-time-between-2-functions"]], "Comparing Python Command Line Interface Tools: Argparse, Click, and Typer": [[60, "comparing-python-command-line-interface-tools-argparse-click-and-typer"]], "Concurrently Execute Tasks on Separate CPUs": [[2, "concurrently-execute-tasks-on-separate-cpus"]], "Condense an If-Else Statement into One Line": [[6, "condense-an-if-else-statement-into-one-line"]], "Confirm Whether a Variable Is a Number": [[8, "confirm-whether-a-variable-is-a-number"]], "Control the Number of Printed Decimals with f-Strings": [[11, "control-the-number-of-printed-decimals-with-f-strings"], [32, "control-the-number-of-printed-decimals-with-f-strings"]], "Convert MySQL Queries to Spark SQL with SQLGlot": [[39, "convert-mysql-queries-to-spark-sql-with-sqlglot"]], "Convert Names into a Generalized Format": [[49, "convert-names-into-a-generalized-format"]], "Cool Tools": [[57, null]], "Copy on Write Mode in pandas 2.0": [[26, "copy-on-write-mode-in-pandas-2-0"]], "Create Dynamic SQL Statements with Python string Template": [[39, "create-dynamic-sql-statements-with-python-string-template"]], "Create Sound Notifications in Python in One Line of Code": [[65, "create-sound-notifications-in-python-in-one-line-of-code"]], "Create a DataFrame": [[26, null]], "Create a New Directory and File": [[18, "create-a-new-directory-and-file"]], "Create a Readable Machine Learning Pipeline in One Line of Code": [[47, "create-a-readable-machine-learning-pipeline-in-one-line-of-code"]], "Customized Methods": [[20, "customized-methods"]], "DVC: A Data Version Control Tool for Your Data Science Projects": [[48, "dvc-a-data-version-control-tool-for-your-data-science-projects"]], "Data Classes": [[14, null]], "Data Classes vs Normal Classes": [[14, "data-classes-vs-normal-classes"]], "Data Science Tools": [[38, null]], "DataFrame rolling: Find The Average of The Previous n Datapoints Using pandas": [[28, "dataframe-rolling-find-the-average-of-the-previous-n-datapoints-using-pandas"]], "DataFrame.copy(): Make a Copy of a DataFrame": [[26, "dataframe-copy-make-a-copy-of-a-dataframe"]], "DataFrame.cumsum: Get Cumulative Sum Over Each Column": [[30, "dataframe-cumsum-get-cumulative-sum-over-each-column"]], "DataFrame.diff and DataFrame.shift: Take the Difference Between Rows Within a Column in pandas": [[30, "dataframe-diff-and-dataframe-shift-take-the-difference-between-rows-within-a-column-in-pandas"]], "DataFrame.groupby.sample: Get a Random Sample of Items from Each Category in a Column": [[35, "dataframe-groupby-sample-get-a-random-sample-of-items-from-each-category-in-a-column"]], "DataFrame.insert: Insert a Column Into a DataFrame at a Specified Location": [[25, "dataframe-insert-insert-a-column-into-a-dataframe-at-a-specified-location"]], "Datacommons: Get Statistics about a Location in One Line of Code": [[45, "datacommons-get-statistics-about-a-location-in-one-line-of-code"]], "Datetime": [[3, null]], "Debug Your Python Code with an Equal Sign in an f-String": [[11, "debug-your-python-code-with-an-equal-sign-in-an-f-string"], [32, "debug-your-python-code-with-an-equal-sign-in-an-f-string"]], "Decomposing High-Dimensional Data into Two or Three Dimensions": [[47, "decomposing-high-dimensional-data-into-two-or-three-dimensions"]], "Decorator in Python": [[5, "decorator-in-python"]], "DeepDiff Find Deep Differences of Python Objects": [[34, "deepdiff-find-deep-differences-of-python-objects"], [54, "deepdiff-find-deep-differences-of-python-objects"]], "DeepEval: Unit Testing for Your LLM Model": [[34, "deepeval-unit-testing-for-your-llm-model"], [54, "deepeval-unit-testing-for-your-llm-model"]], "Deepchecks: Check Category Mismatch Between Train and Test Set": [[34, "deepchecks-check-category-mismatch-between-train-and-test-set"], [54, "deepchecks-check-category-mismatch-between-train-and-test-set"]], "Defaultdict: Create a Dictionary with Values that are List": [[13, "defaultdict-create-a-dictionary-with-values-that-are-list"]], "Defaultdict: Return a Default Value When a Key is Not Available": [[13, "defaultdict-return-a-default-value-when-a-key-is-not-available"]], "Delta Lake": [[41, null]], "Derivatives, Integrals, and Limit": [[21, "derivatives-integrals-and-limit"]], "Detect Issues in AI Models with Giskard Scans": [[46, "detect-issues-in-ai-models-with-giskard-scans"]], "Dictdiffer: Find the Differences Between Two Dictionaries": [[58, "dictdiffer-find-the-differences-between-two-dictionaries"]], "Dictionary": [[4, null]], "Difference Between NumPy\u2019s All and Any Methods": [[37, "difference-between-numpys-all-and-any-methods"]], "Difference between list append and list extend": [[7, "difference-between-list-append-and-list-extend"]], "Distinguishing Instance-Level and Class Methods": [[1, "distinguishing-instance-level-and-class-methods"]], "Distributed Data Joining with Shuffle Joins in PySpark": [[52, "distributed-data-joining-with-shuffle-joins-in-pyspark"]], "Distributed Machine Learning with MLlib": [[47, "distributed-machine-learning-with-mllib"]], "Divide a Large pandas DataFrame into Chunks": [[26, "divide-a-large-pandas-dataframe-into-chunks"]], "Don\u2019t Hard-Code. Use Hydra Instead": [[59, "dont-hard-code-use-hydra-instead"]], "Don\u2019t Use Multiple OR Operators. Use in Instead": [[6, "don-t-use-multiple-or-operators-use-in-instead"]], "Double dict.get: Get Values in a Nested Dictionary with Missing Keys": [[4, "double-dict-get-get-values-in-a-nested-dictionary-with-missing-keys"]], "Double numpy.argsort: Get Rank of Values in an Array": [[37, "double-numpy-argsort-get-rank-of-values-in-an-array"]], "Download a File on GitHub Using wget": [[63, "download-a-file-on-github-using-wget"]], "Drag-and-Drop Visualizations with PyGWalker": [[56, "drag-and-drop-visualizations-with-pygwalker"]], "Drop Correlated Features": [[43, "drop-correlated-features"]], "DuckDB": [[42, null]], "DuckDB: Query Pandas DataFrames Faster with Columnar Storage": [[42, "duckdb-query-pandas-dataframes-faster-with-columnar-storage"]], "Dynamic Report Generation with Jinja Templates": [[60, "dynamic-report-generation-with-jinja-templates"]], "Efficient Data Appending in Parquet Files: Delta Lake vs. Pandas": [[41, "efficient-data-appending-in-parquet-files-delta-lake-vs-pandas"]], "Efficient Data Updates and Scanning with Delta Lake": [[41, "efficient-data-updates-and-scanning-with-delta-lake"]], "Efficient Feature Transformation with make_column_transformer in scikit-learn": [[43, "efficient-feature-transformation-with-make-column-transformer-in-scikit-learn"]], "Efficient Keyword Extraction and Replacement with FlashText": [[49, "efficient-keyword-extraction-and-replacement-with-flashtext"]], "Efficient Python Tricks and Tools for Data Scientists": [[68, null]], "Efficient SQL Operations with DuckDB on Pandas DataFrames": [[42, "efficient-sql-operations-with-duckdb-on-pandas-dataframes"]], "Efficient String Data Handling in pandas 2.0 with PyArrow Arrays": [[27, "efficient-string-data-handling-in-pandas-2-0-with-pyarrow-arrays"]], "Efficient Testing of Python Class with setUp Method": [[34, "efficient-testing-of-python-class-with-setup-method"], [54, "efficient-testing-of-python-class-with-setup-method"]], "Efficiently Checking Object Types in Python": [[6, "efficiently-checking-object-types-in-python"]], "Efficiently Generate Falsified Examples for Unit Tests with Pandera and Hypothesis": [[34, "efficiently-generate-falsified-examples-for-unit-tests-with-pandera-and-hypothesis"], [54, "efficiently-generate-falsified-examples-for-unit-tests-with-pandera-and-hypothesis"]], "Efficiently Handle Large Datasets with DuckDB and PyArrow": [[42, "efficiently-handle-large-datasets-with-duckdb-and-pyarrow"]], "Efficiently Join Large Datasets with Polars": [[50, "efficiently-join-large-datasets-with-polars"]], "Efficiently Resume Work After Breaks with Failing Tests": [[34, "efficiently-resume-work-after-breaks-with-failing-tests"], [54, "efficiently-resume-work-after-breaks-with-failing-tests"]], "Embrace the Open-Closed Principle to Design Extensible Classes": [[1, "embrace-the-open-closed-principle-to-design-extensible-classes"]], "Embracing Duck Typing for Cleaner, More Adaptable Data Science Code": [[1, "embracing-duck-typing-for-cleaner-more-adaptable-data-science-code"]], "Encode Categorical Data Using Frequency": [[43, "encode-categorical-data-using-frequency"]], "Encode Categorical Values in a Pandas DataFrame": [[24, "encode-categorical-values-in-a-pandas-dataframe"]], "Encode Rare Labels with Feature-engine": [[43, "encode-rare-labels-with-feature-engine"]], "Enforce Data Quality with Delta Lake Constraints": [[41, "enforce-data-quality-with-delta-lake-constraints"]], "Enhance Code Modularity and Reusability with Temporary Views in PySpark": [[52, "enhance-code-modularity-and-reusability-with-temporary-views-in-pyspark"]], "Enhance Code Readability with Python Dataclasses and Match Statements": [[9, "enhance-code-readability-with-python-dataclasses-and-match-statements"]], "Enhance Code Readability with Single Point of Return": [[5, "enhance-code-readability-with-single-point-of-return"]], "Enhance Number Readability with f-Strings and Comma Formatting": [[11, "enhance-number-readability-with-f-strings-and-comma-formatting"], [32, "enhance-number-readability-with-f-strings-and-comma-formatting"]], "Enhancing Data Handling with scikit-learn\u2019s DataFrame Support": [[43, "enhancing-data-handling-with-scikit-learn-s-dataframe-support"]], "Enhancing Readability in DataFrame Merging With Custom Suffixes": [[25, "enhancing-readability-in-dataframe-merging-with-custom-suffixes"]], "Ensure Data Integrity with Getters and Setters in Python": [[1, "ensure-data-integrity-with-getters-and-setters-in-python"]], "Enumerate: Get Counter and Value While Looping": [[6, "enumerate-get-counter-and-value-while-looping"]], "Environment Management": [[62, null]], "Equations": [[21, "equations"]], "Estimate Prediction Intervals in Scikit-Learn Models with MAPIE": [[47, "estimate-prediction-intervals-in-scikit-learn-models-with-mapie"]], "Evidently: Detect and Visualize Data Drift": [[56, "evidently-detect-and-visualize-data-drift"]], "Execute a Fixture Only Once per Session": [[34, "execute-a-fixture-only-once-per-session"], [54, "execute-a-fixture-only-once-per-session"]], "Execute a Function n Times": [[20, "execute-a-function-n-times"]], "Expand, Factor, and Simplify": [[21, "expand-factor-and-simplify"]], "Expanding English Contractions in Text": [[49, "expanding-english-contractions-in-text"]], "Extended Iterable Unpacking: Ignore Multiple Values when Unpacking a Python Iterable": [[7, "extended-iterable-unpacking-ignore-multiple-values-when-unpacking-a-python-iterable"]], "Extract Dates from Text with Datefinder": [[55, "extract-dates-from-text-with-datefinder"]], "Extract PDF Text Precisely with PyPDF": [[44, "extract-pdf-text-precisely-with-pypdf"]], "Extract holiday from date column": [[55, "extract-holiday-from-date-column"]], "Fastai\u2019s add_datepart: Add Relevant DateTime Features in One Line of Code": [[55, "fastai-s-add-datepart-add-relevant-datetime-features-in-one-line-of-code"]], "Fastai\u2019s df_shrink: Shrink DataFrame\u2019s Memory Usage in One Line of Code": [[53, "fastai-s-df-shrink-shrink-dataframe-s-memory-usage-in-one-line-of-code"]], "Faster Data Analysis with Polars: A Guide to Lazy Execution": [[50, "faster-data-analysis-with-polars-a-guide-to-lazy-execution"]], "Feature Engineer": [[43, null]], "Feature Extraction": [[44, null]], "Filter Rows or Columns": [[29, null]], "Filter a pandas DataFrame Based on Index\u2019s Name": [[29, "filter-a-pandas-dataframe-based-on-index-s-name"]], "Find Item Index Using a Function": [[20, "find-item-index-using-a-function"]], "Find Objects With Matching Style": [[20, "find-objects-with-matching-style"]], "Fine-Grained Traceback in Python 3.11": [[9, "fine-grained-traceback-in-python-3-11"]], "Fix Unnamed:0 When Reading a CSV in pandas": [[26, "fix-unnamed-0-when-reading-a-csv-in-pandas"]], "Flicking: Safe Model Deserialization in Python": [[58, "flicking-safe-model-deserialization-in-python"]], "Fluke: The Easiest Way to Move Data Around": [[48, "fluke-the-easiest-way-to-move-data-around"]], "Format Dates in Python f-Strings": [[11, "format-dates-in-python-f-strings"], [32, "format-dates-in-python-f-strings"]], "Format the Text Display Value of Cells": [[33, "format-the-text-display-value-of-cells"]], "Formulaic: Write Clear Feature Engineering Code": [[44, "formulaic-write-clear-feature-engineering-code"]], "Forward Fill in pandas: Use the Previous Value to Fill the Current Missing Value": [[24, "forward-fill-in-pandas-use-the-previous-value-to-fill-the-current-missing-value"]], "FreezeGun: Freezing Time for Reliable Python Testing": [[34, "freezegun-freezing-time-for-reliable-python-testing"], [54, "freezegun-freezing-time-for-reliable-python-testing"]], "From Complex SQL to Simple Merges: Delta Lake\u2019s Upsert Solution": [[41, "from-complex-sql-to-simple-merges-delta-lake-s-upsert-solution"]], "From Python to Paper: Visualizing Calculations with Handcalcs": [[60, "from-python-to-paper-visualizing-calculations-with-handcalcs"]], "From Selenium to Helium: Writing Cleaner Browser Automation Code": [[65, "from-selenium-to-helium-writing-cleaner-browser-automation-code"]], "FugueSQL: Use SQL to Work with Pandas, Spark, and Dask DataFrames": [[39, "fuguesql-use-sql-to-work-with-pandas-spark-and-dask-dataframes"]], "Function": [[5, null]], "FunctionTransformer: Build Robust Preprocessing Pipelines with Custom Transformations": [[43, "functiontransformer-build-robust-preprocessing-pipelines-with-custom-transformations"]], "Functools": [[15, null]], "GLiNER: The Lightweight Alternative to LLMs for Custom NER": [[49, "gliner-the-lightweight-alternative-to-llms-for-custom-ner"]], "Galatic: Clean and Analyze Massive Text Datasets": [[49, "galatic-clean-and-analyze-massive-text-datasets"]], "Generate a Tree View with rich": [[60, "generate-a-tree-view-with-rich"]], "Generating Synthetic Tabular Data with TabGAN": [[45, "generating-synthetic-tabular-data-with-tabgan"]], "Generative Pre-trained Forecasting with TimeGPT": [[55, "generative-pre-trained-forecasting-with-timegpt"]], "Geopy: Extract Location Based on Python String": [[44, "geopy-extract-location-based-on-python-string"]], "Get Access to Files from Home Directory": [[18, "get-access-to-files-from-home-directory"]], "Get Certain Values From a DataFrame": [[30, null]], "Get Count and Percentage of a Value in a Column": [[30, "get-count-and-percentage-of-a-value-in-a-column"]], "Get Data": [[45, null]], "Get Google News Using Python": [[45, "get-google-news-using-python"]], "Get Multiples of a Number Using Modulus": [[8, "get-multiples-of-a-number-using-modulus"]], "Get Nested Dictionary\u2019s Attribute": [[20, "get-nested-dictionarys-attribute"]], "Get Nested Object Value": [[20, "get-nested-object-value"]], "Get Rows within a Year Range": [[28, "get-rows-within-a-year-range"]], "Get the Index of the Max Value in a NumPy Array": [[37, "get-the-index-of-the-max-value-in-a-numpy-array"]], "Get the N Largest Values for Each Category in a DataFrame": [[35, "get-the-n-largest-values-for-each-category-in-a-dataframe"]], "Get the Parent of the Current Path with pathlib": [[18, "get-the-parent-of-the-current-path-with-pathlib"]], "Get the Path Relative to Another Path": [[18, "get-the-path-relative-to-another-path"]], "Get the Sum of All Columns in a pandas DataFrame": [[30, "get-the-sum-of-all-columns-in-a-pandas-dataframe"]], "Git and GitHub": [[63, null]], "GitHub CLI: Brings GitHub to Your Terminal": [[63, "github-cli-brings-github-to-your-terminal"]], "GluonTS: Probabilistic Time Series Modeling in Python": [[55, "gluonts-probabilistic-time-series-modeling-in-python"]], "Good Python Practices": [[6, null]], "Graphviz: Create a Flowchart to Capture Your Ideas in Python": [[56, "graphviz-create-a-flowchart-to-capture-your-ideas-in-python"]], "Great Tables: Create Scientific-Looking Tables in Python": [[60, "great-tables-create-scientific-looking-tables-in-python"]], "Group DataFrame\u2019s Rows into a List Using groupby": [[35, "group-dataframe-s-rows-into-a-list-using-groupby"]], "Handling Static and Dynamic Features in Time Series Forecasting with MLForecast": [[55, "handling-static-and-dynamic-features-in-time-series-forecasting-with-mlforecast"]], "Harness Polars and Delta Lake for Blazing Fast Performance": [[50, "harness-polars-and-delta-lake-for-blazing-fast-performance"]], "HiPlot - High Dimensional Interactive Plotting": [[56, "hiplot-high-dimensional-interactive-plotting"]], "Hierarchical Forecasting in Python": [[55, "hierarchical-forecasting-in-python"]], "Highlight Your pandas DataFrame for Easier Analysis": [[33, "highlight-your-pandas-dataframe-for-easier-analysis"]], "How to Build a Recommendation Engine Using Surprise in Python": [[47, "how-to-build-a-recommendation-engine-using-surprise-in-python"]], "How to Handle Misspellings in Real-World Datasets": [[43, "how-to-handle-misspellings-in-real-world-datasets"]], "How to Pass an Arbitrary Number of Arguments to a Python Function": [[5, "how-to-pass-an-arbitrary-number-of-arguments-to-a-python-function"]], "How to Read This Book": [[69, null]], "How to Strip Outputs and Execute Interactive Code in a Python Script": [[60, "how-to-strip-outputs-and-execute-interactive-code-in-a-python-script"]], "Hyperfine: Compare the Speed of Two Commands": [[64, "hyperfine-compare-the-speed-of-two-commands"]], "Icecream: Never use print() to debug again": [[64, "icecream-never-use-print-to-debug-again"]], "Improve Code Readability with Enums": [[1, "improve-code-readability-with-enums"]], "Include All Rows When Merging Two DataFrames": [[25, "include-all-rows-when-merging-two-dataframes"]], "Inheritance in Python": [[1, "inheritance-in-python"]], "Instance Comparison in Python Classes": [[1, "instance-comparison-in-python-classes"]], "Iterable as a Key of a Dictionary": [[4, "iterable-as-a-key-of-a-dictionary"]], "Itertools": [[16, null]], "ItsDangerous: Safely Pass Trusted Data to Untrusted Environments and Back": [[51, "itsdangerous-safely-pass-trusted-data-to-untrusted-environments-and-back"]], "Jupyter Notebook": [[66, null], [67, null]], "Key Parameter in Max(): Find the Key with the Largest Value": [[4, "key-parameter-in-max-find-the-key-with-the-largest-value"]], "Keyword-Only Arguments in Python": [[5, "keyword-only-arguments-in-python"]], "Lambda vs Named Functions: When to Use Each": [[5, "lambda-vs-named-functions-when-to-use-each"]], "Large Language Model (LLM)": [[46, null]], "Leverage PyArrow for Efficient Parquet Data Filtering": [[26, "leverage-pyarrow-for-efficient-parquet-data-filtering"]], "Leverage Spark UDFs for Reusable Complex Logic in SQL Queries": [[52, "leverage-spark-udfs-for-reusable-complex-logic-in-sql-queries"]], "List": [[7, null]], "Logging and Debugging": [[64, null]], "Logging in Pandas Pipelines": [[64, "logging-in-pandas-pipelines"]], "LovelyPlots: Create Nice Matplotlib Figures for Presentations": [[56, "lovelyplots-create-nice-matplotlib-figures-for-presentations"]], "Lux: A Python API for Intelligent Visual Discovery": [[56, "lux-a-python-api-for-intelligent-visual-discovery"]], "MLEM: Capture Your Machine Learning Model\u2019s Metadata": [[47, "mlem-capture-your-machine-learning-model-s-metadata"]], "Machine Learning": [[47, null]], "Magika: Detect File Content Types with Deep Learning": [[65, "magika-detect-file-content-types-with-deep-learning"]], "Maintain the Accuracy of Docstring Examples with Doctest": [[34, "maintain-the-accuracy-of-docstring-examples-with-doctest"], [54, "maintain-the-accuracy-of-docstring-examples-with-doctest"]], "Makefile: Organize Your Command Line": [[65, "makefile-organize-your-command-line"]], "Manage Data": [[48, null]], "ManimML: Create Animations of Common ML Concepts in Python": [[60, "manimml-create-animations-of-common-ml-concepts-in-python"]], "Manipulate a DataFrame Using Data Types": [[27, null]], "Mastering Set Operations in Python: Union and Intersection": [[10, "mastering-set-operations-in-python-union-and-intersection"]], "Maximize Accuracy and Relevance with External Data and LLMs": [[46, "maximize-accuracy-and-relevance-with-external-data-and-llms"]], "Maya: Convert the string to datetime automatically": [[55, "maya-convert-the-string-to-datetime-automatically"]], "Merge Two Dictionaries Using the Union Operator in Python 3.9": [[4, "merge-two-dictionaries-using-the-union-operator-in-python-3-9"]], "Mermaid: Create Class Diagrams for Your Python Classes Using Text and Code": [[56, "mermaid-create-class-diagrams-for-your-python-classes-using-text-and-code"]], "Mermaid: Create Flow Chart Using Code": [[56, "mermaid-create-flow-chart-using-code"]], "Minimize Data Risks with Python Private Variables": [[1, "minimize-data-risks-with-python-private-variables"]], "Mirascope: Extract Structured Data Extraction From LLM Outputs": [[46, "mirascope-extract-structured-data-extraction-from-llm-outputs"]], "Mlxtend: Plot Decision Regions of Your ML Classifiers": [[47, "mlxtend-plot-decision-regions-of-your-ml-classifiers"]], "Model Logging Made Easy: MLflow vs. Pickle": [[47, "model-logging-made-easy-mlflow-vs-pickle"]], "MonkeyType: Automatically Generate Static Type Annotations Based on Runtime Types": [[65, "monkeytype-automatically-generate-static-type-annotations-based-on-runtime-types"]], "Motivation": [[21, "motivation"]], "Multiline Strings": [[11, "multiline-strings"], [32, "multiline-strings"]], "Multiple CSV Files Processing with DuckDB": [[42, "multiple-csv-files-processing-with-duckdb"]], "Name Complex Conditions to Make Your Code More Readable": [[6, "name-complex-conditions-to-make-your-code-more-readable"]], "Natural Language Processing": [[49, null]], "NeuralForecast: Streamline Neural Forecasting with Familiar Sklearn Syntax": [[55, "neuralforecast-streamline-neural-forecasting-with-familiar-sklearn-syntax"]], "Never Catch All Exceptions": [[6, "never-catch-all-exceptions"]], "New Features in Python": [[9, null]], "Num2Words: Convert Number to Words": [[49, "num2words-convert-number-to-words"]], "NumPy": [[36, null], [37, null]], "NumPy Comparison Operators": [[37, "numpy-comparison-operators"]], "NumPy.linspace: Get Evenly Spaced Numbers Over a Specific Interval": [[37, "numpy-linspace-get-evenly-spaced-numbers-over-a-specific-interval"]], "NumPy.take: Take Elements From an Array": [[37, "numpy-take-take-elements-from-an-array"]], "NumPy.testing.assert_almost_equal: Check if Two Arrays Are Equal up to a Certain Precision": [[37, "numpy-testing-assert-almost-equal-check-if-two-arrays-are-equal-up-to-a-certain-precision"]], "Number": [[8, null]], "Numerizer: Standardizing Numerical Data in Text": [[49, "numerizer-standardizing-numerical-data-in-text"]], "Omit Dictionary\u2019s Attribute": [[20, "omit-dictionarys-attribute"]], "Omit Else Clauses in a Python Function to Improve Code Readability": [[5, "omit-else-clauses-in-a-python-function-to-improve-code-readability"]], "Open a Website Using Python": [[65, "open-a-website-using-python"]], "Operator": [[17, null]], "Optimize Multiple DataFrame Computations with Polars collect_all": [[50, "optimize-multiple-dataframe-computations-with-polars-collect-all"]], "Optimize Query Speed with Data Partitioning": [[41, "optimize-query-speed-with-data-partitioning"]], "Optimize Your Pandas Code with Vectorized Operations": [[24, "optimize-your-pandas-code-with-vectorized-operations"]], "Optimizing Memory Usage in Python with Slots": [[1, "optimizing-memory-usage-in-python-with-slots"]], "Optimizing Memory Usage in a pandas DataFrame with infer_objects": [[27, "optimizing-memory-usage-in-a-pandas-dataframe-with-infer-objects"]], "Optimizing PySpark Queries with Nested Data Structures": [[52, "optimizing-pyspark-queries-with-nested-data-structures"]], "Optimizing PySpark Queries: DataFrame API or SQL?": [[52, "optimizing-pyspark-queries-dataframe-api-or-sql"]], "OrderedDict: Create an Ordered Python Dictionary": [[13, "ordereddict-create-an-ordered-python-dictionary"]], "Organize and Control Test Execution using pytest.mark": [[34, "organize-and-control-test-execution-using-pytest-mark"], [54, "organize-and-control-test-execution-using-pytest-mark"]], "Outlines: Ensuring Consistent Outputs from Language Models": [[46, "outlines-ensuring-consistent-outputs-from-language-models"]], "Overwrite Partitions of a pandas DataFrame": [[41, "overwrite-partitions-of-a-pandas-dataframe"]], "PRegEx: Write Human-Readable Regular Expressions": [[58, "pregex-write-human-readable-regular-expressions"]], "Pad a String With Zero Using f-String": [[11, "pad-a-string-with-zero-using-f-string"], [32, "pad-a-string-with-zero-using-f-string"]], "Pandas": [[23, null]], "Pandas vs Polars: Harnessing Parallelism for Faster Data Processing": [[50, "pandas-vs-polars-harnessing-parallelism-for-faster-data-processing"]], "Pandas vs Polars: Syntax Comparison for Data Scientists": [[50, "pandas-vs-polars-syntax-comparison-for-data-scientists"]], "Pandas-Friendly Big Data Processing with Spark": [[52, "pandas-friendly-big-data-processing-with-spark"]], "Pandas.Series.isin: Filter Rows Only If Column Contains Values From Another List": [[29, "pandas-series-isin-filter-rows-only-if-column-contains-values-from-another-list"]], "PandasAI: Gain Insights From Your pandas DataFrame With AI": [[40, "pandasai-gain-insights-from-your-pandas-dataframe-with-ai"]], "Pandera: a Python Library to Validate Your Pandas DataFrame": [[34, "pandera-a-python-library-to-validate-your-pandas-dataframe"], [54, "pandera-a-python-library-to-validate-your-pandas-dataframe"]], "Parsera: Natural Language Web Scraping with LLMs": [[45, "parsera-natural-language-web-scraping-with-llms"]], "Pendulum: Python Datetimes Made Easy": [[55, "pendulum-python-datetimes-made-easy"]], "Perform Floor Division with Double Forward Slash": [[8, "perform-floor-division-with-double-forward-slash"]], "Pigeon: Quickly Annotate Your Data on Jupyter Notebook": [[44, "pigeon-quickly-annotate-your-data-on-jupyter-notebook"]], "Pipe: A Elegant Alternative to Nested map and filter Calls in Python": [[58, "pipe-a-elegant-alternative-to-nested-map-and-filter-calls-in-python"]], "Pipeline + GridSearchCV: Prevent Data Leakage when Scaling the Data": [[47, "pipeline-gridsearchcv-prevent-data-leakage-when-scaling-the-data"]], "Planting a Value": [[20, "planting-a-value"]], "Pmdarima: Harness R\u2019s auto.arima Power with a scikit-learn-Like Interface": [[55, "pmdarima-harness-r-s-auto-arima-power-with-a-scikit-learn-like-interface"]], "Poetry: Python Tool for Dependency Management and Packaging": [[62, "poetry-python-tool-for-dependency-management-and-packaging"]], "Polars": [[50, null]], "Polars vs. Pandas for CSV Loading and Filtering": [[50, "polars-vs-pandas-for-csv-loading-and-filtering"]], "Polars: Blazing Fast DataFrame Library": [[50, "polars-blazing-fast-dataframe-library"]], "Polars: Speed Up Data Processing 12x with Lazy Execution": [[50, "polars-speed-up-data-processing-12x-with-lazy-execution"]], "Polars\u2019 Streaming Mode: A Solution for Large Data Sets": [[50, "polars-streaming-mode-a-solution-for-large-data-sets"]], "Post-init: Add Init Method to a Data Class": [[14, "post-init-add-init-method-to-a-data-class"]], "PostgresML: Integrate Machine Learning with PostgreSQL": [[39, "postgresml-integrate-machine-learning-with-postgresql"]], "Preparing the Data": [[55, "preparing-the-data"]], "Preprocess Text in One Line of Code with Texthero": [[49, "preprocess-text-in-one-line-of-code-with-texthero"]], "Print Latex": [[21, "print-latex"]], "Print a DataFrame in Latex Format": [[33, "print-a-dataframe-in-latex-format"]], "Printable PDF Guide": [[68, "printable-pdf-guide"]], "Pull One File from Another Branch Using Git": [[63, "pull-one-file-from-another-branch-using-git"]], "PyInstaller: Bundle a Python Application Into a Single Executable": [[62, "pyinstaller-bundle-a-python-application-into-a-single-executable"]], "PyOD: Simplifying Outlier Detection in Python": [[47, "pyod-simplifying-outlier-detection-in-python"]], "PySpark": [[52, null]], "PySpark Best Practices: Simplifying Logical Chain Conditions": [[52, "pyspark-best-practices-simplifying-logical-chain-conditions"]], "PySpark DataFrame Transformations: select vs withColumn": [[52, "pyspark-dataframe-transformations-select-vs-withcolumn"]], "PyTube: A Lightweight Python Library for Downloading YouTube Videos": [[65, "pytube-a-lightweight-python-library-for-downloading-youtube-videos"]], "Pydantic": [[19, null]], "Pydantic: Enforce Data Types on Your Function Parameters at Runtime": [[61, "pydantic-enforce-data-types-on-your-function-parameters-at-runtime"]], "Pydash": [[20, null]], "Pydash\u2019s Methods": [[20, "pydashs-methods"]], "Pyfiglet: Make Large and Unique Letters Out of Ordinary Text in Python": [[60, "pyfiglet-make-large-and-unique-letters-out-of-ordinary-text-in-python"]], "Pytest Fixtures: Use The Same Data for Different Tests": [[34, "pytest-fixtures-use-the-same-data-for-different-tests"], [54, "pytest-fixtures-use-the-same-data-for-different-tests"]], "Pytest repeat": [[34, "pytest-repeat"], [54, "pytest-repeat"]], "Pytest skipif: Skip a Test When a Condition is Not Met": [[34, "pytest-skipif-skip-a-test-when-a-condition-is-not-met"], [54, "pytest-skipif-skip-a-test-when-a-condition-is-not-met"]], "Pytest xfail: Mark a Test as Expected to Fail": [[34, "pytest-xfail-mark-a-test-as-expected-to-fail"], [54, "pytest-xfail-mark-a-test-as-expected-to-fail"]], "Python 3.10\u2019s strict=True: Preventing Data Loss in zip Operations": [[7, "python-3-10-s-strict-true-preventing-data-loss-in-zip-operations"]], "Python Best Practices: Using default_factory for Mutable Defaults": [[14, "python-best-practices-using-default-factory-for-mutable-defaults"]], "Python Built-in Methods": [[0, null]], "Python Code Quality Optimization with Ruff": [[61, "python-code-quality-optimization-with-ruff"]], "Python Data Models: Pydantic or attrs?": [[19, "python-data-models-pydantic-or-attrs"]], "Python Fire: Generate a CLI for Any Python Objects in Two Lines of Code": [[60, "python-fire-generate-a-cli-for-any-python-objects-in-two-lines-of-code"]], "Python Pass Statement": [[6, "python-pass-statement"]], "Python Set Manipulation: Adding, Removing, and Checking Subsets": [[10, "python-set-manipulation-adding-removing-and-checking-subsets"]], "Python Utility Libraries": [[12, null]], "Python\u2019s dropwhile: A Clean Approach to Sequential Filtering": [[16, "python-s-dropwhile-a-clean-approach-to-sequential-filtering"]], "QuantStats: Simplify Stock Performance Analysis in Python": [[55, "quantstats-simplify-stock-performance-analysis-in-python"]], "Query Nested Parquet Files Easily Using DuckDB": [[42, "query-nested-parquet-files-easily-using-duckdb"]], "Questgen.ai: Question Generator in Python": [[49, "questgen-ai-question-generator-in-python"]], "Raise an Exception for a Chained Assignment in pandas": [[24, "raise-an-exception-for-a-chained-assignment-in-pandas"]], "Random User: Generate Random User Data in One Line of Code": [[45, "random-user-generate-random-user-data-in-one-line-of-code"]], "Rapid Prototyping and Comparison of Basic Models with Lazy Predict": [[47, "rapid-prototyping-and-comparison-of-basic-models-with-lazy-predict"]], "Read Data from a Website": [[26, "read-data-from-a-website"]], "Read HTML Tables Using Pandas": [[26, "read-html-tables-using-pandas"]], "Recipe-Scrapers: Automate Recipe Data Extraction": [[45, "recipe-scrapers-automate-recipe-data-extraction"]], "Refurb: Refurbish and Modernize Python Codebases": [[61, "refurb-refurbish-and-modernize-python-codebases"]], "Replace the Missing Values with the Most Frequent Categories in a Column": [[24, "replace-the-missing-values-with-the-most-frequent-categories-in-a-column"]], "Reuse The Notebook to Run The Same Code Across Different Data": [[67, "reuse-the-notebook-to-run-the-same-code-across-different-data"]], "Reverse a Dictionary with Dictionary Comprehension": [[4, "reverse-a-dictionary-with-dictionary-comprehension"]], "Rich\u2019s Console: Debug your Python Function in One Line of Code": [[64, "richs-console-debug-your-python-function-in-one-line-of-code"]], "Rocketry: Modern Scheduling Library for Python": [[65, "rocketry-modern-scheduling-library-for-python"]], "Ruptures: Detecting Change Points in Non-Stationary Signals": [[55, "ruptures-detecting-change-points-in-non-stationary-signals"]], "SQL Analytics with DuckDB": [[42, "sql-analytics-with-duckdb"]], "SQL Libraries": [[39, null]], "SQLFluff: A Linter and Auto-Formatter for Your SQL Code": [[39, "sqlfluff-a-linter-and-auto-formatter-for-your-sql-code"]], "SQLModel: Simplify SQL Database Interactions in Python": [[39, "sqlmodel-simplify-sql-database-interactions-in-python"]], "SQliteDict: Reducing SQLite Complexity with Dictionary-Style Operations": [[39, "sqlitedict-reducing-sqlite-complexity-with-dictionary-style-operations"]], "Safe Data Deletion with delta-rs": [[41, "safe-data-deletion-with-delta-rs"]], "Safe Unit Conversions in Python Using Pint": [[58, "safe-unit-conversions-in-python-using-pint"]], "Save Disk Space on Large Datasets with Parquet": [[2, "save-disk-space-on-large-datasets-with-parquet"]], "Say Goodbye to Data Type Conversion in pandas 2.0": [[27, "say-goodbye-to-data-type-conversion-in-pandas-2-0"]], "Scaling Time-Series Forecasting with StatsForecast and Spark": [[55, "scaling-time-series-forecasting-with-statsforecast-and-spark"]], "Schedule: Schedule your Python Functions to Run At a Specific Time": [[65, "schedule-schedule-your-python-functions-to-run-at-a-specific-time"]], "Scikit-LLM: Supercharge Text Analysis with ChatGPT and scikit-learn Integration": [[47, "scikit-llm-supercharge-text-analysis-with-chatgpt-and-scikit-learn-integration"]], "Scrape Facebook Public Pages Without an API Key": [[45, "scrape-facebook-public-pages-without-an-api-key"]], "Select DataFrame Rows Before or After a Specific Date": [[28, "select-dataframe-rows-before-or-after-a-specific-date"]], "Set": [[10, null]], "Sharing and Downloading": [[51, null]], "Shift the Index of a DataFrame by a Specific Number of Periods": [[28, "shift-the-index-of-a-dataframe-by-a-specific-number-of-periods"]], "Silly: Produce Silly Test Data": [[45, "silly-produce-silly-test-data"]], "Similarity Encoding for Dirty Categories Using dirty_cat": [[43, "similarity-encoding-for-dirty-categories-using-dirty-cat"]], "Simple and Expressive Data Transformation with Polars": [[50, "simple-and-expressive-data-transformation-with-polars"]], "Simplified Datetime Logging with Loguru": [[64, "simplified-datetime-logging-with-loguru"]], "Simplify Aggregations with Polars\u2019 Declarative Expressions": [[50, "simplify-aggregations-with-polars-declarative-expressions"]], "Simplify CSV Data Management with DuckDB": [[42, "simplify-csv-data-management-with-duckdb"]], "Simplify Complex SQL Queries with PySpark UDFs": [[52, "simplify-complex-sql-queries-with-pyspark-udfs"]], "Simplify Conditional Execution with Match Statements": [[9, "simplify-conditional-execution-with-match-statements"]], "Simplify Custom Object Operations with Python Magic Methods": [[1, "simplify-custom-object-operations-with-python-magic-methods"]], "Simplify Data Validation with Pydantic": [[19, "simplify-data-validation-with-pydantic"]], "Simplify DataFrame Operations Using selectExpr in PySpark": [[52, "simplify-dataframe-operations-using-selectexpr-in-pyspark"]], "Simplify LLM Integration with Magentic\u2019s @prompt Decorator": [[46, "simplify-llm-integration-with-magentic-s-prompt-decorator"]], "Simplify List Condition Evaluation with any and List Comprehensions": [[7, "simplify-list-condition-evaluation-with-any-and-list-comprehensions"]], "Simplify Mocking External Services with pytest-mock": [[54, "simplify-mocking-external-services-with-pytest-mock"]], "Simplify Nested Structures with Python Data Classes": [[14, "simplify-nested-structures-with-python-data-classes"]], "Simplify Null Checks in Python with the Maybe Container": [[58, "simplify-null-checks-in-python-with-the-maybe-container"]], "Simplify Pattern Matching and Transformation in Python with Pampy": [[58, "simplify-pattern-matching-and-transformation-in-python-with-pampy"]], "Simplify Python Logging with Loguru": [[64, "simplify-python-logging-with-loguru"]], "Simplify Table Merge Operations with Delta Lake": [[41, "simplify-table-merge-operations-with-delta-lake"]], "Simplify Tabular Dataset Preparation with TabularPandas": [[43, "simplify-tabular-dataset-preparation-with-tabularpandas"]], "Simplify Unit Testing of SQL Queries with PySpark": [[52, "simplify-unit-testing-of-sql-queries-with-pyspark"]], "Simplifying Geographic Calculations with GeoPandas": [[40, "simplifying-geographic-calculations-with-geopandas"]], "Simplifying GitHub API Interactions with githubkit": [[63, "simplifying-github-api-interactions-with-githubkit"]], "Simplifying ML Model Integration with FastAPI": [[47, "simplifying-ml-model-integration-with-fastapi"]], "Simplifying Repetitive Function Calls with partial in Python": [[15, "simplifying-repetitive-function-calls-with-partial-in-python"]], "Simulate External Services in Testing with Mock Objects": [[34, "simulate-external-services-in-testing-with-mock-objects"]], "SkillNER: Automating Skill Extraction in Python": [[49, "skillner-automating-skill-extraction-in-python"]], "Sliding Window Approach to Time Series Cross-Validation": [[55, "sliding-window-approach-to-time-series-cross-validation"]], "Smart Data Type Selection for Memory-Efficient Pandas": [[27, "smart-data-type-selection-for-memory-efficient-pandas"]], "Snorkel \u2014 Programmatically Build Training Data in Python": [[43, "snorkel-programmatically-build-training-data-in-python"]], "Solve an Equation": [[21, "solve-an-equation"]], "Solving Data Mismatches: Joining Tables with Fuzzy Matching": [[43, "solving-data-mismatches-joining-tables-with-fuzzy-matching"]], "Sort Rows or Columns of a DataFrame": [[31, null]], "Spacy_streamlit: Create a Web App to Visualize Your Text in 3 Lines of Code": [[49, "spacy-streamlit-create-a-web-app-to-visualize-your-text-in-3-lines-of-code"]], "Spark DataFrame: Avoid Out-of-Memory Errors with Lazy Evaluation": [[52, "spark-dataframe-avoid-out-of-memory-errors-with-lazy-evaluation"]], "Special Functions": [[21, "special-functions"]], "Specify Datetime Columns with parse_dates": [[26, "specify-datetime-columns-with-parse-dates"]], "Split Data in a Stratified Fashion in scikit-learn": [[43, "split-data-in-a-stratified-fashion-in-scikit-learn"]], "Split a String by Multiple Characters": [[11, "split-a-string-by-multiple-characters"], [32, "split-a-string-by-multiple-characters"]], "Split a String into Multiple Rows": [[24, "split-a-string-into-multiple-rows"]], "Stack Columns into Rows in Pandas": [[35, "stack-columns-into-rows-in-pandas"]], "Static method: use the function without adding the attributes required for a new instance": [[1, "static-method-use-the-function-without-adding-the-attributes-required-for-a-new-instance"]], "Stop Flaky Float Tests with pytest.approx()": [[34, "stop-flaky-float-tests-with-pytest-approx"], [54, "stop-flaky-float-tests-with-pytest-approx"]], "Stop Using + to Concatenate Strings. Use Join Instead": [[6, "stop-using-to-concatenate-strings-use-join-instead"]], "Stop Writing Nested if-else: Use Python\u2019s .get() Instead": [[4, "stop-writing-nested-if-else-use-python-s-get-instead"]], "Stop using = operator to create a copy of a Python list. Use copy method instead": [[6, "stop-using-operator-to-create-a-copy-of-a-python-list-use-copy-method-instead"]], "Store Sensitive Information Securely in Python with .env Files": [[59, "store-sensitive-information-securely-in-python-with-env-files"]], "String": [[11, null], [32, null]], "String find: Find The Index of a Substring in a Python String": [[11, "string-find-find-the-index-of-a-substring-in-a-python-string"], [32, "string-find-find-the-index-of-a-substring-in-a-python-string"]], "Structural Pattern Matching in Python 3.10": [[9, "structural-pattern-matching-in-python-3-10"]], "Style a DataFrame": [[33, null]], "Substitution": [[21, "substitution"]], "Swifter: Add One Word to Make Your Pandas Apply 23 Times Faster": [[53, "swifter-add-one-word-to-make-your-pandas-apply-23-times-faster"]], "SymPy": [[21, null]], "Symbols": [[21, "symbols"]], "Tempo: Simplified Time Series Analysis in PySpark": [[52, "tempo-simplified-time-series-analysis-in-pyspark"]], "Test for Specific Exceptions in Unit Testing": [[34, "test-for-specific-exceptions-in-unit-testing"], [54, "test-for-specific-exceptions-in-unit-testing"]], "Testing": [[34, null], [54, null]], "TextBlob: Processing Text in One Line of Code": [[49, "textblob-processing-text-in-one-line-of-code"]], "The Best Way to Append Mismatched Data to Parquet Tables": [[41, "the-best-way-to-append-mismatched-data-to-parquet-tables"]], "Time Series": [[55, null]], "TimeSeriesSplit for Cross-Validation in Time Series": [[43, "timeseriessplit-for-cross-validation-in-time-series"]], "Timeline View of the Execution of Your Python Functions": [[64, "timeline-view-of-the-execution-of-your-python-functions"]], "Tools for Best Python Practices": [[59, null]], "Tools to Speed Up Code": [[53, null]], "Top2Vec: Quick Topic Modeling in Python": [[49, "top2vec-quick-topic-modeling-in-python"]], "Transform Single Inputs into Tables Using PySpark UDTFs": [[52, "transform-single-inputs-into-tables-using-pyspark-udtfs"]], "Transform a DataFrame": [[35, null]], "Trigonometric": [[21, "trigonometric"]], "Turn a pandas Series into a NumPy Array": [[30, "turn-a-pandas-series-into-a-numpy-array"]], "Turn a pandas Series into a pandas DataFrame": [[35, "turn-a-pandas-series-into-a-pandas-dataframe"]], "Typer: Build a Command-Line Interface in a Few Lines of Code": [[60, "typer-build-a-command-line-interface-in-a-few-lines-of-code"]], "Typing": [[22, null]], "UMAP: Dimension Reduction in Python": [[56, "umap-dimension-reduction-in-python"]], "Underscore \u201c_\u201d: Ignore The Index in Python For Loops": [[6, "underscore-ignore-the-index-in-python-for-loops"]], "Underscore(_): Ignore Values That Will Not Be Used": [[6, "underscore-ignore-values-that-will-not-be-used"]], "Unzip a List of Iterables": [[7, "unzip-a-list-of-iterables"]], "Update Multiple Columns in Spark 3.3 and Later": [[52, "update-multiple-columns-in-spark-3-3-and-later"]], "Update a Dictionary With Items From Another Dictionary": [[4, "update-a-dictionary-with-items-from-another-dictionary"]], "Use Calculations in Python f-String": [[11, "use-calculations-in-python-f-string"], [32, "use-calculations-in-python-f-string"]], "Use Comparison and Arithmetic Operators on Dates in Python": [[3, "use-comparison-and-arithmetic-operators-on-dates-in-python"]], "Use Dates in a Month as the Feature": [[3, "use-dates-in-a-month-as-the-feature"]], "Use List to Change the Positions of Rows or Columns in a NumPy Array": [[37, "use-list-to-change-the-positions-of-rows-or-columns-in-a-numpy-array"]], "Use Mixins Over Inheritance for Enhanced Modularity": [[1, "use-mixins-over-inheritance-for-enhanced-modularity"]], "Use Pydantic\u2019s Field Class to Validate Numbers and Dates": [[19, "use-pydantic-s-field-class-to-validate-numbers-and-dates"]], "Use Python Class as a Type Hint": [[22, "use-python-class-as-a-type-hint"]], "Use Seaborn Style on Matplotlib Plots": [[56, "use-seaborn-style-on-matplotlib-plots"]], "Use Underscores to Format Large Numbers in Python": [[8, "use-underscores-to-format-large-numbers-in-python"]], "Using natsort for Intuitive Alphanumeric Sorting in Python": [[58, "using-natsort-for-intuitive-alphanumeric-sorting-in-python"]], "Validating Polars DataFrames with Pandera": [[34, "validating-polars-dataframes-with-pandera"], [54, "validating-polars-dataframes-with-pandera"]], "Validation Curve: Determine if an Estimator Is Underfitting Over Overfitting": [[47, "validation-curve-determine-if-an-estimator-is-underfitting-over-overfitting"]], "Vectorized Operations in PySpark: pandas_udf vs Standard UDF": [[52, "vectorized-operations-in-pyspark-pandas-udf-vs-standard-udf"]], "Verify Logging Error with pytest": [[34, "verify-logging-error-with-pytest"], [54, "verify-logging-error-with-pytest"]], "Version Your Pandas DataFrame with Delta Lake": [[41, "version-your-pandas-dataframe-with-delta-lake"]], "Visualization": [[56, null]], "Visualize Feature Importances with Yellowbrick": [[47, "visualize-feature-importances-with-yellowbrick"]], "Visualize Time Series with plot_series": [[55, "visualize-time-series-with-plot-series"]], "Visualize the Frequency Tokens in a Text Corpora": [[56, "visualize-the-frequency-tokens-in-a-text-corpora"]], "Visualizing Using plot_series": [[55, "visualizing-using-plot-series"]], "Vizro: Create Modular Data Visualization Applications in Python": [[56, "vizro-create-modular-data-visualization-applications-in-python"]], "Vulture: Automatically Find Dead Python Code": [[61, "vulture-automatically-find-dead-python-code"]], "WAT: Your One-Stop Tool for Python Object Exploration": [[64, "wat-your-one-stop-tool-for-python-object-exploration"]], "What Should You Expect From This Book?": [[68, "what-should-you-expect-from-this-book"]], "What is SymPy?": [[21, "what-is-sympy"]], "Why __name__ == \"__main__\" Matters in a Python Script?": [[6, "why-name-main-matters-in-a-python-script"]], "Word Ninja: Slice Your Lumped-Together Words": [[49, "word-ninja-slice-your-lumped-together-words"]], "Work with Datetime": [[28, null]], "Work with Dictionary": [[20, "work-with-dictionary"]], "Work with Functions": [[20, "work-with-functions"]], "Work with List": [[20, "work-with-list"]], "Work with List of Dictionaries": [[20, "work-with-list-of-dictionaries"]], "Workalendar: Handle Working-Day Computation in Python": [[55, "workalendar-handle-working-day-computation-in-python"]], "Workflow Automation": [[65, null]], "Working with Arrays Made Easier in Spark 3.5": [[52, "working-with-arrays-made-easier-in-spark-3-5"]], "Write Clean Error Handling Logic with Else Statements": [[6, "write-clean-error-handling-logic-with-else-statements"]], "Write Cleaner Python with the Walrus Operatorn": [[9, "write-cleaner-python-with-the-walrus-operatorn"]], "Write Meaningful Names": [[6, "write-meaningful-names"]], "Write Union Types as X|Y in Python 3.10": [[9, "write-union-types-as-x-y-in-python-3-10"]], "Write Union Types with X|Y": [[22, "write-union-types-with-x-y"]], "Writing Safer and Cleaner Spark SQL with PySpark\u2019s Parameterized Queries": [[52, "writing-safer-and-cleaner-spark-sql-with-pyspark-s-parameterized-queries"]], "Zip: Associate Elements from Two Iterators based on the Order": [[7, "zip-associate-elements-from-two-iterators-based-on-the-order"]], "__call__: Call your Class Instance like a Function": [[1, "call-call-your-class-instance-like-a-function"]], "__str__ and __repr__: Create a String Representation of a Python Object": [[1, "str-and-repr-create-a-string-representation-of-a-python-object"]], "aeon: The Ultimate Library for Time-Series Forecasting and Classification": [[55, "aeon-the-ultimate-library-for-time-series-forecasting-and-classification"]], "all: Check if All Elements of an Interable Are Strings": [[7, "all-check-if-all-elements-of-an-interable-are-strings"]], "all: Select Rows with All NaN Values": [[29, "all-select-rows-with-all-nan-values"]], "any: Check if Any Element of an Iterable is True": [[7, "any-check-if-any-element-of-an-iterable-is-true"]], "array-to-latex: Turn a NumPy Array into Latex": [[37, "array-to-latex-turn-a-numpy-array-into-latex"]], "collections.Counter: Count The Occurrences of Items in a List": [[13, "collections-counter-count-the-occurrences-of-items-in-a-list"]], "datacompy: Smart Data Comparison Made Simple": [[48, "datacompy-smart-data-comparison-made-simple"]], "datetime + timedelta: Calculate End DateTime Based on Start DateTime and Duration": [[3, "datetime-timedelta-calculate-end-datetime-based-on-start-datetime-and-duration"]], "decorator module: Write Shorter Python Decorators without Nested Functions": [[58, "decorator-module-write-shorter-python-decorators-without-nested-functions"]], "deepcopy: Copy a Nested Object": [[6, "deepcopy-copy-a-nested-object"]], "df.filter: Filter Columns Based on a Subset of Their Names": [[29, "df-filter-filter-columns-based-on-a-subset-of-their-names"]], "df.merge: Merge DataFrame Based on Columns": [[25, "df-merge-merge-dataframe-based-on-columns"]], "df.query: Query Columns Using Boolean Expression": [[29, "df-query-query-columns-using-boolean-expression"]], "df.to_dict: Turn a DataFrame into a Dictionary": [[30, "df-to-dict-turn-a-dataframe-into-a-dictionary"]], "dict.fromkeys: Get a Dictionary From a List and a Value": [[4, "dict-fromkeys-get-a-dictionary-from-a-list-and-a-value"]], "difflib.SequenceMatcher: Detect The \u201cAlmost Similar\u201d Articles": [[11, "difflib-sequencematcher-detect-the-almost-similar-articles"], [32, "difflib-sequencematcher-detect-the-almost-similar-articles"]], "difflib.get_close_matches:  Get a List of the Best Matches for a Certain Word": [[11, "difflib-get-close-matches-get-a-list-of-the-best-matches-for-a-certain-word"], [32, "difflib-get-close-matches-get-a-list-of-the-best-matches-for-a-certain-word"]], "dirty-equals: Write Declarative Assertions in Your Unit Tests": [[34, "dirty-equals-write-declarative-assertions-in-your-unit-tests"], [54, "dirty-equals-write-declarative-assertions-in-your-unit-tests"]], "display in IPython: Display Math Equations in Jupyter Notebook": [[67, "display-in-ipython-display-math-equations-in-jupyter-notebook"]], "distfit: Find The Best Theoretical Distribution For Your Data": [[44, "distfit-find-the-best-theoretical-distribution-for-your-data"]], "docopt: Create Beautiful Command-line Interfaces for Documentation in Python": [[59, "docopt-create-beautiful-command-line-interfaces-for-documentation-in-python"]], "dtreeviz: Visualize and Interpret a Decision Tree Model": [[56, "dtreeviz-visualize-and-interpret-a-decision-tree-model"]], "ekphrasis: Text Processing Tool For Social Media Text": [[49, "ekphrasis-text-processing-tool-for-social-media-text"]], "eradicate: Remove Junk Comments from Python Files": [[61, "eradicate-remove-junk-comments-from-python-files"]], "faker: Create Fake Data in One Line of Code": [[45, "faker-create-fake-data-in-one-line-of-code"]], "fastai\u2019s cont_cat_split: Separate Continuous and Categorical Variables": [[44, "fastais-cont-cat-split-separate-continuous-and-categorical-variables"]], "fetch_openml: Get OpenML\u2019s Dataset in One Line of Code": [[45, "fetch-openml-get-openmls-dataset-in-one-line-of-code"]], "filter: Get the Elements of an Iterable that a Function Evaluates True": [[7, "filter-get-the-elements-of-an-iterable-that-a-function-evaluates-true"]], "folium: Create an Interactive Map in Python": [[56, "folium-create-an-interactive-map-in-python"]], "fractions: Get Numerical Results in Fractions Instead of Decimals": [[8, "fractions-get-numerical-results-in-fractions-instead-of-decimals"]], "frozen=True: Make Your Data Classes Read-Only": [[14, "frozen-true-make-your-data-classes-read-only"]], "fugue: Use pandas Functions on the Spark and Dask Engines.": [[40, "fugue-use-pandas-functions-on-the-spark-and-dask-engines"]], "functools.reduce: Apply Function Cumulatively to the Items of Iterable": [[15, "functools-reduce-apply-function-cumulatively-to-the-items-of-iterable"]], "functools.singledispatch: Call Another Function Based on the Type of the Current Function\u2019s Argument": [[15, "functools-singledispatch-call-another-function-based-on-the-type-of-the-current-functions-argument"]], "gdown: Download a File from Google Drive in Python": [[51, "gdown-download-a-file-from-google-drive-in-python"]], "getattr: a Better Way to Get the Attribute of a Class": [[1, "getattr-a-better-way-to-get-the-attribute-of-a-class"]], "gif: The Easiest Way to Animate Your matplotlib Plot": [[56, "gif-the-easiest-way-to-animate-your-matplotlib-plot"]], "git-open: Open a GitHub Page for a Local Repository": [[63, "git-open-open-a-github-page-for-a-local-repository"]], "github1s: Read GitHub Code with VS Code on your Browser in One Second": [[63, "github1s-read-github-code-with-vs-code-on-your-browser-in-one-second"]], "gpt-commit-summarizer: Automate Pull Request Summarization": [[63, "gpt-commit-summarizer-automate-pull-request-summarization"]], "heapq: Find n Max Values of a Python List": [[7, "heapq-find-n-max-values-of-a-python-list"]], "heartrate \u2014 Visualize the Execution of a Python Program in Real-Time": [[64, "heartrate-visualize-the-execution-of-a-python-program-in-real-time"]], "hvPlot: One API for Multiple Plotting Libraries": [[56, "hvplot-one-api-for-multiple-plotting-libraries"]], "hypothesis: Property-based Testing in Python": [[34, "hypothesis-property-based-testing-in-python"], [54, "hypothesis-property-based-testing-in-python"]], "imbalanced-learn: Deal with an Imbalanced Dataset": [[47, "imbalanced-learn-deal-with-an-imbalanced-dataset"]], "imodels: Simplifying Machine Learning with Interpretable Models": [[47, "imodels-simplifying-machine-learning-with-interpretable-models"]], "inflect: Generate Plurals, Singulars, and Indefinite Articles": [[49, "inflect-generate-plurals-singulars-and-indefinite-articles"]], "interrogate: Check your Python Code for Missing Docstrings": [[61, "interrogate-check-your-python-code-for-missing-docstrings"]], "ipysankeywidget: IPython Sankey Diagram Widget": [[56, "ipysankeywidget-ipython-sankey-diagram-widget"]], "ipyvizzu-story: Create an Interactive Presentation in Your Jupyter Notebook": [[56, "ipyvizzu-story-create-an-interactive-presentation-in-your-jupyter-notebook"]], "ipyvizzu: Add Animation to Your Charts with Ease": [[56, "ipyvizzu-add-animation-to-your-charts-with-ease"]], "isort: Automatically Sort your Python Imports in 1 Line of Code": [[61, "isort-automatically-sort-your-python-imports-in-1-line-of-code"]], "itertools.combinations: A Better Way to Iterate Through a Pair of Values in a Python List": [[16, "itertools-combinations-a-better-way-to-iterate-through-a-pair-of-values-in-a-python-list"]], "itertools.compress: Filter a List Using Booleans": [[16, "itertools-compress-filter-a-list-using-booleans"]], "itertools.groupby: Group Elements in an Iterable by a Key": [[16, "itertools-groupby-group-elements-in-an-iterable-by-a-key"]], "itertools.islice: Efficient Data Processing for Large Data Streams": [[16, "itertools-islice-efficient-data-processing-for-large-data-streams"]], "itertools.product: Nested For-Loops in a Generator Expression": [[16, "itertools-product-nested-for-loops-in-a-generator-expression"]], "itertools.starmap: Apply a Function With More Than 2 Arguments to Elements in a List": [[16, "itertools-starmap-apply-a-function-with-more-than-2-arguments-to-elements-in-a-list"]], "itertools.zip_longest: Zip Iterables of Different Lengths": [[16, "itertools-zip-longest-zip-iterables-of-different-lengths"]], "join method: Turn an Iterable into a Python String": [[7, "join-method-turn-an-iterable-into-a-python-string"]], "kneed: Knee-Point Detection in Time Series": [[55, "kneed-knee-point-detection-in-time-series"]], "knockknock: Receive an Email When Your Code Finishes Executing": [[65, "knockknock-receive-an-email-when-your-code-finishes-executing"]], "latexify_py: Generates a LaTex Math Description From a Python Function": [[60, "latexify-py-generates-a-latex-math-description-from-a-python-function"]], "leAB: AB Testing Analysis in Python": [[34, "leab-ab-testing-analysis-in-python"], [54, "leab-ab-testing-analysis-in-python"]], "loguru: Print Readable Traceback in Python": [[64, "loguru-print-readable-traceback-in-python"]], "map method: Apply a Function to Each Item of an Iterable": [[7, "map-method-apply-a-function-to-each-item-of-an-iterable"]], "matplotlib-venn: Create a Venn Diagram Using Python": [[56, "matplotlib-venn-create-a-venn-diagram-using-python"]], "matplotx: Useful Extensions for Matplotlib": [[56, "matplotx-useful-extensions-for-matplotlib"]], "missingno.dendogram: Visualize Correlation Between Missing Data": [[56, "missingno-dendogram-visualize-correlation-between-missing-data"]], "mlforecast: Scalable Machine Learning for Time Series": [[47, "mlforecast-scalable-machine-learning-for-time-series"]], "modelkit: Build Production ML Systems in Python": [[47, "modelkit-build-production-ml-systems-in-python"]], "mypy: Static Type Checker for Python": [[61, "mypy-static-type-checker-for-python"]], "namedtuple: A Lightweight Python Structure to Mange your Data": [[13, "namedtuple-a-lightweight-python-structure-to-mange-your-data"]], "newspaper3k: Extract Meaningful Information From an Articles in 2 Lines of Code": [[49, "newspaper3k-extract-meaningful-information-from-an-articles-in-2-lines-of-code"]], "nlpaug: Enhancing NLP Model Performance with Data Augmentation": [[49, "nlpaug-enhancing-nlp-model-performance-with-data-augmentation"]], "notedown: Create IPython Notebooks from Markdown and Vice Versa": [[65, "notedown-create-ipython-notebooks-from-markdown-and-vice-versa"]], "notify-send: Send a Desktop Notification after Finishing Executing a File": [[65, "notify-send-send-a-desktop-notification-after-finishing-executing-a-file"]], "np.squeeze: Remove Axes of Length One From an Array": [[37, "np-squeeze-remove-axes-of-length-one-from-an-array"]], "np.where: Replace Elements of a NumPy Array Based on a Condition": [[37, "np-where-replace-elements-of-a-numpy-array-based-on-a-condition"]], "numpy.ravel: Flatten a NumPy Array": [[37, "numpy-ravel-flatten-a-numpy-array"]], "operator.itemgetter: Get Multiple Items From a List or Dictionary": [[17, "operator-itemgetter-get-multiple-items-from-a-list-or-dictionary"]], "pandarallel: A Simple Tool to Parallelize Pandas Operations": [[40, "pandarallel-a-simple-tool-to-parallelize-pandas-operations"]], "pandas Grouper: Group Values Based on a Specific Frequency": [[28, "pandas-grouper-group-values-based-on-a-specific-frequency"]], "pandas-reader: Extract Data from Various Internet Sources Directly into a Pandas DataFrame": [[45, "pandas-reader-extract-data-from-various-internet-sources-directly-into-a-pandas-dataframe"]], "pandas.Categorical: Turn a List of Strings into a Categorical Variable": [[27, "pandas-categorical-turn-a-list-of-strings-into-a-categorical-variable"]], "pandas.DataFrame.agg: Aggregate over Columns or Rows Using Multiple Operations": [[35, "pandas-dataframe-agg-aggregate-over-columns-or-rows-using-multiple-operations"]], "pandas.DataFrame.agg: Apply Different Aggregations to Different Columns": [[35, "pandas-dataframe-agg-apply-different-aggregations-to-different-columns"]], "pandas.DataFrame.combine_first: Update Null Elements Using Another DataFrame": [[25, "pandas-dataframe-combine-first-update-null-elements-using-another-dataframe"]], "pandas.DataFrame.corrwith: Compute Pairwise Correlation Between 2 DataFrame": [[30, "pandas-dataframe-corrwith-compute-pairwise-correlation-between-2-dataframe"]], "pandas.DataFrame.cummax: Get the Cumulative Maximum": [[30, "pandas-dataframe-cummax-get-the-cumulative-maximum"]], "pandas.DataFrame.explode: Transform Each Element in an Iterable to a Row": [[24, "pandas-dataframe-explode-transform-each-element-in-an-iterable-to-a-row"]], "pandas.Series.dt: Access Datetime Properties of a pandas Series": [[28, "pandas-series-dt-access-datetime-properties-of-a-pandas-series"]], "pandas.Series.map: Change Values of a Pandas Series Using a Dictionary": [[24, "pandas-series-map-change-values-of-a-pandas-series-using-a-dictionary"]], "pandas.Series.pct_change: Find The Percentage Change Between The Current and a Prior Element in a pandas Series": [[30, "pandas-series-pct-change-find-the-percentage-change-between-the-current-and-a-prior-element-in-a-pandas-series"]], "pandas.clip: Exclude Outliers": [[29, "pandas-clip-exclude-outliers"]], "pandas.crosstab: Create a Cross Tabulation": [[35, "pandas-crosstab-create-a-cross-tabulation"]], "pandas.cut: Bin a DataFrame\u2019s values into Discrete Intervals": [[30, "pandas-cut-bin-a-dataframes-values-into-discrete-intervals"]], "pandas.melt: Unpivot a DataFrame": [[35, "pandas-melt-unpivot-a-dataframe"]], "pandas.pivot_table: Turn Your DataFrame Into a Pivot Table": [[35, "pandas-pivot-table-turn-your-dataframe-into-a-pivot-table"]], "pandas.qcut: Bin a DataFrame\u2019s Values into Equal-Sized Intervals": [[30, "pandas-qcut-bin-a-dataframe-s-values-into-equal-sized-intervals"]], "pandas.reindex: Replace the Values of the Missing Dates with 0": [[28, "pandas-reindex-replace-the-values-of-the-missing-dates-with-0"]], "pandas\u2019 DateOffset: Add a Time Interval to a pandas Timestamp": [[28, "pandas-dateoffset-add-a-time-interval-to-a-pandas-timestamp"]], "parse: Extract Strings Using Brackets": [[58, "parse-extract-strings-using-brackets"]], "parse_dates: Convert Columns into Datetime When Using pandas to Read CSV Files": [[28, "parse-dates-convert-columns-into-datetime-when-using-pandas-to-read-csv-files"]], "pathlib": [[18, null]], "pd.Series.between: Select Rows in a Pandas Series Containing Values Between 2 Numbers": [[30, "pd-series-between-select-rows-in-a-pandas-series-containing-values-between-2-numbers"]], "people_also_ask: Python Wrapper for Google People Also Ask": [[45, "people-also-ask-python-wrapper-for-google-people-also-ask"]], "perfplot: Performance Analysis for Python Snippets": [[61, "perfplot-performance-analysis-for-python-snippets"]], "pip install -e: Install Forked GitHub Repository Using Pip": [[63, "pip-install-e-install-forked-github-repository-using-pip"]], "pip-autoremove: Remove a Package and Its Unused Dependencies": [[62, "pip-autoremove-remove-a-package-and-its-unused-dependencies"]], "pipreqs: Generate requirements.txt File for Any Project Based on Imports": [[62, "pipreqs-generate-requirements-txt-file-for-any-project-based-on-imports"]], "pretty-confusion-matrix: Plot a Pretty and Comprehensible Confusion Matrix": [[56, "pretty-confusion-matrix-plot-a-pretty-and-comprehensible-confusion-matrix"]], "prettymaps: Generate Pretty Painting of a Location in Python": [[56, "prettymaps-generate-pretty-painting-of-a-location-in-python"]], "probablepeople: Parse Unstructured Names Into Structured Components": [[44, "probablepeople-parse-unstructured-names-into-structured-components"]], "pydash.chunk: Split Elements into Groups": [[20, "pydash-chunk-split-elements-into-groups"]], "pydash.flatten: Flatten a Nested Python List": [[20, "pydash-flatten-flatten-a-nested-python-list"]], "pydash.flatten_deep: Flatten a Deeply Nested Python List": [[20, "pydash-flatten-deep-flatten-a-deeply-nested-python-list"]], "pydeps: Python Module Dependency Visualization": [[62, "pydeps-python-module-dependency-visualization"]], "pyheat: Simplify Code Profiling with Heatmap Visualization": [[64, "pyheat-simplify-code-profiling-with-heatmap-visualization"]], "pyinstrument: Readable Python Profiler": [[53, "pyinstrument-readable-python-profiler"]], "pyserde: Effortless Serialization and Deserialization of Dataclass Objects": [[51, "pyserde-effortless-serialization-and-deserialization-of-dataclass-objects"]], "pytest benchmark: A Pytest Fixture to Benchmark Your Code": [[34, "pytest-benchmark-a-pytest-fixture-to-benchmark-your-code"], [54, "pytest-benchmark-a-pytest-fixture-to-benchmark-your-code"]], "pytest parametrize twice: Test All Possible Combinations of Two Sets of Parameters": [[34, "pytest-parametrize-twice-test-all-possible-combinations-of-two-sets-of-parameters"], [54, "pytest-parametrize-twice-test-all-possible-combinations-of-two-sets-of-parameters"]], "pytest-mock vs unittest.mock: Simplifying Mocking in Python Tests": [[34, "pytest-mock-vs-unittest-mock-simplifying-mocking-in-python-tests"], [54, "pytest-mock-vs-unittest-mock-simplifying-mocking-in-python-tests"]], "pytest-picked: Run the Tests Related to the Unstaged Files in Git": [[34, "pytest-picked-run-the-tests-related-to-the-unstaged-files-in-git"], [54, "pytest-picked-run-the-tests-related-to-the-unstaged-files-in-git"]], "pytest-postgresql: Incorporate Database Testing into Your pytest Test Suite": [[34, "pytest-postgresql-incorporate-database-testing-into-your-pytest-test-suite"], [54, "pytest-postgresql-incorporate-database-testing-into-your-pytest-test-suite"]], "pytest-steps: Share Data Between Tests": [[34, "pytest-steps-share-data-between-tests"], [54, "pytest-steps-share-data-between-tests"]], "pytest-sugar: Show the Failures and Errors Instantly With a Progress Bar": [[34, "pytest-sugar-show-the-failures-and-errors-instantly-with-a-progress-bar"], [54, "pytest-sugar-show-the-failures-and-errors-instantly-with-a-progress-bar"]], "pytest.mark.parametrize: Test Your Functions with Multiple Inputs": [[34, "pytest-mark-parametrize-test-your-functions-with-multiple-inputs"], [54, "pytest-mark-parametrize-test-your-functions-with-multiple-inputs"]], "pytrends: Get the Trend of a Keyword on Google Search Over Time": [[45, "pytrends-get-the-trend-of-a-keyword-on-google-search-over-time"]], "quadratic: Data Science Speadsheet with Python and SQL": [[48, "quadratic-data-science-speadsheet-with-python-and-sql"]], "random.choice: Get a Randomly Selected Element From a Python List": [[7, "random-choice-get-a-randomly-selected-element-from-a-python-list"]], "random.choices: Get Weighted Random Choices From a Python List": [[7, "random-choices-get-weighted-random-choices-from-a-python-list"]], "random.sample: Get Multiple Random Elements from a Python List": [[7, "random-sample-get-multiple-random-elements-from-a-python-list"]], "re.sub: Replace One String with Another String Using Regular Expression": [[11, "re-sub-replace-one-string-with-another-string-using-regular-expression"], [32, "re-sub-replace-one-string-with-another-string-using-regular-expression"]], "removestar: Automate Replacing Start Imports with Explicit Imports": [[65, "removestar-automate-replacing-start-imports-with-explicit-imports"]], "resample: Resample Time-Series Data": [[28, "resample-resample-time-series-data"]], "rich.inspect: Produce a Beautiful Report on any Python Object": [[64, "rich-inspect-produce-a-beautiful-report-on-any-python-object"]], "safetensors: A Simple and Safe Way to Store and Distribute Tensors": [[48, "safetensors-a-simple-and-safe-way-to-store-and-distribute-tensors"]], "select_dtypes: Return a Subset of a DataFrame Including/Excluding Columns Based on Their dtype": [[27, "select-dtypes-return-a-subset-of-a-dataframe-including-excluding-columns-based-on-their-dtype"]], "set_categories in Pandas: Sort Categorical Column by a Specific Ordering": [[31, "set-categories-in-pandas-sort-categorical-column-by-a-specific-ordering"]], "size: Compute the Size of Each Group": [[35, "size-compute-the-size-of-each-group"]], "sketch: AI Code-Writing Assistant That Understands Data Content": [[43, "sketch-ai-code-writing-assistant-that-understands-data-content"]], "slice: Make Your Indices More Readable by Naming Your Slice": [[6, "slice-make-your-indices-more-readable-by-naming-your-slice"]], "smart_open: The Python Library That Makes Cloud Storage Feel Local": [[58, "smart-open-the-python-library-that-makes-cloud-storage-feel-local"]], "snoop : Smart Print to Debug your Python Function": [[64, "snoop-smart-print-to-debug-your-python-function"]], "snscrape: Scrape Social Networking Services in Python": [[45, "snscrape-scrape-social-networking-services-in-python"]], "sort: Sort a List of Tuples by the First or Second Item": [[7, "sort-sort-a-list-of-tuples-by-the-first-or-second-item"]], "sql-metadata: Extract Components From a SQL Statement in Python": [[39, "sql-metadata-extract-components-from-a-sql-statement-in-python"]], "squared=False: Get RMSE from Sklearn\u2019s mean_squared_error method": [[47, "squared-false-get-rmse-from-sklearns-mean-squared-error-method"]], "squarify: Plot Treemap in Python": [[56, "squarify-plot-treemap-in-python"]], "sumy: Summarize Text in One Line of Code": [[49, "sumy-summarize-text-in-one-line-of-code"]], "supertree: Interactive Decision Tree Visualization for Python": [[56, "supertree-interactive-decision-tree-visualization-for-python"]], "sweetviz: Compare the similar features between 2 different datasets": [[48, "sweetviz-compare-the-similar-features-between-2-different-datasets"]], "textacy: Extract a Contiguous Sequence of Words": [[49, "textacy-extract-a-contiguous-sequence-of-words"]], "texthero: Reduce Dimension and Visualize Text in One Line of Code": [[49, "texthero-reduce-dimension-and-visualize-text-in-one-line-of-code"]], "textstat: Calculate Statistics From Text": [[49, "textstat-calculate-statistics-from-text"]], "tfcausalimpact: Understand Causal Relationships in Time Series Data": [[55, "tfcausalimpact-understand-causal-relationships-in-time-series-data"]], "tmp_path: Create a Temporary Directory for Testing": [[34, "tmp-path-create-a-temporary-directory-for-testing"], [54, "tmp-path-create-a-temporary-directory-for-testing"]], "to_markdown: Print a DataFrame in Markdown Format": [[33, "to-markdown-print-a-dataframe-in-markdown-format"]], "tqdm: Add Progress Bar to Your Pandas Apply": [[40, "tqdm-add-progress-bar-to-your-pandas-apply"]], "traces: A Python Library for Unevenly-Spaced Time Series Analysis": [[55, "traces-a-python-library-for-unevenly-spaced-time-series-analysis"]], "transform: Filter a pandas DataFrame by Value Counts": [[29, "transform-filter-a-pandas-dataframe-by-value-counts"]], "try-except vs if-else": [[6, "try-except-vs-if-else"]], "tsmoothie: Fast and Flexible Tool for Exponential Smoothing": [[55, "tsmoothie-fast-and-flexible-tool-for-exponential-smoothing"]], "typing.Annotated: Add Metadata to Your Typehint": [[22, "typing-annotated-add-metadata-to-your-typehint"]], "typing.Callable: Specify an Input is of Type Function": [[22, "typing-callable-specify-an-input-is-of-type-function"]], "typing.Literal: Specify the Possible Values for a Function Parameter": [[22, "typing-literal-specify-the-possible-values-for-a-function-parameter"]], "typing.TypeVar: Flexible Typing for Context-Dependent Types": [[22, "typing-typevar-flexible-typing-for-context-dependent-types"]], "typing.final: Declare That a Method Should Not Be Overridden": [[22, "typing-final-declare-that-a-method-should-not-be-overridden"]], "unyt: Manipulate and Convert Units in NumPy Arrays": [[58, "unyt-manipulate-and-convert-units-in-numpy-arrays"]], "virtualenv-clone: Create a Copy of a Virtual Environment": [[62, "virtualenv-clone-create-a-copy-of-a-virtual-environment"]], "watchfiles: Rerun Code When a File Changes": [[65, "watchfiles-rerun-code-when-a-file-changes"]], "watermark: Get Information About Your Hardware and the Packages Being Used within Your Notebook": [[67, "watermark-get-information-about-your-hardware-and-the-packages-being-used-within-your-notebook"]], "whereami: Use Machine Learning to Predict Where You Are": [[65, "whereami-use-machine-learning-to-predict-where-you-are"]], "whylogs: Data Logging Made Easy": [[48, "whylogs-data-logging-made-easy"]], "wordfreq: Estimate the Frequency of a Word in 36 Languages": [[49, "wordfreq-estimate-the-frequency-of-a-word-in-36-languages"]], "yarl: Create and Extract Elements from a URL Using Python": [[44, "yarl-create-and-extract-elements-from-a-url-using-python"]]}, "docnames": ["Chapter1/Chapter1", "Chapter1/class", "Chapter1/code_speed", "Chapter1/datetime", "Chapter1/dictionary", "Chapter1/function", "Chapter1/good_practices", "Chapter1/list", "Chapter1/number", "Chapter1/python_new_features", "Chapter1/set", "Chapter1/string", "Chapter2/Chapter2", "Chapter2/collections", "Chapter2/dataclasses", "Chapter2/functools", "Chapter2/itertools", "Chapter2/operator", "Chapter2/pathlib", "Chapter2/pydantic", "Chapter2/pydash", "Chapter2/sympy", "Chapter2/typing", "Chapter3/Chapter3", "Chapter3/change_values", "Chapter3/combine_dataframes", "Chapter3/create_dataframe", "Chapter3/data_types", "Chapter3/date_time", "Chapter3/filter", "Chapter3/get_values", "Chapter3/sort_dataframe", "Chapter3/string", "Chapter3/style_dataframe", "Chapter3/testing", "Chapter3/transform_dataframe", "Chapter4/Chapter4", "Chapter4/Numpy", "Chapter5/Chapter5", "Chapter5/SQL", "Chapter5/better_pandas", "Chapter5/deltalake", "Chapter5/duckdb", "Chapter5/feature_engineer", "Chapter5/feature_extraction", "Chapter5/get_data", "Chapter5/llm", "Chapter5/machine_learning", "Chapter5/manage_data", "Chapter5/natural_language_processing", "Chapter5/polars", "Chapter5/sharing_downloading", "Chapter5/spark", "Chapter5/speed_up_code", "Chapter5/testing", "Chapter5/time_series", "Chapter5/visualization", "Chapter6/Chapter6", "Chapter6/alternative_approach", "Chapter6/best_python_practice_tools", "Chapter6/better_outputs", "Chapter6/code_review", "Chapter6/env_management", "Chapter6/git_github", "Chapter6/logging_debugging", "Chapter6/workflow_automation", "Chapter7/Chapter7", "Chapter7/jupyter_notebook", "README", "how_to_read"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["Chapter1/Chapter1.md", "Chapter1/class.ipynb", "Chapter1/code_speed.ipynb", "Chapter1/datetime.ipynb", "Chapter1/dictionary.ipynb", "Chapter1/function.ipynb", "Chapter1/good_practices.ipynb", "Chapter1/list.ipynb", "Chapter1/number.ipynb", "Chapter1/python_new_features.ipynb", "Chapter1/set.ipynb", "Chapter1/string.ipynb", "Chapter2/Chapter2.md", "Chapter2/collections.ipynb", "Chapter2/dataclasses.ipynb", "Chapter2/functools.ipynb", "Chapter2/itertools.ipynb", "Chapter2/operator.ipynb", "Chapter2/pathlib.ipynb", "Chapter2/pydantic.ipynb", "Chapter2/pydash.ipynb", "Chapter2/sympy.ipynb", "Chapter2/typing.ipynb", "Chapter3/Chapter3.md", "Chapter3/change_values.ipynb", "Chapter3/combine_dataframes.ipynb", "Chapter3/create_dataframe.ipynb", "Chapter3/data_types.ipynb", "Chapter3/date_time.ipynb", "Chapter3/filter.ipynb", "Chapter3/get_values.ipynb", "Chapter3/sort_dataframe.ipynb", "Chapter3/string.ipynb", "Chapter3/style_dataframe.ipynb", "Chapter3/testing.ipynb", "Chapter3/transform_dataframe.ipynb", "Chapter4/Chapter4.md", "Chapter4/Numpy.ipynb", "Chapter5/Chapter5.md", "Chapter5/SQL.ipynb", "Chapter5/better_pandas.ipynb", "Chapter5/deltalake.ipynb", "Chapter5/duckdb.ipynb", "Chapter5/feature_engineer.ipynb", "Chapter5/feature_extraction.ipynb", "Chapter5/get_data.ipynb", "Chapter5/llm.ipynb", "Chapter5/machine_learning.ipynb", "Chapter5/manage_data.ipynb", "Chapter5/natural_language_processing.ipynb", "Chapter5/polars.ipynb", "Chapter5/sharing_downloading.ipynb", "Chapter5/spark.ipynb", "Chapter5/speed_up_code.ipynb", "Chapter5/testing.ipynb", "Chapter5/time_series.ipynb", "Chapter5/visualization.ipynb", "Chapter6/Chapter6.md", "Chapter6/alternative_approach.ipynb", "Chapter6/best_python_practice_tools.ipynb", "Chapter6/better_outputs.ipynb", "Chapter6/code_review.ipynb", "Chapter6/env_management.ipynb", "Chapter6/git_github.ipynb", "Chapter6/logging_debugging.ipynb", "Chapter6/workflow_automation.ipynb", "Chapter7/Chapter7.md", "Chapter7/jupyter_notebook.ipynb", "README.md", "how_to_read.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [1, 3, 5, 9, 10, 14, 18, 21, 24, 26, 27, 28, 31, 33, 34, 39, 40, 48, 49, 50, 54, 56, 58, 60, 61, 62, 63, 65, 68], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 19, 20, 21, 24, 25, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 67], "00": [3, 28, 34, 35, 37, 40, 41, 43, 44, 45, 47, 49, 52, 54, 55, 56, 64, 65, 67], "000": [5, 6, 11, 32, 41, 42, 55, 60], "0000": 56, "000000": [40, 43, 47, 50, 55], "00000000000000000000": 41, "00000000000000000001": 41, "000001": 64, "000005": [34, 54], "0001": 64, "000135": 49, "00015": [], "000239": 64, "001": [16, 44, 45, 53, 56, 58], "0010": 56, "0014": 56, "0016": 56, "0019392203169556147": 47, "002": 55, "002117": 64, "0032": 56, "003217": 64, "0036884": 44, "0036960": 44, "0037316": 44, "0037897": 44, "0038504": 44, "004268080428952992": 47, "0049831": 44, "005": [34, 45, 54], "005577343029862753": 49, "005625421684874428": 49, "005720802001625725": 49, "0057638598847672895": 49, "0057704732354528256": 49, "0058020704180533665": 49, "00588900633935797": 49, "005m": 5, "006": 45, "006001769831975551": 49, "006108581738112714": 49, "0062": 45, "006207025740053": 49, "0062471104261567646": 49, "00631255726099582": 49, "006363054536286731": 49, "006440052002290031": 47, "0064590662792896585": 49, "006472264420227003": 49, "006732791659778612": 49, "006736358725450975": 49, "006986923839656088": 49, "0071321814454188845": 49, "0071658097402482355": 49, "007269166754797321": 49, "007348381606302089": 49, "007754136375078246": 49, "007899578915680364": 49, "0079433": 44, "007993957748991226": 49, "008": 43, "008701297355282599": 49, "00879797125029002": 49, "00894871700074873": 47, "008992489388365084": 49, "008m": 5, "00926068750809855": 49, "009m": 5, "00_afctbrp26zwk0onprfkbpjlrlfdwwlmlv1_xlkevlke_yw": 45, "00_afdikcbbddzcymhxd": 45, "00am": 55, "00e": 56, "00m": [34, 54], "01": [3, 6, 16, 28, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 52, 54, 55, 56, 64], "010264402444887343": 49, "01028": 44, "010318688564543007": 49, "01052632": 43, "010652628093406865": 49, "01073417039148073": 49, "010814499200447799": 49, "0109992": 47, "0109999": 47, "0113360913460819": 49, "0119965": 47, "0119977": 47, "0119994": 47, "012": [34, 44, 54], "0120046": 47, "01200463023637096": 47, "012280939589777724": 49, "0129": 47, "01296513058488493": 49, "0130005": 47, "0130029": 47, "01351351": 43, "0139935": 47, "014": 49, "0140011": 47, "01474934": 55, "0150008": 47, "015048608360916427": 49, "015242": 45, "01574803": 43, "0160074": 47, "01637819364726209": 49, "0166": 47, "016667": 43, "0169988": 47, "0170023": 47, "0170043": 47, "018": 44, "019": 44, "019531": 55, "019632186075287533": 49, "019989": 47, "0199995": 47, "02": [11, 28, 32, 34, 41, 42, 43, 44, 45, 47, 49, 52, 54, 55, 56, 60], "020": 55, "0200036": 47, "02083333": 43, "02325581": 43, "024695": 1, "02631579": 43, "0270066": 47, "027081": 50, "02739726": 43, "02777778": 43, "028": 43, "0295": 47, "03": [3, 11, 28, 32, 41, 42, 43, 45, 49, 52, 55, 56, 64], "0310006": 47, "03125": 43, "031597": 43, "032": 43, "033": 47, "03378378": 43, "0350015": 47, "037": 44, "037187": 55, "03726": 50, "03738318": 43, "038615": 62, "04": [28, 41, 43, 44, 45, 46, 47, 52, 53, 55, 56, 60], "042274": 50, "0429988": 47, "043685": 43, "0461": [34, 54], "047": 55, "047306": 50, "04761905": 43, "05": [19, 28, 29, 34, 40, 41, 43, 45, 47, 48, 49, 52, 54, 55, 56, 64, 67], "05343511": 43, "0537": 49, "053z": 45, "05405405": 43, "055": 55, "05555556": 43, "0559971": 47, "056": [43, 44], "0560005": 47, "056641": 55, "057614": 41, "05882353": 43, "06": [28, 40, 43, 45, 47, 52, 55, 56, 64, 65], "06087": 45, "06207145": 55, "0625": 43, "063034": 55, "06451613": 43, "06542056": 43, "066779": 55, "067039": 55, "0672": 47, "067384": 43, "068359": 55, "069": 49, "06976744": 43, "06b1cf": 47, "07": [28, 34, 41, 43, 44, 45, 52, 54, 55, 56, 60], "0700": 45, "07142857": 43, "07317073": 43, "0733945": 43, "074326": 55, "0770546": 44, "07811": 45, "079080": 50, "08": [11, 32, 34, 43, 47, 49, 55, 56, 64, 65], "08088235": 43, "08108108": 43, "082172": 55, "086000": 43, "089": 44, "09": [11, 28, 32, 34, 41, 43, 44, 45, 47, 52, 53, 55, 56, 67], "090": 55, "093965": 50, "094055": 41, "094072": 55, "094401": 43, "095": 45, "095609": 62, "09756098": 43, "098": 44, "09821429": 43, "09861229": 43, "099": 44, "0_game_team_games_h": 49, "0_to_1": 59, "0j": 62, "0kb": 41, "0m": [34, 39, 40, 49, 52, 53, 54, 60, 61, 62, 64], "0m1": 61, "0m14": 61, "0m18": 61, "0m5": 61, "0m6": 61, "0m89": 61, "0m9": 61, "0mand": 39, "0mbinari": 39, "0mexpect": 39, "0mkeyword": 39, "0monli": 39, "0mrun": [34, 54], "0mselect": 39, "0mt": 61, "0mtest_benchmark_exampl": [34, 54], "0mtest_fixtur": [34, 54], "0mtest_hypothesi": [34, 54], "0mtest_parametr": [34, 54], "0mtest_repeat_exampl": [34, 54], "0x109d1c860": 60, "0x10b683730": 56, "0x10d69da80": 61, "0x137d39650": 56, "0x15b25a8e0": 55, "0x16b631430": 47, "0x7f027895d1f0": 20, "0x7f279588f430": 64, "0x7f27958b7af0": 64, "0x7f27958bfb80": 64, "0x7f27958bfca0": 64, "0x7f279676e040": 64, "0x7f9880491310": 20, "1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 67], "10": [1, 2, 5, 6, 11, 16, 19, 22, 26, 28, 30, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 58, 60, 61, 62, 64, 65, 67], "100": [1, 5, 6, 7, 11, 13, 16, 24, 26, 27, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 58, 68], "1000": [2, 5, 6, 7, 13, 26, 41, 42, 43, 44, 46, 47, 50, 52, 55, 56], "10000": [6, 7, 15, 40, 41, 50, 53], "100000": [1, 19, 26, 34, 54], "1000000": [2, 8, 27, 50], "100000000": [11, 32], "10000001234": 48, "10000001235": 48, "10000001236": 48, "10000001237": 48, "10000001238": 48, "1000001": 50, "100003": 1, "1000x300": 49, "1000x800": 44, "1001": 52, "1002": 52, "10020": 55, "1003": [41, 52], "1004": 52, "1005": 52, "100504": 43, "100531": 43, "100_000_000": 26, "100k": 68, "100x": 61, "101": [44, 55], "101562": 55, "101658": 55, "10176": 43, "1020": 50, "1024": [27, 40, 48, 49], "103": [24, 55], "10381": 55, "10383": 55, "10385": 55, "104": [34, 54, 58], "104022926303756": 45, "104257": 43, "105": 43, "105506396148790": 45, "106": [26, 34, 54], "107": [43, 52], "10789": 43, "107937": 49, "108": 42, "1080": 62, "108545": 55, "1095": 49, "10969": 43, "10_000": [2, 55, 65], "10_000_000": 50, "10pt": 60, "10th": 49, "11": [1, 2, 3, 6, 11, 22, 24, 26, 28, 30, 32, 34, 35, 39, 40, 41, 43, 45, 47, 49, 50, 52, 54, 55, 56, 58, 60, 61, 62, 64], "110": 2, "1100": 52, "111": [48, 55], "11111111": 37, "112": [40, 49], "11206897": 43, "1125": 49, "112505": 55, "113": [26, 45, 47], "11349": 55, "1142": 29, "1143": 29, "1144": 29, "1145": 29, "1145382": 44, "1146": 29, "114933": 55, "1156": 40, "1165738010": 64, "1173": 43, "118": [40, 55], "119": [40, 47, 55], "1190": 43, "11931": 55, "11th": 49, "12": [1, 2, 8, 9, 11, 18, 22, 26, 27, 28, 30, 32, 34, 35, 40, 41, 43, 45, 48, 49, 50, 52, 53, 54, 55, 56, 60, 61, 62, 64], "120": [26, 34, 43, 45, 54, 55, 64], "1200": [42, 52], "12026": 55, "121": [40, 55, 56], "122": [43, 56], "12216": 50, "1224": 49, "1225": 50, "12251": 55, "12276": 43, "12277": 43, "123": [2, 6, 14, 43, 47, 48, 49, 55, 59], "1234": 14, "12345": 14, "123456": 48, "1235111617": 45, "123abc456": 16, "125": [19, 55], "125000": 15, "126": 45, "12647": 43, "1265": 50, "1266": 43, "127": [40, 43, 47, 50], "12741": 43, "128": [43, 55], "128635": 45, "128kbp": 65, "129": [40, 43], "12m": 41, "12t05": 45, "12t09": 67, "13": [1, 24, 26, 28, 30, 34, 43, 45, 46, 47, 49, 50, 52, 54, 55, 56, 60, 64], "130": 43, "131": 43, "132": [27, 40, 43, 44, 55], "133": [43, 65], "1332": 27, "133819": 55, "134": [43, 65], "13410": 43, "13420": 43, "1345": 48, "13485": 43, "135": [40, 43, 45, 65], "135284": 55, "136": [40, 43, 65], "136579": 50, "137": [43, 45], "138": [43, 45], "139": [43, 65], "14": [6, 22, 26, 28, 30, 34, 41, 43, 44, 45, 49, 52, 54, 55, 56, 60, 61, 64], "140": [43, 52, 55, 65], "1400": 47, "141": [43, 45], "14112001": [], "141m1": 61, "141m3": 61, "142": 43, "142569": 62, "143": [43, 50, 53], "1431": 43, "14395": 55, "144": 43, "1443": 49, "1445": 63, "144p": 65, "145": 43, "14530": 48, "14587": 55, "146": [43, 53, 55], "146385": 1, "14672": 55, "14680": 43, "14681": 43, "146829": 43, "148": [40, 41, 55], "1487": 43, "149": 27, "14953271": 43, "15": [1, 8, 11, 21, 26, 28, 30, 32, 34, 37, 41, 43, 45, 47, 49, 50, 52, 54, 55, 56, 64], "150": [6, 27, 45, 50, 52, 55, 68], "1500": [42, 52], "15000": 15, "150000": 15, "1500000": 50, "151": [49, 61], "15141b": 56, "152": 61, "152762": 43, "154": 45, "154365": 41, "15478": 43, "15479": 43, "155": [45, 48], "1555": 48, "156275": 62, "15793": 55, "157b": 41, "15824": 43, "1588997": 44, "15m": [53, 61], "15mcalculate_statist": 61, "15mdata": 61, "15mis_even": 53, "15mlen": 61, "15mnumber": 61, "15mresult": 61, "15msum": 61, "15t09": 53, "15th": [46, 49], "16": [1, 7, 8, 16, 26, 28, 34, 40, 43, 45, 47, 49, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 67], "160": [55, 65], "16083": 43, "160kbp": 65, "1610": 41, "161048": 43, "161895": 1, "162": 61, "162101": [34, 54], "162911": 55, "163": 61, "16348": 43, "16349": 43, "164": [55, 61], "164d85df98e7": 45, "16518": 43, "16519": 43, "16599": 55, "166365": 43, "166597835": 50, "166653474": 50, "166660653": 50, "166666666666666": 55, "16666666666666666": 55, "166667": 30, "166998": 47, "167938": 55, "168": [40, 49], "169992": 50, "17": [1, 3, 30, 34, 40, 43, 45, 46, 49, 52, 54, 55, 56, 60, 61, 65], "170": 50, "170436": 43, "171": 56, "172": 56, "1720": 43, "173": 60, "174741": 43, "176": [28, 53, 55, 56], "176045": 55, "178": [55, 56], "179409": 43, "17th": 55, "18": [1, 21, 28, 34, 41, 43, 45, 49, 52, 54, 55, 56, 60, 61, 62, 64, 65], "180": [1, 52, 55, 56], "18000": 49, "181": 41, "18172": 45, "182005": 43, "1823": 49, "182476": 55, "18339": 55, "183821": 43, "184": [55, 60], "186204": 43, "1865479429": 64, "186m": 61, "186ma": 61, "186mmean": 61, "189": 2, "18910652": 55, "18m": 41, "19": [26, 28, 34, 42, 43, 52, 54, 55, 56, 61, 62, 64, 67], "19008264": 43, "190805": 55, "191406": 55, "191879": 47, "192": [40, 49, 56], "1927": 45, "193": 43, "194": 55, "1948": 45, "1949": [40, 45], "195": 43, "1954": 55, "1956": 40, "1957": 40, "19575079_10103832396388711_8894816584589808440_o": 45, "1958": 40, "1959": 40, "196": 47, "1960": [40, 55], "1969": 55, "197": 55, "1975": 60, "1977": 60, "198": 43, "1981": 26, "1986": 43, "198796161": 2, "1988": [42, 43], "1989": 43, "1990": [4, 26], "1991": 4, "1993": 4, "1995": 4, "1997": 4, "1998": [45, 55], "1999": 4, "19t03": 45, "1_000": 50, "1_000_000": [8, 27, 41, 50], "1_key_clipper_chip_encrypt": 49, "1_to_the_is_of": 49, "1a": [34, 54, 62], "1d3a": 41, "1e": [16, 34, 47, 54, 55], "1e20d72afccf450faa3b8a9806a97e83": 47, "1f": [11, 32, 33], "1gram": 49, "1ji1cmxqnwsmc": 51, "1m": [22, 34, 40, 41, 49, 54, 61, 62], "1m1": [34, 54, 62], "1m100": [34, 54], "1m2": [34, 54, 62], "1m2021": 62, "1m241": 62, "1m3": [34, 54], "1m4": [34, 54], "1m_______________________": [34, 54], "1ma": 62, "1mbecaus": 62, "1mcapitalis": 39, "1mcollect": [34, 54], "1mcount": 40, "1mdict": 62, "1mexcept": 62, "1mfailur": [34, 54], "1mh": 65, "1mhttp": 49, "1misland": 40, "1mlayout": 39, "1mmy_cod": 61, "1mpackag": 62, "1mpass": [34, 54], "1mrais": 62, "1mreturn": 62, "1mself": 62, "1msolverproblemerror": 62, "1mspeci": 40, "1msqlfluff_exampl": 39, "1mstructur": 39, "1msuccess": [34, 54], "1mtest": [34, 54], "1mtest_calculation_without_approx": [34, 54], "1nnan48231023": 45, "1secretpw": 65, "1st": [34, 54], "1w": 28, "2": [1, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 67], "20": [1, 5, 6, 28, 30, 34, 43, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 61, 62, 65], "200": [1, 27, 34, 41, 43, 47, 50, 52, 53, 54, 55, 60], "2000": [4, 26, 45, 52, 55], "200017": 50, "2001": 55, "2002": [26, 45, 55], "2004": [26, 45, 55], "2006": [45, 55], "2007": [43, 55], "2008": [26, 45], "2010": [26, 43, 55], "2011": [45, 56], "2012_2": 60, "2013": 55, "2014": [43, 55], "2015": [26, 45, 55], "2016": [43, 55], "2017": [48, 55], "20177": [34, 54], "2018": [26, 28, 45], "2019": [28, 43, 45, 46, 49, 56], "2019th": 49, "202": 61, "2020": [3, 28, 52, 55, 56, 62], "2021": [6, 11, 28, 32, 39, 43, 47, 53, 55, 62, 67], "2022": [3, 11, 28, 32, 45], "20220309": 45, "2023": [41, 42, 46, 49, 52, 55, 64], "2024": [19, 28, 34, 41, 45, 47, 52, 54, 55, 64], "2025": [40, 46, 49, 64], "2026100": 55, "2032_2": 60, "2038": 43, "204": 24, "20407": 43, "204998": 47, "204m": 61, "20535714": 43, "205742": 43, "20640": 53, "2081586": 45, "2084541889": 60, "20answer": 45, "20by": 45, "20hard": 45, "20learn": 45, "20short": 45, "20the": 45, "20to": 45, "20work": 45, "21": [1, 28, 30, 40, 41, 43, 45, 47, 49, 55, 56, 60, 62], "210": 55, "211827399669452": 55, "212": 55, "213": 55, "2145_1": 60, "2147483647": 27, "2147483648": 27, "21517": 55, "216": 50, "2175400": 55, "218": 55, "218793605631347": 55, "219699": 55, "21986": 55, "21st": 43, "21t10": 45, "22": [6, 13, 26, 28, 30, 34, 41, 43, 45, 47, 50, 52, 54, 55, 56, 62, 65, 67], "220121": 41, "2202500": 55, "22034": 55, "221": 37, "22129": 55, "222": [37, 55], "2220": [34, 54], "22222222": 37, "22412": 55, "2242": 43, "224745": 43, "225": 53, "2251799813685248": 8, "225e4e46e3a0": 41, "226": 42, "226040": 55, "2265800": 55, "227314": 43, "228": 45, "2281": 41, "22902": 55, "22996": 55, "23": [3, 28, 30, 41, 43, 45, 46, 47, 50, 52, 55, 56, 58, 60, 61, 64], "230": 55, "2300": 43, "2303900": 55, "23043": 55, "23076923": 43, "23127": 55, "2322": [34, 54], "232699939166196e": 47, "234705": 43, "236": 55, "237": 44, "2386": 29, "2387": 29, "2388": 29, "2389": 29, "239": 44, "2390": 29, "23974": 55, "239798": 43, "24": [28, 41, 43, 44, 45, 47, 52, 55, 56, 58, 60, 64], "240000324": 16, "240p": 65, "242": [49, 55, 65], "242022": 43, "242640687119285": 21, "243": 65, "24380": 55, "243830": 43, "244": 65, "244295": 43, "24458": 55, "24516": 55, "24563": 55, "245m": 61, "247": [55, 65], "248": 55, "249": [45, 65], "249322": 50, "2494": 43, "2495": [34, 54], "24a5cf2f": 41, "24m": 53, "25": [21, 26, 28, 34, 37, 39, 40, 42, 43, 45, 47, 49, 50, 52, 53, 54, 55, 56, 58, 61], "250": [1, 65], "2500": 3, "25000": 15, "250184": 50, "2509": 50, "251": 65, "2512": 43, "253": 55, "2537": 41, "253906": 55, "253e53f9": 45, "255": 43, "2550": 52, "255311": 62, "255319": 55, "255826": 62, "257812": 55, "258": [34, 43, 54, 55], "259": [34, 45, 54], "25959": 55, "25990": 55, "25it": 43, "25l": 64, "26": [26, 34, 43, 45, 49, 54, 55, 56], "260": [43, 45, 55], "26086957": 43, "261": [43, 53], "261667": 43, "262997": 47, "2630": 31, "264": [45, 68], "264017": 55, "264253": 55, "265": 53, "266427": 55, "266871": 43, "2685753618191566": 45, "2686": [34, 54], "27": [26, 27, 28, 34, 41, 43, 45, 54, 55, 56, 67], "2700": 55, "2706": 47, "272": 45, "2724415914984484": 55, "2732": 43, "274": 45, "274013": 55, "275": 52, "2755098589": 16, "27600697": 55, "27666666666667": 52, "278": 65, "278115": 41, "28": [34, 45, 52, 54, 55, 56], "280": 60, "280000": 15, "28084": 22, "2815": 43, "284": [43, 45], "2844": [34, 54], "285": 49, "286": [34, 54], "288": 45, "288779": 55, "28t03": 45, "29": [34, 39, 41, 43, 45, 47, 49, 50, 55, 56, 60, 64], "2906": 42, "292": 41, "2932": 43, "295m": 41, "297": [34, 54], "299009": 55, "2995": 43, "29ed": 41, "2_000_000": 26, "2_idjits_ites_cheek_danc": 49, "2a": [60, 62], "2b5037da7d78258f167d5a3f8dc24edb": 45, "2d": [28, 49, 56], "2f": [11, 19, 27, 32, 47, 49, 50], "2fbd9e05d992eb74f7afcccec02581fc": 45, "2gram": 49, "2k": [34, 54, 62], "2kdownload": [34, 54], "2m": [53, 62], "2m237": 62, "2m238": 62, "2m239": 62, "2m240": 62, "2m242": 62, "2m243": 62, "2m244": 62, "2m245": 62, "2mint64": 40, "2mpanda": 53, "2mpyinstrument_exampl": 53, "2mrunpi": 53, "2mstring": 40, "3": [1, 2, 5, 6, 8, 11, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67], "30": [1, 3, 4, 11, 19, 21, 26, 32, 34, 39, 41, 42, 43, 44, 45, 47, 49, 50, 52, 54, 55, 56, 58, 60, 64, 65], "300": [1, 43, 47, 50, 52, 60], "30000000000000004": [34, 54], "301": 43, "30138168803582194": 55, "301684": 55, "302": [34, 47, 54], "3025": 40, "302m": 5, "304": 3, "306549": 43, "30808": 45, "309": [24, 34, 54], "30950555": 55, "30fp": 65, "30m": 39, "31": [11, 32, 34, 41, 43, 45, 49, 54, 56, 60, 61, 62, 64], "310": 55, "310000": 15, "310692": 55, "31119": 55, "3116": 55, "312257846_10114737758665291_6588360857015169674_n": 45, "3123": [11, 32], "3128": 62, "313": 47, "314174": 62, "31476": 49, "31581918867947": 52, "316": 49, "31701": 50, "317465": 1, "3178150741": 1, "318558": 62, "319": [43, 64], "3191997974645346e": 47, "3192": 45, "319769c2226c": 41, "31m": [34, 54, 61, 64], "31m0": [34, 53, 54], "31m100": [34, 54], "31me": [34, 54], "31me501": 61, "31merror": [22, 61, 64], "31mf": [34, 54], "31mf401": 61, "31mf821": 61, "31mf841": 61, "31mfail": [34, 39, 54], "31mfound": [22, 61], "31mi001": 61, "31mtest_approx": [34, 54], "31mtest_floats_are_commut": [34, 54], "31mtest_hypothesi": [34, 54], "31mtest_pick": [34, 54], "31mtypeerror": 61, "32": [16, 41, 42, 43, 45, 47, 52, 55, 56, 58, 60, 62], "321": [34, 54], "322947056533328": 55, "323": 45, "324": 40, "3246": 43, "325433": 41, "326": 45, "327": 55, "32767": 27, "32768": 27, "327966": 43, "328": [34, 54], "3288": 56, "32932": 50, "32m": [34, 52, 54, 62], "32m1": [34, 54, 62], "32m100": [34, 54], "32m2": [34, 54, 62], "32m2021": 62, "32m23": [34, 54], "32m3": [34, 54], "32m4": [34, 54], "32m42": [34, 54], "32m62": [34, 54], "32m81": [34, 54], "32madeli": 40, "32mbisco": 40, "32mchinstrap": 40, "32mdream": 40, "32mgentoo": 40, "32mpass": [34, 54], "32msuccess": 22, "32mtorgersen": 40, "32munsupport": 61, "33": [26, 34, 37, 41, 43, 45, 47, 49, 54, 55, 60], "33131": 55, "332031": 55, "332m": 5, "333": 47, "33300": 43, "33324340": 45, "333333": 30, "33333333": 37, "3333333333333333": 55, "33381149": 45, "334": 55, "335": 64, "335181": 55, "336": 43, "3364": 40, "33648": 43, "337321": 55, "3378": 47, "33806937": 55, "33m": [22, 34, 54, 61], "33m3": 61, "33m8": 61, "33mskip": [34, 54], "33mx": [34, 54], "34": [26, 33, 41, 43, 45, 55, 56, 62], "340": 45, "341": 61, "3422": 43, "343": 55, "344": 55, "345": 48, "346": 53, "348": 45, "34m": [39, 49, 60], "34m0": 62, "34m4": 62, "34m5": 62, "34mdepend": 62, "34mdescript": 62, "34mexampl": 65, "34minstal": 62, "34ml": 39, "34mname": 62, "34mpend": 62, "34mremov": 62, "34mresolv": 62, "34mtraceback": 61, "34mupdat": 62, "34mversion": 62, "34mwrite": 62, "35": [26, 30, 34, 39, 42, 43, 44, 50, 52, 54, 55, 56, 58, 62], "3500": [34, 54], "351": 41, "351636": 41, "352": 43, "3526": 45, "3531": 41, "3539823": 43, "354708": 50, "355262": 43, "35652": 43, "357": 55, "357344": 55, "3583": 43, "3592": 55, "35960884": 27, "35m": 61, "35mcalculate_statist": 61, "36": [26, 43, 45, 46, 47, 55, 56, 58], "360": 45, "3600": 58, "3609": 55, "360p": 65, "360px": 56, "361": 40, "361404": 47, "3628": 55, "366550": 62, "367": 50, "368771": 50, "36m": [34, 54, 61], "36m124": 40, "36m44": 40, "36m52": 40, "36m56": 40, "36m68": 40, "36m_solv": 62, "36mnumpi": 62, "36mpanda": 62, "36mpytest_sugar_exampl": [34, 54], "36mpython": 62, "36mpytz": 62, "36msix": 62, "36mtypehint": 61, "37": [42, 43, 45, 49, 52, 56], "3721": 40, "373": 63, "3752999689475413": 8, "3756": 55, "3760": 43, "3766": 41, "378": 56, "3789": 43, "37m": [34, 54], "37mexampl": 65, "38": [34, 42, 43, 45, 52, 53, 54, 55, 61, 64], "380": 1, "383008": 55, "383442": 55, "384": 55, "38629436": 43, "386986": 55, "3872": [34, 54], "387298": 1, "39": [3, 34, 43, 45, 49, 54, 55, 62], "393167": 43, "393416": 55, "3939": 40, "394": 55, "395": 45, "39m": [61, 62, 65], "39m_packag": 62, "39maggregate_package_nod": 62, "39me": 62, "39minstal": 62, "39moverrid": 62, "39moverrideneed": 62, "39mpackag": 62, "39mremov": 62, "39mresult": 62, "39msolve_in_compatibility_mod": 62, "39msolvefailur": 62, "39msolverproblemerror": 62, "39muse_latest": 62, "3_israel_israeli_jews_arab": 49, "3a": 62, "3f": [5, 47, 49, 60], "3f072ef1": 41, "3gpp": 65, "3m": [34, 54], "3rd": [34, 54], "3wb": 45, "3x": 67, "4": [1, 2, 5, 6, 7, 8, 9, 11, 13, 15, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 67], "40": [26, 43, 45, 47, 50, 52, 55, 56, 58, 65], "400": [42, 52, 55], "401": 55, "404": 56, "4040": [40, 52], "4041": [40, 52], "40455": 43, "405": 55, "4050": 47, "406": 60, "4076731999": 29, "40845": 43, "409": 55, "409000": 43, "40m": [34, 54], "41": [1, 26, 42, 43, 49, 50, 55, 61], "410226": 55, "411": [6, 55], "412121": 50, "413": 55, "414": [26, 27, 55], "4142135623730951": 1, "414214": [40, 43], "415217": 55, "4169e1": 56, "4171_1": 60, "419": 55, "41947969": 55, "4197": 43, "41e1": 41, "42": [1, 6, 26, 27, 43, 47, 50, 52, 55, 56], "420": 45, "420000": 15, "42001e": 65, "421": 55, "422": 55, "4225": 40, "423": [55, 56], "4234_1": 60, "423655": 55, "423992": 55, "424": 26, "425": 55, "425m": 5, "426": 47, "42613": 43, "4278": 41, "428": [50, 55], "43": [43, 49, 52], "4300": 50, "431778579": 24, "432": 27, "432874": 55, "4335": 45, "433z": 45, "4345": 45, "434642": 62, "435": 55, "43567": 43, "437587": 55, "438535": 67, "439": 55, "439155": 1, "439453": 55, "44": [44, 49, 55], "441": [40, 43], "4416": 53, "442": 55, "4421": 40, "444": 55, "44444444": 37, "446": 49, "4493": 43, "45": [11, 27, 32, 42, 43, 47, 48, 50, 52, 55, 56, 64], "450": 52, "45000": [15, 43, 52], "4501": [34, 54], "451": 55, "451754": 43, "454151": 55, "455078": 55, "4555": 41, "456": 45, "45677": 43, "4572": 40, "458": 55, "458242": 55, "458905fc5c630d7a1f7a510a04e5e0f9": 41, "45891": 43, "459": [43, 55], "4592": 43, "46": [1, 26, 43, 45, 50, 55, 64], "460": 55, "46107": 43, "462": [49, 55], "463z": 45, "46428": 43, "4661": 49, "467803": 55, "467988": 55, "469": 44, "47": [26, 34, 43, 50, 52, 54, 55, 56], "470": 45, "4719861e": 41, "472": [44, 55], "473": 45, "4733": 43, "474": 55, "474813": 62, "475": 55, "4754": 41, "4761": 40, "477": 55, "47834174060653": 52, "479": 55, "48": [37, 43, 52, 53, 55, 56], "480": 55, "480789": 43, "480p": 65, "481": 55, "482": 55, "483280": 55, "485": 47, "4861": 43, "48673081656052": 52, "488": 55, "4884": 49, "489": 55, "489598": 47, "48kbp": 65, "49": [26, 34, 37, 40, 41, 43, 50, 52, 54, 55, 56, 61], "4900": 40, "4902": 49, "490234": 55, "490809": 55, "491": 55, "492": 55, "4925": 43, "493112": 55, "494": 41, "495": 55, "496": 55, "497": 55, "4975": 49, "498": 55, "499": 42, "499999": 50, "49f8": 41, "4ac": 60, "4ca6": 41, "4d400c": 65, "4d4015": 65, "4d401e": 65, "4d401f": 65, "4e0f": 41, "4f": [19, 49], "4j0ida0ekyqqzzbc93juuuubvh": 48, "5": [1, 2, 3, 5, 6, 7, 8, 9, 11, 14, 15, 16, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 67], "50": [1, 5, 34, 39, 42, 43, 45, 46, 47, 52, 54, 55, 56], "500": [1, 42, 45, 49, 50, 52, 55, 60], "5000": [15, 34, 41, 47, 49, 52, 54], "50000": [26, 43, 52], "500000": [30, 43, 50], "500001": 50, "500002": 50, "500003": 50, "500004": 50, "5001": [34, 54], "501305": 55, "5019": 41, "502": 45, "50332": 43, "503605": 49, "50377": 50, "504": 55, "5041": 40, "505": [43, 55], "506": [55, 60], "507557": 43, "507e": 56, "508": 55, "508e": 56, "509": 55, "50kbp": 65, "51": [26, 43, 47, 52, 56], "511": 55, "512015": 62, "512281": 47, "5140": 40, "51666666666665": 52, "516963": 47, "517": 49, "518924": 47, "52": [26, 41, 43, 52, 55, 56], "520": 45, "5200": 50, "520305": 55, "521": 55, "522": 45, "52283": 43, "5232": 49, "5236": 56, "52416": 43, "5249": 49, "525": 55, "526": 55, "527": [49, 55], "528352": 50, "529": [40, 44, 55], "529672": 55, "53": [34, 43, 50, 52, 54, 55, 56], "530": 55, "530a1bc71a986415176606ea377961d2ce381e5d": 45, "53127": 43, "531876": 50, "5329": 40, "534": 55, "535": 55, "538": 55, "54": [26, 45, 49, 52, 53, 55], "5432": [34, 42, 54], "544": 55, "544883": 55, "546": 55, "5485": 43, "548814": 55, "549": 55, "549167": 43, "5495": 26, "5498": [34, 54], "54b9bfa9": 45, "55": [43, 45, 47, 49, 52, 55, 56], "550000": 43, "550958": 55, "551": 55, "5510": 43, "553524": 50, "555": [14, 55], "55555556": 37, "556802": 43, "559": 55, "559522": 55, "56": [41, 43, 45, 47, 53, 55], "560815": 50, "561": 49, "563": [47, 55], "5632": 49, "563737": 26, "564": 55, "565": 49, "566370614359172": 9, "567": 55, "568": 55, "569": 55, "5690374970436096": 49, "57": [1, 43, 45, 50, 52, 55, 56, 60], "57013": 43, "570164": 55, "5712": 41, "57123": 43, "5714": 40, "5715": 41, "571580": 41, "5717": 41, "572": 58, "57286429": 55, "574": 45, "574744": 55, "5776": 40, "579": 49, "57928": 43, "57aff36d5f6d": 64, "57k": 50, "58": [26, 43, 45, 47, 50, 52, 55, 56, 58, 60, 64, 67], "580": 41, "5811388300841898": 1, "581139": 43, "581506": 55, "582": 55, "584": 55, "5843": [34, 54], "5849": 43, "585": 45, "586": 55, "589": 45, "589774": 55, "589979919597745": 60, "59": [2, 3, 27, 39, 43, 53, 56, 60, 64], "590": 60, "590063": 55, "5929027199745178": 49, "594": 50, "597": 55, "59701": 43, "597500": 43, "597610": 55, "599": 55, "5999": [34, 54], "5b2d760011c9255a68eb08b83b3b8759ffa25d5c": 41, "5e86": 45, "5w": [24, 60], "6": [1, 2, 5, 6, 7, 8, 11, 14, 15, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 40, 41, 42, 43, 45, 47, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64], "60": [6, 26, 34, 43, 45, 46, 47, 49, 52, 54, 55, 56, 61], "600": [42, 43, 52, 60], "6000": [41, 52], "60000": [43, 52], "601": 55, "602": 43, "602763": 55, "603": 55, "604": 55, "604390": 50, "604546": 55, "605": 55, "606294": 55, "609": 55, "61": [26, 43, 55], "610": 45, "611047": 50, "612": 55, "615": 55, "616": 45, "617": 43, "618": 55, "618789": 62, "6199148843686806": 13, "61ffca": 56, "62": [41, 43, 55], "620": 55, "621": 46, "623": 55, "625": 55, "626af31": 60, "627": 55, "628": 55, "629898": 55, "6299518653018685": 2, "63": [2, 34, 42, 43, 45, 50, 52, 54, 55, 56, 64], "630": 49, "631": 55, "6332": 43, "63417345": 49, "636": 55, "63737": 26, "63971231": 55, "63a81f9": 45, "63ca953d": 45, "64": [16, 43, 45, 53, 55], "64001f": 65, "640px": 56, "6424": 43, "6428": 43, "6429": 43, "6430": 43, "6431": 43, "6432": 43, "6433": 43, "643e": 56, "645": 55, "645894": 55, "648865": 55, "64bit": 67, "65": [43, 45, 52, 56], "650": 53, "653668": 43, "654033": 43, "6550": 55, "6561": 40, "657": 55, "658271": 55, "6583": [34, 54], "659": [41, 55], "66": [34, 43, 49, 54], "6625": 56, "662942": 62, "665000": 43, "6666666666666665": 8, "6666666666666667": 21, "66666667": 37, "666667": 50, "667": 30, "669": 43, "669755": 50, "67": [27, 34, 47, 54, 55], "675": 55, "6750": 56, "676": [40, 55], "676099": 62, "677": 55, "677631": 43, "678": 55, "6789": 49, "679": 55, "67d190a5": 41, "68": [27, 43, 45, 47, 50, 52, 55, 56, 60], "680": 55, "681": 55, "682003": 47, "68221": 55, "683373": 43, "6871": 45, "688": 55, "688070": 55, "6889": 40, "689475": 55, "68991": 55, "69": [7, 45, 49, 55], "691": 55, "69314718": 43, "6940": 50, "69760": 41, "698571": 41, "6d6d6d": 56, "6f": 50, "6th": 43, "6x": 21, "7": [1, 2, 5, 6, 11, 14, 20, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 47, 49, 50, 52, 54, 55, 56, 58, 60, 61, 62, 64, 65, 67], "70": [5, 34, 43, 50, 52, 54, 55, 56], "700": [52, 55], "7000": 52, "70000": [43, 52], "701": [43, 55], "702": 55, "703": 55, "704": 55, "704812": 62, "705": 55, "705106": 50, "705219": 55, "706": 50, "707107": 43, "707825127659933": [], "708249": 41, "709": 49, "70kbp": 65, "71": [30, 43, 45, 47], "710": 55, "713": 49, "714": 45, "714286": 30, "714878": 43, "715189": 55, "719": 55, "72": [27, 43, 45, 49, 55], "720p": 65, "722": [47, 55], "72487": 50, "726797": 55, "72738664": 55, "728383": 50, "729": 41, "7292": 50, "729800": 43, "72befa": [6, 47, 56], "72fcdb": [47, 56], "73": [27, 45, 50, 55, 60, 64], "73630214": 55, "736361": 55, "738053": 55, "74": [43, 45, 64], "741403": 50, "742436": 50, "743": 55, "744": 55, "745": [34, 54, 55], "746": 55, "747": 55, "748": 55, "749": 49, "75": [30, 34, 35, 39, 43, 45, 46, 50, 54, 55, 56, 64], "750": 52, "75000": 15, "750000": 30, "751099964370951e": 47, "754604": 43, "755238": 43, "756": 55, "759766": 55, "76": [43, 55, 56, 64], "761905": 43, "76335004": 55, "763748": 55, "765625": 55, "7671": 55, "76778119": 55, "77": [26, 42, 45, 55, 56, 58, 64], "772373": 43, "774": 56, "7740": 40, "77777778": 37, "78": [2, 55, 64], "780860": 55, "784": [41, 55], "784731": 55, "7849": 50, "785": 55, "79": [41, 43, 44, 45, 52, 55, 56], "790": 55, "791": 55, "791093": 43, "792": 45, "793503": 55, "794": 55, "795": 55, "795045": 43, "795825": 43, "795979": 41, "796": 55, "796667": 43, "797": [55, 60], "797892": 55, "799": 55, "7b": 46, "7rdymcvpkx": 49, "8": [1, 2, 5, 6, 7, 9, 11, 15, 16, 20, 22, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 40, 41, 43, 45, 47, 48, 49, 50, 52, 54, 55, 56, 60, 61, 62, 64, 65, 67], "80": [5, 26, 34, 43, 45, 47, 54, 55, 56, 58, 61], "800": [42, 52, 60, 68], "8000": [41, 47], "80000": 43, "8000000": 27, "8003": [34, 54], "801": 55, "802": [55, 64], "803990": 55, "804": 55, "806": 55, "807": 55, "808": 55, "808787": 55, "80l": 52, "81": [40, 43, 45, 50, 56, 67], "8100": 40, "810736": 43, "811": 45, "811983": 55, "812857": 43, "814949": 50, "816": 24, "818387": 62, "82": [43, 49, 53, 55], "820": 45, "827": [], "82805080": 2, "828674": 41, "82e2ff": 56, "83": [43, 45, 50, 52], "830": [], "830z": 45, "8330": 41, "83374": 45, "839": 37, "839902": 62, "83it": 55, "84": [45, 50, 56, 60], "840": 37, "841": 37, "84147098": [], "842": 37, "843": 37, "844": 37, "845": 37, "845154": 30, "846": 37, "849278": 55, "8496": 45, "85": [26, 43, 45, 49, 52, 55], "85000": 15, "8501": 49, "850358": 62, "8536": 41, "854306": 43, "856": 56, "857083": 43, "858": [44, 49], "86": [55, 56, 58], "8601": 64, "866": [34, 54], "8681": 41, "87": [44, 45, 60], "870": 60, "871115": 55, "8728": 55, "873": 44, "874e": 56, "8770": 43, "878": 55, "8796631": 44, "88": [26, 34, 43, 45, 49, 52, 54, 60, 61, 64], "880": 60, "880e": 56, "881": [45, 55], "883": 45, "8870": 41, "88888889": 37, "889": 49, "89": [43, 45, 56, 60], "890": [55, 60], "890565": 55, "8909": 43, "891206": 55, "891773": 55, "896": 55, "897": 53, "899": 45, "8ae3": 45, "8b3c": 41, "8b4513": 56, "8bf5": 41, "8ccd": 41, "8d5afd51947c": 41, "8da112101571": 41, "8fp": 65, "9": [1, 2, 5, 6, 8, 9, 14, 19, 22, 24, 26, 27, 28, 29, 30, 34, 35, 37, 39, 40, 41, 43, 44, 45, 47, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 67], "90": [5, 26, 34, 40, 43, 47, 49, 50, 54, 55, 61], "902": 45, "9025": 40, "9047": 45, "907": 43, "907764": 43, "90868": [34, 54], "9087": [34, 54], "90929743": [], "90e361ab4320": 41, "90m": [34, 54], "91": [43, 45], "910": 61, "912168": 47, "913415": 55, "914995": 50, "917018": 55, "91m": 61, "91me501": 61, "91mf401": 61, "91mf821": 61, "91mf841": 61, "91mi001": 61, "92": [26, 34, 45, 49, 54, 55, 56, 60], "920": 60, "922462": 47, "922807": 47, "927": 45, "929": 29, "92mtest_calculation_without_approx": [34, 54], "92mtest_floats_are_commut": [34, 54], "93": [43, 47, 50, 52, 55, 60], "930": [29, 55, 60], "930145": 55, "930997": 55, "931": 29, "932": 29, "933": 29, "933506": 47, "933693": 47, "934431": 41, "935": 41, "936842": 47, "936971": 47, "94": [26, 41, 43, 55], "940404": 55, "943215": 47, "94336951": 55, "943880": 30, "9439": 43, "944444": 43, "946": 29, "946801": 47, "947": 29, "947368": 47, "947882": 47, "948": 29, "949": 29, "949190": 64, "949536": 47, "94m": 61, "94m0": [34, 54], "94m1": 61, "94m2": 61, "94m3": 61, "94m4": 61, "94m5": 61, "94m6": 61, "94m7": 61, "94m8": 61, "94m9": 61, "94massert": [34, 54], "94mdef": [34, 54], "95": [26, 29, 34, 43, 45, 47, 54, 55, 56, 58, 60], "950": [29, 60], "950112": 43, "950816": 47, "950877": 47, "951003": 47, "951072": 47, "9523809523809523": [11, 32], "954": 42, "954014": 47, "954337": 47, "954386": 47, "954577": 47, "95503": 47, "9553": 45, "957138": 47, "959245": 47, "96": [2, 43, 47, 55, 56], "960525": 47, "961089": 47, "961276": 47, "961362": 47, "961404": 47, "961444": 47, "9627": 45, "963272": 47, "963663": 55, "964739": 47, "964912": 47, "965": [], "965052": 47, "966206": 47, "967486": 47, "968": 60, "968242": 47, "968387": 47, "968421": 47, "969594": 47, "96986": 55, "96mhelp": 61, "97": [34, 45, 54, 55], "971736": 47, "971869": 47, "97193": 47, "974448": 47, "975439": 47, "975464": 47, "975728": 47, "97670263": 55, "979942": 47, "98": [6, 45, 50, 55], "9811": 55, "9813": 55, "9814": 55, "9815": 55, "9816": 55, "9817": 55, "9818": 55, "981893": 55, "9819": 55, "9820": 55, "982357": 47, "982422": 55, "982437": 47, "982456": 47, "98269": 47, "982842": 55, "9830": 55, "9831": 55, "9832": 55, "9834": 55, "984797": 47, "985934": 47, "985965": 47, "985994": 47, "986904": 47, "987544": 47, "987778": 43, "987900": 55, "987995369763629": 47, "988": 60, "988200114690699e": 47, "989462": 47, "989474": 47, "99": [1, 9, 39, 55, 60], "990": 60, "990093": 55, "990216": 55, "9903519749641418": 39, "9908": 41, "9911543130874634": [34, 54], "994949": 43, "994981": 41, "995": 50, "995731919571047": 47, "996": [50, 55], "996031": 43, "9963": 47, "997": 50, "998": 50, "9980607796830444": 47, "9982": 56, "999": [30, 39, 44, 45, 50], "9995": 40, "9995759129524232": 39, "9996": 40, "9997": 40, "9998": 40, "999871": 62, "9999": [40, 64], "999999": 64, "A": [1, 4, 5, 7, 11, 24, 25, 26, 28, 29, 32, 33, 35, 41, 42, 43, 44, 45, 46, 47, 49, 52, 60, 61, 62, 64], "AND": [41, 45, 52], "AS": [39, 40, 42, 52], "AT": 37, "And": [44, 45, 49, 56, 60], "As": [4, 27, 41, 43, 45, 47, 50, 52, 58, 60, 61], "At": 6, "BE": 43, "BY": [40, 42, 43, 52], "Be": [45, 46], "But": [20, 21, 49, 50, 55, 60], "By": [1, 6, 26, 27, 34, 35, 43, 45, 47, 49, 52, 54, 55, 61, 62, 65], "For": [1, 2, 5, 8, 14, 19, 26, 27, 33, 34, 35, 39, 40, 41, 43, 45, 47, 50, 52, 54, 55, 56, 58, 61, 62, 63, 65, 68], "IF": [39, 43, 46], "IN": 43, "INTO": [34, 39, 46, 54], "If": [1, 2, 4, 5, 7, 8, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 69], "In": [1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 19, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 67], "It": [1, 2, 6, 9, 11, 16, 21, 29, 32, 34, 35, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 58, 60, 62, 63, 64, 65], "Its": [50, 61], "NO": 45, "NOT": [39, 46], "No": [11, 32, 34, 43, 45, 46, 47, 49, 54, 56, 58, 60, 61], "Not": [40, 41, 47], "ON": 39, "OR": 39, "On": [19, 34, 45, 47, 49, 50, 53, 54, 59], "One": [21, 27, 33], "Or": [27, 46], "THEN": 52, "That": [1, 11, 14, 20, 21, 32, 33, 34, 54, 55, 56, 59, 60, 62, 63, 64, 65, 69], "The": [1, 4, 8, 9, 14, 18, 19, 20, 21, 24, 26, 27, 31, 33, 35, 37, 39, 40, 42, 43, 45, 46, 47, 50, 52, 53, 59, 60, 61, 62, 63, 64, 65], "Then": [45, 49, 50, 60, 65, 67], "There": [8, 24, 34, 47, 49, 54, 65], "These": [1, 6, 34, 47, 58], "To": [1, 2, 4, 5, 6, 7, 8, 9, 11, 14, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65], "Will": [34, 54, 58], "With": [1, 5, 6, 14, 15, 21, 27, 41, 44, 45, 46, 47, 48, 49, 50, 52, 55, 56, 58, 60, 62, 63, 64, 65], "_": [1, 7, 9, 11, 13, 27, 32, 34, 45, 47, 53, 54, 56, 58, 60], "_1": 48, "_2": 48, "__": [53, 60], "___": 60, "____": 60, "__________________": 61, "________________________": [34, 54], "______________________________": [34, 54], "___init__": 14, "__add__": 1, "__beartype_conf": 61, "__beartype_func": 61, "__beartype_get_viol": 61, "__beartype_getrandbit": 61, "__class__": 64, "__cluster": 49, "__doc__": [5, 59], "__eq__": [1, 14], "__getitem__": 29, "__init__": [1, 14, 22, 34, 52, 53, 54, 58, 60, 61, 62], "__languag": 49, "__main__": [1, 22, 34, 52, 54, 58, 59, 60, 61, 64, 65], "__name__": [1, 5, 22, 34, 54, 59, 60, 61, 64, 65], "__pii__ani": 49, "__pii__credenti": 49, "__pii__email": 49, "__pii__phon": 49, "__post_init__": [14, 19], "__price": 1, "__pycache__": 61, "__pydantic_self__": 61, "__pydantic_validator__": 61, "__repr__": 14, "__root__": 47, "__slots__": 1, "__tracebackhide__": 61, "_balanc": 1, "_check_reg_target": 64, "_decor": 49, "_delta_log": 41, "_df1": 25, "_df2": 25, "_equity_curv": 55, "_get_axi": 29, "_get_slice_axi": 29, "_getbool_axi": 29, "_getitem_axi": 29, "_io": 58, "_is_scalar_access": 29, "_nc_cat": 45, "_nc_ht": 45, "_nc_ohc": 45, "_nc_sid": 45, "_openml": 56, "_predict": 47, "_price": 58, "_privat": 37, "_reconstruct": 58, "_regress": 64, "_run_cod": 53, "_strategi": 55, "_take_with_is_copi": 29, "_ticket": 58, "_trade": 55, "_valu": 29, "_x": 25, "_y": 25, "a12f4d7e2f35": 41, "a277ff": 56, "a2l": 37, "a39160639": 45, "a6813d0c": 41, "a_th": 45, "aa": 42, "aapl": 52, "ab": [40, 47, 52, 56], "ab_test": [34, 54], "abbrevi": [34, 54], "abc": [1, 6, 22], "abc456": 16, "abcd": [7, 45], "abey79": 56, "abi": 45, "abi64str1": 50, "abil": [21, 49, 55, 58], "abl": 63, "about": [1, 2, 6, 7, 19, 34, 40, 43, 44, 46, 47, 48, 50, 52, 54, 58, 59, 60, 62, 63, 64, 65], "abov": [4, 8, 9, 11, 14, 20, 22, 32, 33, 34, 37, 42, 43, 44, 45, 47, 50, 52, 54, 55, 56, 60, 61, 63], "abr": 65, "absenc": [55, 56], "absolut": [18, 37, 55], "abstain": 43, "abstract": 6, "abstractmethod": 1, "academi": 45, "acc": 43, "acceler": 50, "accept": [1, 4, 5, 6, 19, 47, 60, 63], "access": [1, 4, 6, 9, 13, 14, 17, 26, 34, 40, 41, 42, 47, 49, 52, 54, 68], "accident": 1, "acco": 43, "accomplish": 6, "accord": 49, "account": [1, 41, 43, 47, 55], "acct_id": 48, "accumul": 41, "accur": [6, 34, 54, 55, 65], "accuraci": [43, 47, 55, 60], "accuracy_scor": 47, "achiev": [6, 7, 15, 43, 50, 55, 60], "acid": [41, 45, 50], "acodec": 65, "acquir": 49, "across": [1, 5, 13, 15, 39, 43, 46, 47, 49, 52, 55, 58, 60, 64], "act": 55, "action": [6, 41, 43, 49, 52, 56, 61, 63], "activ": [39, 41, 56, 62, 64, 65], "actual": [6, 34, 44, 48, 52, 54, 55, 61, 65], "actual_df": 52, "actual_output": [34, 54], "ad": [5, 6, 19, 21, 34, 40, 41, 42, 45, 47, 49, 52, 54, 58, 61, 64, 65], "adaboostclassifi": 47, "adam": 56, "adapt": [22, 39, 49], "add": [1, 4, 5, 6, 7, 10, 15, 19, 20, 21, 25, 26, 34, 35, 39, 41, 43, 45, 46, 48, 49, 51, 52, 54, 58, 59, 60, 61, 62, 63, 65], "add_argu": 60, "add_bodi": 44, "add_column": [34, 54], "add_constraint": 41, "add_data_fram": 56, "add_df": 56, "add_head": 44, "add_keyword": 49, "add_metric_sc": 50, "add_new_featur": 6, "add_num": 15, "add_numb": [5, 60], "add_on": 6, "add_pag": 44, "add_seri": 56, "add_slid": 56, "add_start_index": 46, "add_strategi": 1, "add_thre": 2, "add_to": 56, "add_to_dataset": 6, "add_to_ord": 5, "add_two": [34, 54], "addit": [1, 6, 19, 27, 34, 42, 50, 54, 62], "addition": [34, 54], "address": [14, 34, 40, 42, 44, 45, 46, 52, 53, 54, 56, 58, 60, 65], "adeli": 56, "adjust": [14, 30, 40, 41, 47, 52, 60], "adjust_text": 56, "adjusttext": 56, "administr": [43, 45], "adress": 65, "adult": 43, "advanc": [40, 47, 55, 64], "advantag": [27, 47, 52], "advers": 55, "adversari": 45, "adversarial_model_param": 45, "advis": 45, "advoc": 43, "aeneid": 45, "affair": 43, "affect": [14, 26, 56], "afford": 43, "afghanistan": 43, "aforementio": 43, "africa": [26, 60], "after": [6, 9, 26, 27, 41, 43, 44, 45, 47, 49, 53, 55, 61, 62, 64], "ag": [1, 4, 9, 14, 19, 34, 39, 42, 43, 45, 51, 52, 54, 55, 56, 58, 65], "again": [6, 8, 44, 65], "against": [6, 34, 42, 52, 54, 56, 62], "age1": 9, "age2": 9, "age_after_10_year": 52, "age_in_10_year": 52, "age_na": 43, "agenc": 43, "agent": 43, "agg": [34, 42, 50, 52, 54], "agg_method": 35, "aggfunc": 35, "aggreg": [7, 16, 39, 42, 52, 55], "aggregationdepth": 47, "aggress": 45, "agn": 45, "agnostic": 43, "agustin": 45, "aha": 21, "ahead": [1, 55], "ahem": 49, "ai": [45, 65], "aic": 55, "aid": 43, "aileennielsen": 55, "air": 55, "airborn": 56, "airfi": 43, "airpasseng": 55, "airpassengersdf": 55, "airport": 50, "albert": 45, "aldi": [20, 34, 35, 54, 58], "alex": [4, 41, 42, 52], "algebra": 21, "algo": [47, 55], "algorithm": [39, 47, 49, 50, 55, 56, 58], "alia": [41, 50, 52], "alias": [39, 58], "alias1": 39, "alic": [4, 14, 27, 34, 41, 42, 52, 54], "align": [34, 54, 55, 58, 60], "all": [1, 9, 10, 11, 13, 14, 16, 20, 21, 28, 32, 35, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 69], "all_fruit": 10, "allcap": 49, "allow": [1, 2, 5, 7, 8, 9, 11, 13, 16, 20, 21, 22, 24, 26, 28, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 68], "almanac": 60, "along": [24, 35, 44, 55, 62], "alongsid": [42, 48], "alpha": [47, 55, 64], "alpha_part": 16, "alphabet": [43, 49, 56, 61, 64], "alphavantage_api_kei": 45, "alreadi": [40, 41, 49, 52, 55, 64], "also": [1, 2, 4, 6, 7, 11, 19, 20, 21, 24, 26, 28, 32, 33, 34, 37, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 58, 59, 60, 62, 63, 64, 67, 68], "alter": [1, 41], "altern": [1, 4, 20, 27, 43, 45, 47, 50], "although": [6, 47], "alto": 45, "altogeth": 58, "alwai": [31, 34, 43, 47, 54, 60, 65], "always_check_safeti": 58, "am": [11, 32, 34, 43, 49, 54, 56], "amaz": 21, "amazingli": 39, "amazon": 55, "amazonaw": [55, 56], "ambigu": 37, "america": [26, 44], "among": [45, 66], "amont": 43, "amount": [26, 43, 47, 50, 52, 55], "amp": 43, "amplitud": 6, "an": [1, 3, 4, 8, 9, 10, 14, 15, 19, 20, 26, 27, 29, 33, 34, 35, 39, 40, 41, 43, 44, 46, 48, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 64, 69], "analys": 29, "analysi": [23, 39, 42, 43, 44, 49, 58, 60, 62, 64, 65], "analysisresult": 58, "analyst": [43, 48, 49, 53, 55], "analyz": [1, 11, 32, 35, 39, 40, 42, 45, 55, 56], "analyze_custom_df": 1, "analyze_data": 1, "analyze_numpy_arrai": 1, "analyze_pandas_seri": 1, "analyze_sales_panda": 50, "analyze_sales_polar": 50, "angel": [34, 42, 54], "ani": [1, 5, 6, 19, 29, 34, 43, 45, 46, 49, 50, 54, 55, 56, 58, 61, 63, 65, 68, 69], "anim": [1, 45, 58], "ann": 55, "anna": 56, "annot": [34, 39, 43, 46, 49, 54, 60], "annot_kw": 43, "anomali": [47, 55], "anoth": [1, 6, 7, 8, 10, 20, 21, 34, 35, 40, 41, 43, 45, 54, 55, 56, 58, 61, 62], "ansi": 39, "answer": [45, 46, 49, 55, 60], "antarctica": 60, "anticip": 45, "antlr": 41, "antlr4": 41, "any_but_spac": 58, "anybodi": 14, "anybutwhitespac": 58, "anyio": [34, 54], "anyon": 47, "anyth": 43, "ap": 56, "apach": [27, 40, 41, 47, 50, 52], "apart": [3, 43], "apear": 47, "api": [19, 34, 47, 48, 50, 55, 65], "api_kei": [45, 46, 55], "api_token": 40, "app": [47, 56, 60, 62, 65], "appeal": 60, "append": [1, 6, 13, 14, 16, 40, 42, 44, 50, 52, 56, 61], "append_four": 6, "appl": [1, 4, 5, 7, 9, 10, 11, 13, 16, 17, 20, 22, 24, 25, 29, 30, 32, 34, 35, 39, 40, 46, 47, 48, 49, 52, 54, 56, 58, 61], "appli": [1, 4, 5, 6, 20, 26, 27, 33, 37, 43, 44, 49, 52, 55, 56, 58, 61, 64, 65], "applic": [34, 40, 41, 46, 47, 49, 52, 53, 54, 60, 61, 63, 65, 68], "applier": 43, "apply_and_annot": 56, "apply_discount": 58, "apply_if_cal": [29, 53], "applymap": 24, "appnam": 41, "appreci": 45, "approach": [1, 4, 5, 6, 9, 21, 24, 34, 41, 43, 46, 47, 49, 50, 52, 54, 56, 60, 64], "appropri": [14, 15, 34, 47, 54], "approv": 45, "approx": 55, "approxim": [2, 19, 21, 26, 27, 41, 42, 50], "april": [40, 45], "apt": 60, "aquariu": 43, "aquarium": 43, "aquat": 44, "ar": [1, 2, 4, 5, 6, 8, 10, 11, 14, 16, 22, 24, 25, 27, 28, 29, 30, 32, 34, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 68], "ar6": 46, "arab": [43, 49], "arang": [37, 47, 55, 56], "aratherblusterdai": 49, "arbitrari": [48, 58, 64], "architectur": [55, 67], "area": [9, 40, 49, 55, 56, 63], "area1": 40, "area2": 40, "arg": [5, 22, 31, 46, 47, 49, 58, 59, 60, 61, 64], "argent": 45, "argmax": 37, "argparse_exampl": 60, "argsort": [47, 49], "argument": [7, 11, 19, 22, 30, 32, 34, 47, 49, 50, 54, 56, 60, 61, 62, 64], "argumentpars": 60, "argv": 59, "ari": 49, "arial": 44, "arithmet": [1, 34, 54, 55], "arm": 45, "arma_data": 55, "around": [2, 5, 45, 54, 56, 61], "arr": [6, 37], "arr1": 37, "arr2": 37, "arrai": [1, 6, 20, 29, 31, 39, 43, 45, 47, 55, 56, 60, 61, 64], "arrang": 61, "array_append": 52, "array_contain": 52, "array_distinct": 52, "array_prepend": 52, "array_to_latex": 37, "arraytyp": 52, "arrow": [27, 42], "art": [47, 49], "articl": [34, 45, 54, 58, 59, 60, 62, 64, 68], "artifact": [41, 44, 47], "artifact_path": 47, "artist": [19, 43, 45], "arztotzka": 45, "as_fram": [27, 45, 47, 48, 53, 56], "as_retriev": 46, "ascend": 60, "ascii": 64, "asctim": 64, "asham": 43, "asia": [26, 43, 55, 60], "asian": 43, "ask": [43, 49, 52, 54], "ask_to_sign_in": 6, "assembl": [45, 47], "assert": [37, 46, 52], "assert_array_compar": 37, "assert_array_equ": 37, "assert_called_onc": [34, 54], "assert_called_once_with": [34, 54], "assert_test": [34, 54], "assertdataframeequ": 52, "assertionerror": [34, 37, 52, 54], "assesford": 45, "assess": [34, 54], "asset": [47, 55], "assetsmanag": 47, "assign": [1, 4, 7, 9, 14, 43, 50, 52, 53, 61], "assign_category_label": 52, "assignment_categori": 43, "assist": 46, "associ": [43, 55, 58], "assum": [1, 4, 34, 41, 42, 46, 54, 58], "assumpt": [1, 34, 43, 54, 58, 65], "astimezon": [55, 64], "asttoken": 64, "astyp": [24, 27, 31, 44, 56], "asynchron": 63, "atheism": 43, "athlet": 43, "attempt": [1, 29, 40, 41, 52, 61], "attend": [7, 55], "attr": [4, 13, 62], "attr1": 45, "attr2": 45, "attr3": 45, "attr4": 45, "attr5": 45, "attr6": 45, "attract": 49, "attribut": [5, 9, 13, 14, 19, 22, 64], "attribute_nam": 1, "attributeerror": [1, 5], "attrs_tim": 19, "aubin": 45, "auc": 47, "auc_roc": 60, "audienc": 56, "audio": 65, "audit": 41, "auditor": 43, "aug": 49, "aug_src": 49, "augmented_text": 49, "august": 40, "aura": 56, "australia": [45, 55, 60], "australian": 43, "auth": 48, "auth_": 51, "authent": [48, 63], "author": [14, 63], "auto": [1, 45, 47, 56], "auto_arima": 55, "auto_save_png": 56, "autoarima": 55, "autobio": 43, "autoencod": 60, "autoet": 55, "autoincr": [39, 46], "autom": [39, 43, 47, 61, 62], "automak": 45, "automat": [14, 19, 27, 34, 39, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 58, 63, 64], "automated_readability_index": 49, "automodel": [46, 49], "autonotebook": [55, 56], "autospec": 54, "autotoken": 49, "autoweek": 45, "autumn": 55, "av": 45, "ava": 45, "avail": [14, 22, 40, 43, 47, 50, 54, 55, 61, 62, 64], "avc1": 65, "avebedrm": 47, "aveoccup": 47, "averag": [2, 5, 34, 40, 43, 52, 53, 54, 55], "average_2_num": [34, 54], "averoom": [47, 53], "avg": [34, 41, 42, 52, 54, 55], "avg_revenu": 42, "avoid": [1, 5, 9, 14, 20, 26, 34, 50, 54, 61, 62], "aw": [48, 49, 58], "awai": [55, 64, 65], "awar": [64, 68], "awesom": [43, 45, 46], "awkward": 43, "aws_access_kei": 48, "aws_access_key_id": 48, "aws_auth": 48, "aws_dir": 48, "aws_secret_access_kei": 48, "aws_secret_kei": 48, "awsauth": 48, "awss3dir": 48, "ax": [35, 44, 45, 47, 49, 55, 56], "ax0": 47, "ax1": 47, "axel": 60, "axessubplot": [44, 45, 47, 56], "axi": [5, 6, 24, 27, 29, 30, 35, 37, 45, 50, 55, 56], "ayu": 56, "azur": 45, "b": [1, 5, 6, 7, 8, 11, 13, 15, 16, 20, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 56, 58, 60, 61, 62, 64, 65, 67], "b01bf8b7ae1a": 20, "b23": 13, "b28f": 41, "b5c9640f": 41, "b946": 41, "babi": 49, "bachelor": 43, "back": [6, 8, 21, 34, 39, 45, 50, 54, 55], "backend": [27, 43, 49, 56], "background": 43, "background_gradi": 33, "backslash": [11, 32], "backtick": [], "backyard": [45, 56], "bacon": 49, "bad": [1, 6, 49, 61, 65], "badli": 45, "baffin": 60, "bag": 43, "baggingclassifi": 47, "bai": [43, 56], "bake": 49, "balanc": [1, 41, 47, 55], "banana": [4, 7, 10, 11, 16, 17, 32, 34, 39, 40, 46, 48, 49, 52, 54], "band": [43, 45], "bangalor": 43, "bank": [43, 60], "bankaccount": 1, "bannon": 49, "banter": 43, "bar": [39, 49, 52, 56], "bar_bas": 56, "bark": [22, 34, 54, 56], "barplot": [49, 56], "base": [1, 6, 9, 22, 30, 33, 42, 43, 45, 46, 47, 49, 50, 52, 55, 56, 60, 64], "base64": 45, "basefont": 44, "basemodel": [19, 46, 61], "basic": [9, 41, 46, 55, 64, 68], "basic_plan": 9, "basicconfig": 64, "basil": 45, "batail": 43, "batch": [39, 45, 50], "batch_siz": [16, 45], "bathroom": 65, "batteri": [43, 56], "bayesian": 55, "bc": 56, "bdai": 28, "beani": 45, "bear": 55, "bearer": 63, "beartypecallhintparamviol": 61, "beats_per_minut": 19, "beauti": [47, 49, 56], "becaus": [1, 2, 4, 5, 6, 11, 16, 18, 21, 29, 32, 34, 45, 47, 49, 54, 58, 62, 65, 68], "beckett": 43, "becom": [5, 6, 16, 34, 39, 44, 45, 50, 54, 55, 61], "bed": 4, "bedienend": 43, "bedroom": 65, "been": [26, 47, 51, 55, 63], "beequal": 47, "befor": [4, 9, 19, 22, 26, 33, 34, 39, 43, 45, 47, 49, 50, 52, 53, 54, 55, 58, 61, 62, 63], "beforehand": 49, "begin": [3, 16, 33, 37, 45, 47, 50, 59, 60, 64], "beginn": 45, "behav": 34, "behavior": [4, 5, 14, 25, 34, 41, 45, 47, 52, 54, 55], "behind": [49, 52], "being": [6, 11, 32, 42, 43, 44, 45, 49, 53, 58, 64, 67], "believ": 19, "bell": [45, 60], "belong": 56, "below": [1, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 67], "belveder": 43, "ben": [4, 35, 42, 56, 58], "benchmark": 19, "benefit": [6, 41, 43, 50, 52, 55], "benko": 45, "berkelei": 43, "berlin": 42, "bernoullinb": 47, "berri": [24, 49], "berriai": 45, "besid": 7, "best": [6, 43, 46, 49, 55, 61], "better": [2, 4, 5, 6, 9, 24, 26, 34, 43, 47, 50, 52, 54, 55], "between": [1, 6, 9, 10, 25, 27, 35, 39, 40, 43, 46, 49, 51, 52, 55, 61, 62, 64, 65], "beuti": 49, "beyond": [44, 47], "bfill": 45, "bfloat16": 55, "bias": [34, 43, 45, 46, 47, 54], "bid": 52, "big": [43, 45, 49, 50], "bigint": 52, "bigqueri": 39, "bike_sharing_dc": 56, "bill": [43, 44, 47], "bill_depth_mm": 56, "bill_length_mm": 56, "bim": [1, 9, 14, 19, 22], "bin": [15, 34, 54, 56, 62], "binari": [39, 47], "bincount": 43, "bind": [40, 52], "bind_opt": 58, "binomi": 47, "biologi": 44, "birmingobject": 45, "birmingpoop": 45, "birth_year": 4, "birthdai": [43, 55], "bit": 40, "bite": 68, "bk4o05ihmgqsynk2": 65, "black": [1, 14, 45, 47, 49, 55, 61], "blast": 1, "blazingli": [34, 54], "blob": [43, 47, 49], "block": [6, 47, 61], "blog": 49, "blogspot": 49, "blond": 43, "blue": [6, 55, 60], "blueberri": 56, "bluster": 49, "bluth": 48, "bmatrix": 37, "bo": 56, "boatbench": 45, "bob": [19, 34, 41, 42, 48, 52, 54], "boba": 46, "bodi": [44, 46], "body_typ": 43, "boerum": 43, "boil": 45, "boilerpl": [5, 34, 54, 58, 60], "bokeh": 56, "bold": [44, 45], "bonu": 15, "bonus_level": 15, "book": [9, 14, 18, 29, 31, 34, 37, 40, 41, 43, 45, 47, 49, 52, 54, 56, 58, 60, 61, 62, 64], "book1": 14, "book2": 14, "bool": [6, 29, 64], "boolean": [45, 49], "boolqgen": 49, "boot": 45, "bore": 21, "borneo": 60, "borough": 43, "bot_filter_quantil": 45, "both": [6, 7, 25, 29, 34, 35, 39, 41, 42, 46, 47, 49, 50, 52, 55, 61, 62, 63, 64], "boto3": 58, "botswana": 43, "bottleneck": [46, 50, 53, 64], "bottom": [15, 45], "bottomrul": 33, "bottomup": 55, "boudinfl": 49, "bought": 20, "boulder": 49, "bound": [30, 47, 52, 55], "boundari": 64, "bowl": 45, "box": [45, 47, 55, 56], "boxcox": 55, "boxcox1p": 53, "boxcoxendogtransform": 55, "boxplot": 56, "boxprop": 56, "br": [43, 49], "bracket": [11, 20, 29, 32, 60], "braeburn": 56, "branch": [34, 54, 60], "breach": 59, "break": [6, 11, 32, 39, 52, 64], "breakag": 45, "breakdown": [40, 60], "breakfast": 1, "breed": 45, "brew": 60, "bridg": [43, 48, 56], "bring": [45, 49, 52], "brisban": 55, "britain": 60, "brittl": [45, 52], "broader": 6, "broadwai": 45, "broadwayworld": 45, "broccoli": 43, "broccqli": 43, "broccsli": 43, "brocroli": 43, "brojcoli": 43, "broke": 62, "broker": 55, "bronx": [43, 56], "brooklyn": [43, 56], "brouwn": 49, "brown": [1, 41, 45, 47, 49, 52], "browser": [47, 49, 64], "brzccoli": 43, "bt": 55, "bu": 45, "bucket": [48, 58], "buffer": 40, "bufferedread": 58, "bug": [6, 7, 58, 65], "bui": [45, 55], "build": [44, 45, 46, 55, 56, 61, 62], "build_depend": 47, "build_err_msg": 37, "build_payload": 45, "build_time_seri": 45, "builder": [41, 47, 52, 55], "built": [6, 8, 13, 15, 16, 17, 19, 34, 41, 47, 52, 53, 54, 55, 56, 58, 60, 63], "builtin": [40, 41, 52], "bulb": 65, "buri": 43, "bushwick": 43, "busi": [28, 52, 55], "bussi": 56, "button": [65, 69], "buyer": 45, "bxoccoli": 43, "by_lett": 7, "by_pric": 7, "byproduct": 43, "byte": [27, 28, 45, 47, 49, 53], "bytes_or_buff": 64, "b\u00e2t": 45, "c": [1, 5, 6, 7, 13, 24, 25, 27, 29, 30, 34, 35, 39, 40, 41, 43, 44, 45, 47, 49, 50, 52, 54, 55, 56, 60, 64], "c57e456e8a0768326655a8b52cde4f47": 47, "c_a": 1, "c_b": 1, "ca": [34, 42, 54], "cach": 41, "cachedir": [34, 54], "calcul": [1, 9, 39, 47, 50, 53, 55, 56, 58, 64], "calculate_averag": [34, 54], "calculate_discounted_pric": 58, "calculate_grad": [5, 34, 54], "calculate_perimet": 40, "calculate_polygon_area": 40, "calculate_similar": 47, "calculate_someth": 61, "calculate_statist": 61, "calculu": 21, "calendar": [3, 55], "calibr": 47, "calibratedclassifiercv": 47, "calibration_precis": [34, 54], "california": [43, 45, 47, 53, 56], "california_data_drift_report": 56, "call": [4, 5, 6, 8, 9, 13, 16, 20, 22, 29, 34, 37, 41, 42, 43, 44, 45, 46, 49, 50, 52, 54, 55, 56, 59, 60, 61, 63, 64, 65], "call_ord": 47, "call_param": 46, "callable_exampl": 22, "caller": [5, 29], "calmar": 55, "calori": 45, "camp": [43, 45], "campaign": [45, 55], "can": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69], "canberra": 55, "cancel": 64, "cancer": [43, 49], "candid": [27, 49], "cannot": [1, 6, 16, 20, 21, 22, 52, 58], "canva": 45, "capabl": [1, 41, 42, 46, 49, 50, 52, 55, 65], "cape": 45, "capit": 64, "capita": 43, "caplog": [34, 54], "capp": 45, "capprop": 56, "caption": 44, "captur": [34, 43, 44, 49, 54, 55, 63], "car": [45, 55], "caramel": 49, "carat": 43, "carbohydratecont": 45, "card": [43, 56], "cardin": [27, 43, 44], "care": [6, 7, 8, 34, 54, 58], "career": 45, "caribbean": 26, "carri": 49, "carrot": [13, 45, 46], "cart": 5, "case": [6, 9, 33, 37, 39, 43, 47, 49, 52, 55, 60, 64, 67, 68], "casefold": 64, "caseless": 64, "cash": [43, 55, 56], "cast": 45, "casual": 56, "cat": [24, 29, 31, 39, 43, 47, 49, 52, 56, 61], "cat1": [29, 43, 50], "cat1_a": 43, "cat1_b": 43, "cat1_c": 43, "cat2": [29, 43, 50], "cat2_i": 43, "cat2_x": 43, "cat2_z": 43, "cat_col": 45, "cat_featur": [34, 54], "cat_nam": [43, 44], "catalog": [41, 55], "catch": [52, 58, 61, 63, 64, 65], "categor": [45, 50], "categori": [27, 29, 31, 46, 49, 50, 52, 55, 56], "categorical_column": 47, "categorical_featur": 43, "categorical_transform": [43, 47], "categorical_var": 59, "categorifi": 43, "categorymismatchtraintest": [34, 54], "categorypricestri64": 50, "categoryquantitypricestri64f64": 50, "categoryquantitypricestri64i64": 50, "caught": 61, "caus": [5, 6, 15, 24, 28, 43, 46, 49, 52, 59, 61], "causalimpact": 55, "caveat": 24, "cb": 45, "cc": 59, "ccb": 45, "cd": [43, 47, 56, 63, 65], "cd28": 41, "cdot": 60, "ceb": 49, "celeb": 60, "celebr": 45, "celin": 43, "cell": [1, 4, 5, 6, 37, 44, 45, 47, 55, 58, 60, 61, 67], "celsiu": 58, "censor": 49, "center": [1, 43, 44, 45, 47, 56, 64], "central": [26, 41, 43, 45, 52, 55, 56], "centuri": 43, "ceo": 45, "certain": [3, 14, 20, 27, 34, 49, 50, 54, 58, 64, 65], "cgocol": 43, "ch": 46, "ch0000052": 37, "ch0000053": 37, "chad": 43, "chain": [43, 46, 50, 58], "chained_assign": 24, "chair": [4, 45], "challeng": [6, 16, 34, 39, 44, 47, 49, 53, 54, 55, 58, 59, 60, 61], "challenger_deep": 56, "champion": 45, "chan": 45, "chanc": [1, 55], "chang": [1, 5, 6, 11, 14, 15, 26, 27, 28, 32, 33, 34, 39, 41, 45, 46, 47, 48, 49, 52, 54, 56, 58, 59, 61, 63, 67], "changes_to_hydra_main_config_path": 59, "channel": [47, 65], "chao": 45, "chapter": [0, 12, 23, 36, 38, 57, 66], "chapter1": 9, "chapter2": 18, "chapter4": [34, 37, 54], "chapter5": [34, 47, 54], "chapter6": [61, 62], "char": [6, 13, 16, 49, 64], "char_count": 13, "char_list": 13, "charact": [16, 29, 49, 58, 61, 64], "characterist": [34, 54, 56], "charli": [42, 52], "chars_2": 7, "charset": 62, "chart": 49, "chart_typ": 56, "chase": 42, "chat": 49, "che": 43, "check": [1, 4, 8, 9, 16, 19, 22, 26, 41, 43, 45, 48, 49, 55, 62, 63, 64, 65], "check_ag": 19, "check_bool_index": 29, "check_consistent_length": 64, "check_input": [34, 54], "check_mention_fruit_1": 7, "check_mention_fruit_2": 7, "check_ord": [34, 54], "check_output": [34, 54], "check_typ": [34, 54], "checker": 22, "checkingclassifi": 47, "checkout": [48, 63], "cheek": 49, "cheeseburg": 49, "chef": 43, "cherri": [10, 24, 45], "chia": 49, "chicago": 56, "chicken": [56, 58], "child": 1, "children": [6, 45, 49, 55], "chili": 45, "chime": 65, "chines": 43, "chip": 49, "chocdlat": 43, "chocol": [43, 56], "chocolatw": 43, "chocoltt": 43, "choic": [5, 18, 19, 27, 46, 50, 52, 60, 61], "cholesterolcont": 45, "choos": [15, 27, 29, 47], "chop": 45, "chosen": 16, "chqcolat": 43, "christian": 43, "christma": 55, "christoph": 43, "chroma": 46, "chromadb": [46, 49], "chrome": 65, "chronolog": 43, "chronospipelin": 55, "chunk_overlap": 46, "chunk_siz": 46, "chunksiz": [26, 41], "ch\u00edn": 49, "ci": 55, "cicl": 56, "cilantro": 45, "cinnamon": 45, "circl": [9, 44], "circle_area": 6, "citi": [14, 34, 42, 43, 45, 52, 54, 56], "ck": 49, "cl": 1, "clariti": [43, 55, 58, 64], "class": [6, 9, 13, 27, 28, 39, 40, 41, 43, 44, 46, 47, 49, 51, 52, 53, 55, 58, 60, 61, 64, 68], "class_sep": [43, 47], "classdiagram": 56, "classic": 55, "classif": [39, 47], "classifi": [43, 55, 56], "classification_report": 61, "classmethod": 1, "clean": [14, 55, 56, 60, 61, 62, 63], "clean_cod": 60, "clean_data": 61, "clean_nam": 49, "cleaned_text": 49, "cleaner": [4, 6, 34, 44, 54, 58], "cleanest": 13, "cleans": 49, "cleanup": [34, 41, 54, 61], "clear": [6, 9, 34, 41, 46, 47, 52, 54, 55, 58, 60, 61, 64], "clearer": 6, "clearli": [47, 52], "clf": [47, 55], "clf1": 47, "clf2": 47, "clf3": 47, "clf_name": 47, "click": [26, 49, 50, 56, 65, 69], "click_exampl": 60, "client": [43, 46, 49, 58], "climat": 46, "climate_qa_chain": 46, "climb": 49, "clinton": 49, "clipper": 49, "clone": 63, "close": [39, 40, 45, 46, 49, 54, 55, 65], "closer": [11, 32, 45], "closest": 43, "closur": 49, "cloth": 50, "cloud": [48, 49, 69], "cloudpickl": 47, "clove": 45, "club": 45, "cluster": [1, 43, 47, 49, 56], "cluster_id": 49, "cluster_s": 49, "clutter": [52, 61, 64], "cm": [27, 44], "cmap": [33, 43, 56], "cmpare": [34, 54], "cmpreq": 62, "cnn": 49, "co": [21, 49, 60], "co2": 47, "coalesc": 39, "coast": 55, "coco": 1, "coconut": 45, "code": [4, 7, 8, 13, 14, 15, 16, 20, 21, 22, 25, 26, 27, 28, 30, 37, 40, 41, 42, 46, 48, 50, 51, 58, 62, 68, 69], "codebas": 15, "codec": 64, "codecut": 68, "coeffici": 47, "coercion": 39, "coffee_typ": 46, "cognit": 56, "coher": [55, 56], "coincid": 55, "col": [2, 24, 31, 34, 49, 50, 52, 54], "col0": 29, "col1": [24, 26, 27, 29, 31, 33, 34, 35, 41, 44, 53, 54, 64], "col2": [24, 26, 27, 29, 31, 33, 34, 35, 41, 44, 53, 54, 64], "col3": [24, 27, 35, 41, 44], "col4": 24, "col_index": 24, "col_nam": 24, "colab": 69, "colbert": 45, "cold": 46, "coll": 35, "collabor": 47, "collaps": 56, "colleagu": 62, "collect": [6, 10, 12, 34, 35, 45, 46, 47, 49, 50, 52, 54, 55, 56, 64, 65], "collectio": 45, "colleg": 43, "colnam": 43, "color": [1, 4, 6, 14, 20, 43, 47, 48, 49, 55, 56, 60, 64], "color_list": 56, "color_nam": 45, "color_scor": 56, "colorado": 49, "colorama": 64, "colors10": 56, "colors5": 56, "columbu": 55, "column": [2, 6, 15, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 53, 54, 56, 60, 62], "column_format": 33, "column_id": 55, "column_map": 56, "column_nam": 39, "column_ord": 39, "column_sort": 55, "column_valu": 39, "columnar": 41, "columns_alias": 39, "columns_dict": 39, "columntransform": [43, 47], "com": [1, 4, 14, 26, 29, 40, 41, 42, 43, 44, 45, 49, 51, 55, 56, 58, 61, 63, 65], "comb": [7, 16], "combin": [1, 4, 7, 10, 35, 41, 42, 43, 44, 45, 46, 47, 50, 52, 55, 56, 58, 64], "combined_df": 42, "come": [1, 11, 14, 19, 20, 21, 32, 34, 44, 49, 54, 55, 56, 59, 62, 63, 64, 65], "comma": [24, 62], "command": [39, 40, 45, 47, 50, 55, 61, 62, 63], "comment": [6, 63], "comment_karma": 50, "commiss": 55, "commit": [34, 39, 43, 46, 48, 54, 61, 65], "common": [4, 7, 9, 10, 11, 21, 26, 32, 34, 35, 42, 43, 44, 46, 47, 50, 52, 53, 58, 65], "common_fruit": 10, "commonli": [], "commun": [43, 68], "commut": [34, 54], "compact": [6, 41], "compani": [41, 43, 44, 45, 49], "company_profil": 43, "compar": [1, 3, 13, 19, 27, 33, 34, 42, 43, 44, 47, 49, 50, 52, 53, 54, 55, 56, 58, 61, 65], "compare_verb": 49, "comparison": [28, 33, 34, 49, 54, 60, 62, 64], "compat": [39, 47, 55, 62, 64], "competit": 55, "competitor": 45, "compil": [61, 63, 67], "complet": [34, 41, 50, 54, 55, 62], "complex": [5, 9, 14, 34, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 60, 61, 63, 64], "complic": [47, 56, 58], "compon": [47, 49, 55, 64], "compos": [35, 43, 47], "compound": 49, "comprehend": [6, 39, 61], "comprehens": [2, 17, 42, 55, 61, 63, 68], "compress": [2, 58], "comput": [9, 20, 21, 27, 34, 36, 43, 44, 47, 49, 52, 54, 65], "computation": 55, "con": 49, "concat": [27, 35, 41, 42, 45, 50], "concat_df": 41, "concaten": [41, 42, 64], "concav": 55, "concept": [6, 45, 64], "concern": 45, "concert": 58, "concis": [4, 5, 6, 9, 15, 16, 26, 51, 52, 60], "conclus": [34, 54], "concours": 43, "cond": 65, "conda": 47, "condit": [5, 16, 41, 45, 47, 58, 60], "conf": 41, "confid": [44, 47, 55, 61], "confidence_level": [34, 54], "config": [41, 47, 55, 56, 59, 60, 61], "config_nam": 59, "config_path": 59, "configur": [41, 43, 47, 49, 50, 54, 56, 59, 60, 61, 64], "configure_coffe": 46, "configure_spark_with_delta_pip": 41, "configuredtrac": 60, "conflict": [43, 47], "conform": [28, 34, 54], "confus": [6, 34, 54, 58, 64], "confusion_matrix": [56, 61], "conn": [39, 42, 46, 54], "connect": [34, 39, 42, 46, 48, 54, 56], "connectionerror": 34, "consciou": 49, "consecut": 40, "consequ": [6, 34, 54], "consid": [1, 2, 4, 5, 6, 9, 13, 34, 39, 40, 43, 44, 46, 47, 49, 50, 54, 55, 58, 61], "consist": [1, 15, 34, 39, 41, 43, 47, 49, 52, 54, 55, 58], "consol": [55, 65], "constant": [43, 45, 61], "constitut": 55, "constrain": [47, 49], "constraint": [19, 34, 54], "construct": [1, 44, 47, 64], "constructor": 40, "consult": 43, "consum": [1, 5, 26, 27, 34, 41, 42, 45, 47, 49, 50, 53, 54, 55, 56, 60, 64, 65], "consumpt": 61, "cont_nam": [43, 44], "contact": 14, "contain": [22, 27, 34, 41, 43, 44, 45, 46, 49, 50, 54, 55, 62, 64, 65, 67], "contain_word": [34, 54], "contamin": 47, "content": [1, 13, 41, 42, 44, 45, 46, 47, 49, 54, 58, 61, 63], "context": [1, 6, 34, 43, 46, 49, 52, 54, 55, 60, 64], "contextu": [46, 49], "contextualwordembsaug": 49, "contin": 50, "continu": [40, 43, 45], "contrast": [42, 47, 48, 50, 52, 55], "control": [1, 6, 44, 46, 49, 52, 56], "conveni": [34, 41, 52, 54, 55, 60, 62], "converg": 47, "convers": [34, 39, 40, 54, 55, 61, 64], "conversion_r": [34, 54], "convert": [24, 26, 27, 42, 43, 45, 46, 48, 51, 52, 56, 60, 61, 64, 65], "convert_from_path": 60, "convert_ids_to_token": 49, "convert_slow_token": 49, "converted_pric": [], "cook": 45, "cooki": 49, "cookieandk": 45, "cool": [8, 20, 21, 49, 62], "coolyazzy94": 49, "coordin": [40, 43, 44, 45], "copi": [15, 24, 33, 37, 41, 42, 43, 45, 48, 55, 64], "copy_on_writ": 26, "cor": 43, "core": [27, 28, 29, 31, 34, 41, 43, 44, 50, 53, 54, 55, 56, 58, 59, 67], "corner": 69, "cornflowerblu": 45, "corp": 49, "corpor": 49, "corporationlegaltyp": 44, "corporationnam": 44, "corpu": 49, "corr": 43, "correct": [22, 34, 42, 43, 47, 49, 52, 54, 61, 65], "corrected_food": 43, "correctli": [34, 42, 47, 64], "correlated_feature_sets_": 43, "correspond": [5, 17, 41, 43, 47, 49, 58, 64], "corrupt": 41, "cosine_similar": 49, "cost": [19, 49], "costco": 35, "cot": 21, "could": [20, 21, 33, 40, 43, 52, 54, 58, 60, 62, 63, 64, 67], "count": [27, 28, 35, 39, 40, 42, 43, 45, 49, 50, 52, 53, 56, 58, 64], "count_person": 45, "count_person_femal": 45, "count_person_mal": 45, "count_two": 35, "counter": [35, 49], "counter_tim": 13, "counterfactu": 55, "countfrequencyencod": 43, "counti": 44, "countri": [43, 45, 55], "countvector": 56, "coupl": [56, 60], "cover": [0, 12, 23, 35, 38, 40, 43, 45, 48, 49, 51, 53, 56, 57, 58, 59, 61, 65, 66, 67, 68], "cover_photo": 45, "coverag": [43, 47], "coverage_scor": 47, "cowork": [34, 54], "cp01": 39, "cp0_dst": 45, "cprint": 60, "cprofil": 53, "cpu": [40, 48, 49, 50, 53, 67], "cpu_count": [2, 50], "cpython": 67, "crash": 41, "crea": 43, "cream": [49, 56, 58], "creat": [2, 5, 9, 10, 14, 15, 16, 19, 21, 22, 24, 27, 28, 40, 41, 42, 43, 46, 48, 50, 55, 58, 63, 64], "create_a_copi": 6, "create_al": 39, "create_collect": 46, "create_engin": [39, 42], "create_heatmap": 64, "create_if_miss": 48, "create_milk_tea": 46, "create_table_sql": 39, "createdatafram": [41, 47, 52, 55], "createorreplacetempview": 52, "creation": [14, 19, 26, 39, 41, 42, 44, 46, 47, 56, 61], "creativ": 43, "credenti": 54, "credit": [43, 45, 56], "crime": 43, "cristina": 45, "criteria": [34, 54], "critic": [41, 47, 64], "croissant": 49, "crop": 44, "cross": [11, 32, 45, 47], "cross_valid": [47, 55], "cross_validation_df": 55, "crossov": 55, "crown": 43, "crucial": [34, 48, 54, 55, 56], "cryptographi": 49, "css": 65, "cst": 55, "csv": [1, 2, 6, 40, 41, 43, 49, 55, 56, 60, 63, 65], "csv_content": 42, "csv_file": 42, "csv_file_path": 1, "csv_path": 1, "ctime": 64, "cultur": [43, 55], "cumbersom": [14, 34, 40, 43, 48, 49, 50, 52, 54, 62], "cume": 44, "cumsum": [6, 55], "cumul": 55, "cup": 45, "cur": [34, 54], "curl": 47, "curli": [11, 32], "current": [1, 34, 41, 43, 44, 45, 47, 54, 55, 62, 63, 64, 65, 68], "current_d": 41, "current_statu": 1, "current_timestamp": 41, "curri": 45, "cursor": [34, 39, 46, 54], "curv": 55, "curvatur": 55, "custom": [5, 6, 13, 28, 34, 41, 42, 44, 45, 52, 54, 60, 62, 64, 65], "custom_cleaned_text": 49, "custom_count": 13, "custom_df": 1, "custom_metr": 47, "custom_styl": 6, "custom_tim": 13, "customdatafram": 1, "customer_count": 42, "customer_data": 41, "customer_df": 52, "customer_id": [41, 42, 43, 52], "customer_nam": 52, "customer_schema": 52, "customer_seg": 52, "customer_segment": 65, "customers_data": 41, "customers_delta": 41, "customers_df": 52, "customiz": [55, 56], "cut": [34, 43, 54], "cute": 56, "cutechart": 56, "cutoff": [11, 32, 43, 55], "cutoff_d": 43, "cv": 47, "cwd": 18, "cwida": 42, "cyan": 60, "cybertron": 45, "cycl": 60, "cycler": 56, "d": [3, 6, 7, 11, 13, 28, 30, 32, 34, 35, 37, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 58, 60, 64], "d24": 13, "d2l": 45, "d42e2061f9c283c4548af6c617727215c79ecafc74b9f3a294e6cf09afc5906f": 45, "d7b8": 41, "da": [49, 56], "dachshund": [1, 14, 22, 45], "dai": [3, 6, 11, 26, 28, 32, 34, 41, 43, 45, 47, 49, 54, 56, 64, 65], "daili": [45, 47, 55, 65, 68], "danc": [45, 49], "dark": 56, "dark_background": [6, 56], "darwin": [34, 54], "dash": [34, 54], "dashboard": 56, "dask": [47, 50], "dasklgbmforecast": 47, "data": [2, 3, 4, 6, 9, 15, 18, 23, 24, 29, 39, 40, 53, 57, 58, 59, 60, 62, 63, 64, 65, 66], "data1": [48, 59, 67], "data2": [15, 48], "data_chang": 41, "data_dir": [1, 59], "data_load": 1, "data_s": 27, "data_science_flowchart": 56, "data_typ": 27, "data_url": 41, "dataanalyz": 1, "databas": [40, 42, 46, 60], "database_nam": 39, "databrick": 39, "dataclass": [6, 14, 19], "dataclassdog": 14, "datacommon": 62, "datacommons_panda": 45, "datadrifttab": 56, "datafram": [1, 2, 5, 6, 15, 44, 46, 47, 48, 49, 55, 56, 60, 61, 62, 64], "dataframemodel": [34, 54], "dataframeschema": [34, 54], "datagener": 55, "datahub": 50, "dataload": 1, "datapipelin": 1, "dataprocessingstrategi": 1, "dataprocessor": 61, "dataquest": 49, "dataread": [45, 62], "dataset": [1, 6, 16, 24, 26, 27, 29, 34, 40, 41, 44, 52, 53, 54, 55, 56], "datatyp": [26, 27, 41], "date": [6, 34, 41, 42, 43, 45, 46, 49, 50, 52, 54, 56, 64], "date1": 3, "date2": 3, "date_column_1": 28, "date_column_2": 28, "date_featur": 55, "date_first_hir": 43, "date_fld": 48, "date_format": [], "date_of_birth": 45, "date_rang": [28, 41, 55, 56], "datefmt": 64, "datetim": [6, 11, 19, 32, 34, 41, 43, 45, 52, 54], "datetime64": [26, 28], "datetimeindex": 28, "dateutil": [52, 62], "dating_profil": 43, "daunt": 52, "david": 42, "dayofweek": 55, "dayofyear": 55, "db": [34, 39, 46, 54], "dbb9e7": 45, "dbl": 52, "dbname": 54, "dbt": 49, "dbtyou": 49, "dd": [50, 64], "dddd": 64, "ddf": 50, "ddt": 64, "de": [43, 49, 56], "dead": 43, "dead_cod": 61, "deal": [9, 13, 21, 26, 39, 43, 45, 50, 55, 58, 60, 63], "debug": [1, 9, 19, 41, 47, 61, 62, 65], "debut": 45, "decid": 62, "decim": [21, 34, 37, 47, 54, 60, 64], "decis": 55, "decision_funct": 47, "decision_region": 47, "decision_scores_": 47, "decisiontreeclassifi": [47, 56, 61], "declar": [6, 9, 14, 41, 56, 60], "decor": [1, 14, 19, 22, 34, 54, 60, 64], "decreas": [1, 27, 47, 49, 53, 60], "dedic": [43, 47], "dedup_field": 49, "dedupl": 43, "deep": [6, 27, 45, 47, 49], "deep_copi": 45, "deeparestim": 55, "deepli": [49, 58], "deer": 58, "def": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 19, 20, 22, 24, 29, 33, 34, 35, 40, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65], "default": [1, 4, 11, 25, 26, 27, 32, 34, 35, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 52, 54, 56, 58, 59, 60, 62, 64], "default_valu": 39, "defaultdict": 49, "defaut": 47, "defend": 45, "defer": 50, "defin": [1, 5, 6, 9, 14, 19, 26, 34, 39, 41, 43, 44, 47, 50, 51, 52, 54, 55, 56, 58, 60, 61, 65], "definit": [6, 39, 44, 45, 52, 58, 61], "deg_to_rad": 65, "degc": 58, "degf": 58, "degrad": 56, "degre": [43, 65], "del": 61, "delai": [2, 50], "delet": [60, 63], "delimit": 42, "delinqu": 47, "deliv": 43, "delta": [34, 42, 54], "delta_lak": [41, 42], "delta_lake2": 41, "delta_table_path": 41, "deltacatalog": 41, "deltalak": [41, 42, 50], "deltaprotocolerror": 41, "deltasparksessionextens": 41, "deltat": [41, 42], "demand": 55, "demo": 47, "demonstr": [6, 34, 39, 41, 42, 43, 44, 45, 47, 49, 52, 53, 54, 55, 56], "dendrogram": 56, "deni": 40, "dens": [47, 49], "depart": [43, 52], "department_nam": 43, "depend": [34, 41, 47, 52, 54, 55], "depict": 56, "deploi": [34, 47, 54], "deploy": 59, "deprec": [31, 45, 49, 60], "depth": [43, 47, 64], "depth_first_search": 62, "desc": [42, 45], "describ": [34, 44, 45, 49, 54], "descript": [43, 45, 46, 47, 49, 61, 63], "deselect": [34, 54], "deseri": 1, "design": [43, 44, 45, 47, 49, 50, 55], "desir": [6, 34, 44, 46, 54], "desk": 68, "despit": 49, "dessert": 49, "destcitynam": 42, "detail": [42, 44, 46, 48, 49, 55, 58], "detailed_result": 58, "detect": [34, 42, 43, 49, 52, 54, 58, 64], "detect_languag": 49, "detect_outli": 47, "detect_pii": 49, "detector": 47, "determin": [3, 49, 50], "determinist": 54, "dev": [6, 19, 26, 41, 42, 47, 50, 61], "develop": [5, 9, 22, 43, 47, 58, 61, 65, 68], "deviat": [1, 34, 44, 47, 54, 55], "devic": 48, "df": [2, 5, 6, 15, 24, 26, 27, 28, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 60, 62, 64], "df1": [25, 26, 30, 35, 41, 42, 43, 48, 50], "df2": [25, 26, 30, 35, 41, 42, 48, 50], "df3": [26, 41, 50], "df_": [26, 35, 53], "df_chunk": 26, "df_cv": 55, "df_select": 52, "df_transform": 52, "df_withcolumn": 52, "diabet": 47, "diabetes_model": 47, "diacrit": 49, "diagnosi": 47, "diagon": 45, "diagram": 45, "dialect": 39, "diamet": 9, "diamond": 43, "dict": [9, 15, 22, 39, 40, 46, 49, 55, 58, 61], "dict_item": [4, 13], "dict_valu": 22, "dictionari": [1, 5, 6, 9, 14, 35, 44, 45, 49, 52, 55, 68], "did": 9, "die": [43, 45], "diecinuev": 49, "diego": [34, 54], "diet": [26, 43], "diff": [3, 21, 55, 58, 62, 63, 65], "diff2": 30, "differ": [1, 5, 6, 9, 10, 11, 13, 15, 22, 24, 27, 32, 39, 41, 43, 45, 47, 49, 51, 52, 53, 55, 56, 59, 61, 62, 63, 65], "different_schema": 52, "difficult": [6, 8, 34, 39, 45, 47, 49, 52, 53, 54, 55, 56, 58], "difficulti": [46, 61], "diffus": 45, "dig": [43, 49], "digit": [8, 11, 16, 32, 39, 43, 49, 58, 64], "dimens": 46, "dimension": [37, 49, 58], "dimensionalityerror": 58, "dinosaur": 45, "dir": [48, 59, 62], "direct": [34, 42, 49, 52, 54, 55], "directbytebuff": 40, "directli": [1, 39, 40, 42, 47, 50, 52, 55, 58, 65, 69], "directori": [41, 42, 48, 59, 60, 61, 62, 63, 65], "directorybasedexampledatabas": [34, 54], "dirty_column": 43, "dirty_equ": [34, 54], "disable_gc": [34, 54], "discern": 6, "discolor": 56, "discount": [52, 58], "discount_amount": 58, "discount_elig": 52, "discov": [45, 49, 56, 63], "discoveri": 49, "discuss": [46, 55], "diseas": 47, "disguis": 65, "disk": [41, 42, 55], "displai": [1, 8, 11, 14, 32, 46, 49, 52, 55, 60], "displayed_link": 45, "displaystyl": [21, 60, 67], "disrupt": 6, "dist": [44, 62], "distanc": [40, 43, 49, 55, 56, 58, 60], "distance_bas": 55, "distil": 60, "distilbert": [49, 60], "distinct": [55, 56], "distort": 29, "distract": 61, "distribut": [55, 56, 64], "distributedmlforecast": 47, "district": [43, 56], "diver": 43, "divers": [47, 49], "divid": [6, 8, 21, 34, 45, 52, 54, 65], "divis": [6, 34, 43, 54], "dl": 41, "dnc": 49, "do": [3, 7, 8, 9, 11, 17, 20, 21, 22, 24, 26, 29, 32, 33, 34, 39, 40, 43, 45, 47, 49, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 68], "do_hourly_at_night": 65, "do_twice_a_week": 65, "do_work": 65, "dob": 45, "dobb": 45, "doc": [18, 24, 46, 49, 56, 59, 65], "doc1": 46, "doc2": 46, "doc3": 46, "doc_node_id": 49, "doc_node_valu": 49, "docl": 45, "docopt_exampl": 59, "docstr": [5, 59], "doctor": [43, 49, 56], "document": [18, 24, 44, 46, 47, 49, 52, 56, 64, 65, 68], "document_load": 46, "dodgemopar": 45, "doe": [5, 6, 14, 16, 34, 40, 41, 42, 45, 50, 52, 54, 55, 65], "doesn": [1, 4, 16, 19, 24, 34, 43, 46, 52, 54, 58, 60, 65], "dog": [1, 14, 19, 22, 34, 43, 45, 49, 54, 56, 58, 64], "dog1": 1, "dog2": 1, "doga": 49, "doi": 49, "dollar_amt": 48, "dollar_amt_1": 48, "dollar_amt_2": 48, "domain": [45, 46, 49, 58], "don": [1, 4, 7, 14, 15, 21, 34, 43, 46, 47, 49, 54, 56, 58, 62], "donald": [45, 49], "done": [20, 21, 33, 47, 49, 63], "donnemartin": 45, "dosisod": 61, "dot": [20, 42, 52, 56], "dotenv": 59, "doubl": [1, 45, 52], "doubletyp": 52, "down": [6, 26, 45, 52, 65], "downcast": [45, 53], "download": [26, 42, 46, 47, 49, 56, 58, 60, 64, 69], "download_corpora": 49, "download_fil": 58, "download_return": 55, "download_robot_execution_failur": 55, "downstream": 39, "dpi": 56, "dracula": 56, "draft": 65, "drag": 45, "dragon": 19, "drain": 45, "draw": 56, "drawdown": 55, "dress": 56, "drink": [1, 43], "drive": [44, 45, 49], "driver": [52, 65], "drop": [11, 24, 32, 35, 50, 52, 55, 59], "drop_column": [24, 64], "drop_dupl": 43, "drop_featur": 59, "drop_missing_data": 1, "dropcorrelatedfeatur": 43, "dropdown": 63, "dropmissingdatastrategi": 1, "dropna": [1, 28, 30, 43, 56, 61], "dropoff": [43, 56], "dropoff_borough": [43, 56], "dropoff_zon": [43, 56], "drug": [43, 49], "ds4sd": 45, "dst": [48, 64], "dsttzinfo": 55, "dt": [41, 43], "dt0": 41, "dt_previou": 41, "dtw": 55, "dtype": [24, 26, 28, 29, 30, 34, 35, 40, 41, 43, 45, 47, 49, 53, 54, 55, 58], "du": 45, "duck": [34, 44, 54, 64], "duck_biologi": 44, "duck_pdf_path": 44, "duckdb": 40, "duckpdf": 44, "dude": 46, "dudeifi": 46, "due": [16, 34, 44, 45, 46, 49, 52, 54, 55, 58, 62, 64], "duft": 56, "dufte_bar": 56, "duftifi": 56, "dummi": 58, "dummyclassifi": 47, "dummymodel": 58, "dump": [1, 47, 51, 55, 58], "duplic": [5, 43, 47, 52], "duplicated_food": 43, "durat": [19, 34, 53, 54, 55, 56], "duration_in_minut": 3, "dure": [34, 41, 43, 45, 48, 50, 51, 54, 55, 61], "dvc": [34, 54, 65], "dweibul": 44, "dwnlded": 41, "dynam": [61, 62], "e": [6, 7, 19, 34, 35, 39, 41, 42, 44, 47, 49, 51, 52, 54, 55, 56, 58, 61, 62], "e48789": 47, "e583b6": [6, 47, 56], "e7487bc3c4ab417c965144efcecaca2f": 47, "each": [1, 2, 6, 13, 14, 15, 16, 20, 26, 34, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 60, 62, 64, 65, 68], "eager": 50, "earli": [45, 52], "earlier": 62, "earliest": 52, "earth": 49, "eas": [48, 50], "easi": [14, 15, 18, 19, 23, 34, 41, 44, 45, 46, 49, 51, 52, 53, 54, 56, 58, 60, 63, 65], "easier": [5, 6, 7, 9, 18, 21, 26, 34, 39, 46, 47, 49, 54, 56, 58, 60], "easiest": 28, "easili": [1, 2, 5, 11, 18, 19, 32, 40, 45, 46, 47, 48, 49, 50, 51, 56, 60, 63], "east": [26, 43, 44, 45, 50, 56], "eastern": 45, "eat": [44, 49, 56], "ec": 65, "echo": 65, "eclf": 47, "ed5ff1": 45, "eda": 56, "edece": 56, "edg": [34, 43, 49, 54, 56], "edgecolor": [47, 56], "edit": [61, 65], "edit_data": 64, "editor": [33, 49, 56], "educ": [43, 45], "eequir": [34, 54], "effect": [34, 47, 49, 54, 55], "effici": [1, 7, 9, 10, 13, 15, 17, 48, 52, 53, 55, 58, 60, 63, 65], "efficient_python_tricks_and_tools_for_data_scientist": [9, 18, 34, 37, 47, 54, 61, 63], "effort": [43, 65], "effortlessli": [41, 46, 56], "egg": [56, 63], "egypt": 43, "ehocol": 43, "eighteen": 45, "einfach": 43, "einstein": 45, "either": [4, 5, 6, 11, 18, 22, 27, 29, 30, 32, 34, 37, 41, 49, 54, 58, 69], "elaps": [5, 55], "elasticnet": 47, "elasticnetparam": 47, "electron": 50, "elegantli": 16, "element": [10, 22, 34, 35, 45, 54, 56, 58, 60, 64, 65], "element_to_be_click": 65, "elif": [1, 5, 9, 29, 34, 52, 54, 55], "elig": [34, 52, 54], "elimin": [34, 39, 42, 47, 48, 50, 54, 55, 60, 63], "elong": 49, "els": [1, 3, 7, 9, 13, 15, 22, 24, 33, 34, 43, 52, 53, 54, 55, 58, 60, 64, 65], "em": 43, "email": [4, 14, 41, 45, 49], "email_send": 65, "emb": 60, "embed": [46, 56], "emma": 52, "emoji": 49, "emoticon": 49, "emp": 43, "emperor": 55, "emphasi": 49, "empir": 44, "employe": [41, 52], "employee_id": 41, "employee_nam": 41, "employee_position_titl": 43, "employee_salari": 43, "employment_typ": 43, "empow": 42, "empti": [1, 4, 6, 34, 47, 49, 54, 61, 63, 65], "en": [26, 45, 49, 56], "en_core_web_lg": 49, "en_core_web_sm": 49, "enabl": [1, 9, 16, 40, 41, 46, 47, 48, 49, 52, 55, 56, 58, 61, 62, 65], "enc": 43, "encapsul": 52, "encod": [44, 49, 62, 64], "encode_and_plot": 43, "encode_cat_vari": 64, "encode_categorical_data": 1, "encoded_col1": 24, "encodedatastrategi": 1, "encoding_method": 43, "encount": [4, 6, 29, 39], "encourag": 59, "encrypt": 49, "end": [5, 6, 20, 28, 33, 37, 40, 45, 49, 52, 55, 56, 60, 64], "end_dat": [26, 34, 41], "end_t": 52, "end_tim": 58, "endfor": 60, "endif": 60, "endpoint": [47, 55], "endswith": 64, "enforc": [43, 50], "engin": [26, 39, 41, 42, 48, 50, 52, 60], "engineeringqubit": 43, "english": [1, 43, 56], "enhanc": [6, 41, 46, 47, 55, 58, 61], "enjoi": 49, "enough": 41, "ensembl": 47, "ensemblevoteclassifi": 47, "ensur": [6, 15, 19, 29, 34, 35, 39, 41, 43, 47, 49, 50, 51, 52, 54, 55, 58, 61, 65], "ensure_all_finit": 49, "ent": 49, "entendr": 45, "enter": [43, 45, 65], "entir": [16, 41, 42, 43, 47, 50, 52, 65], "entiti": 49, "entri": [16, 27, 28, 41, 43, 49, 53], "entries_per_exampl": 43, "entryb": 55, "enumer": [43, 47], "env": [47, 63, 65], "environ": [34, 43, 45, 46, 47, 49, 52, 54, 59, 65], "eo": 49, "ephi": 45, "epoch": 45, "eq": [21, 34, 54], "equal": [1, 21, 47, 52, 62], "equal_end": 55, "equal_inf": 37, "equal_nan": 37, "equinox": 55, "equiti": 55, "equival": [34, 49, 50, 52, 54], "eradicate_test": 61, "erasor": [11, 32], "erpnext": 45, "err": [34, 54, 61], "err_msg": 37, "error": [1, 4, 5, 7, 9, 14, 19, 22, 24, 29, 37, 39, 41, 42, 44, 47, 49, 58, 60, 61, 63, 64, 65, 69], "escrow": 49, "esp": 43, "especi": [6, 9, 16, 24, 41, 42, 43, 44, 47, 48, 50, 53, 55, 56, 58, 60, 62, 63, 64], "espn": 45, "essay0": 43, "essay1": 43, "essay2": 43, "essay3": 43, "essay4": 43, "essenc": 49, "essenti": [10, 41, 47, 49, 61, 68], "est": 47, "establish": [34, 54], "estim": 2, "et": [45, 55], "etc": [34, 35, 47, 54, 61, 65], "ethiopia": 43, "eu": 50, "euclidean": 40, "europ": 26, "ev": 42, "eval": 52, "evalu": [6, 20, 29, 43, 44, 47, 50, 55], "evaluate_print": 47, "evaluate_result": 64, "even": [1, 5, 6, 7, 27, 34, 42, 46, 47, 49, 52, 54, 55, 65], "even_numb": 5, "event": [3, 41, 43, 45, 55, 58], "event_t": 52, "event_ts_second": 52, "ever": [1, 3, 6, 21, 26, 28, 33, 34, 54, 56, 58, 60, 62, 64, 67], "everi": [5, 7, 28, 34, 41, 50, 54, 61, 63, 64, 65, 68], "everybodi": 65, "everydai": 43, "everyon": 45, "everyth": [24, 50, 53], "evict": 41, "evolv": [34, 52, 54], "exact": [9, 34, 43, 46, 47, 49, 50, 54, 55, 58], "exactli": [8, 21, 34, 40, 43, 45, 47, 54, 56, 58, 64], "examin": 64, "exampl": [1, 2, 4, 5, 6, 8, 9, 14, 15, 16, 19, 22, 24, 26, 27, 29, 30, 33, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65], "example1": 64, "example2": [39, 64], "example_data": [34, 54], "example_fil": 58, "example_file2": 58, "exce": [27, 61], "excel": [5, 19, 33, 46, 48, 49, 60], "except": [7, 9, 19, 37, 41, 46, 47, 52, 58, 65], "excerpt": 46, "excess": 53, "exclud": [28, 34, 43, 54, 61], "exclude_path": [34, 54], "execut": [5, 6, 26, 39, 41, 42, 45, 46, 48, 52, 58, 61, 69], "executemani": [39, 46], "execution_time_m": 41, "executor": 52, "executorenv": 55, "exercis": [7, 26, 56], "exet": 45, "exist": [4, 18, 39, 41, 46, 47, 50, 52, 54, 55, 56, 58, 62, 65], "exist_ok": [18, 41, 65], "existing_data": 41, "existingrdd": 52, "exp_past_year_marijuana": 47, "expand": [41, 56, 61, 64], "expandtab": 64, "expans": 21, "expect": [22, 47, 49, 52, 55, 61], "expected_condit": 65, "expected_df": 52, "expens": [34, 41, 54, 55], "experi": [7, 13, 16, 34, 40, 43, 49, 53, 54, 55, 56, 66], "experience1": [34, 54], "experience2": [34, 54], "expertis": 49, "explain": [6, 49, 52, 56, 61], "explan": [44, 64], "explicit": [6, 39, 42, 49, 52, 58, 60], "explicitli": [1, 6, 50, 58, 65], "explod": 52, "explor": [10, 43, 49, 68], "explos": 49, "expon": 44, "export": [17, 56, 60, 62], "exposur": 55, "expr": 21, "express": [9, 20, 21, 45, 52, 65], "expsiz": [2, 7], "extend": [1, 6], "extend_panda": 55, "extens": [41, 47, 49, 55, 65, 67], "extern": [1, 19, 58], "extra": [28, 41, 43, 49, 52, 62], "extra_index": 47, "extract": [4, 7, 9, 26, 34, 42, 47, 50, 54, 59, 63], "extract_relevant_featur": 55, "extract_schema": 46, "extract_senti": [34, 54], "extract_text": [44, 60], "extratreeclassifi": 47, "extratreesclassifi": 47, "extrem": [16, 47, 55, 61], "ey": 45, "f": [1, 2, 3, 4, 5, 6, 7, 9, 14, 15, 18, 19, 20, 26, 27, 34, 35, 37, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67], "f1": 47, "f1_score": 60, "f386": 41, "f5ee7bc47f5615e89f1729dcb49632c6b76a90ba50eb42d782e2790398ebc539": 45, "f64": 50, "f694ff": 56, "f8": 58, "f8b0fc900aa14cf0ade8d0165c5a9f11": 47, "f_x": 55, "f_y": 55, "f_z": 55, "fabbede0577b3fed686afd319d5ab794f1b35b02": 45, "face": [49, 60], "facebook": 49, "facebook_scrap": 45, "facecolor": [47, 56], "facil": 43, "fact": [34, 54, 58, 60], "factor": [47, 55], "factori": [21, 60, 64], "factual": [34, 54], "factual_consist": [34, 54], "factual_consistency_metr": [34, 54], "factualconsistencymetr": [34, 54], "factualconsistencymodel": [34, 54], "fahrenheit": 58, "fail": [1, 5, 24, 41, 49, 52, 55, 61, 62], "failur": 41, "fair": 43, "faiss": 46, "fake": [43, 49], "faker": [34, 54], "falcon": 49, "fallback": 49, "fals": [1, 2, 6, 7, 13, 16, 26, 28, 29, 34, 37, 40, 42, 43, 45, 49, 50, 51, 52, 54, 55, 58, 60, 61, 64, 65], "famili": [47, 56], "familiar": [39, 50, 52], "fan": [43, 64], "fantasticheartsound": 45, "faq": 49, "far": 55, "fare": [43, 56], "farm": 45, "fascin": [46, 60], "fast": [23, 34, 43, 44, 45, 48, 54, 58, 65], "fastai": 43, "faster": [2, 7, 9, 13, 19, 26, 34, 41, 49, 54, 61], "fastest": [29, 45], "fat": [26, 49], "fatal": 54, "fatcont": 45, "fav_food": 58, "favor": [45, 47], "favorit": [1, 45, 59], "fb18aec51cf": 45, "fbcdn": 45, "fcst": [47, 55], "fe_93550": 45, "feasibl": 16, "featur": [6, 27, 34, 42, 45, 50, 52, 54, 56, 58, 59], "feature1": 43, "feature2": 43, "feature_engin": 43, "feature_extract": [49, 56], "feature_nam": [46, 47, 56], "featureimport": 47, "features_filt": 55, "features_order_": 55, "featurescol": 47, "feb": 45, "februari": [6, 40, 45], "feel": [56, 69], "feeling_temp": 56, "feet": [58, 60], "feldstein": 45, "femal": [13, 45, 56], "feminin": 49, "ferri": 45, "fetch": [40, 45, 47, 55, 63], "fetch_20newsgroup": [49, 56], "fetch_california_h": [47, 53, 56], "fetch_employee_salari": 43, "fetch_openml": [43, 49, 56], "fetch_user_from_db": 54, "fetch_world_bank_ind": 43, "fetchal": [34, 39, 54], "fetchon": [46, 54], "few": [14, 42, 43, 44, 45, 47, 48, 49, 52, 55, 56], "fewer": [37, 68], "ff6767": 56, "ff69b4": 56, "ffca85": 56, "ffff99": 47, "ffill": [24, 45], "fg65_rp17lz39z89p0nkv8ch0000gn": [24, 60], "fh": 55, "fibercont": 45, "fickl": 58, "field": [14, 34, 39, 42, 45, 49, 52, 54, 58, 64, 68], "fifth": 49, "fig": [47, 49, 55, 56], "figlet_format": 60, "figsiz": [43, 45, 47, 49, 55, 56], "figur": [8, 21, 43, 44, 47, 49, 55, 64], "figure2": 55, "file": [1, 2, 9, 16, 22, 26, 33, 37, 39, 40, 44, 46, 47, 48, 49, 50, 55, 56, 58, 60, 64], "file_": 64, "file_download": 60, "file_exist": 65, "file_nam": [34, 54], "file_path": [1, 26], "file_to_run": 65, "filenam": [1, 34, 54, 58, 61, 65], "filepath": 41, "filer": 26, "filesad": 41, "filesremov": 41, "filesystem": [34, 54], "fill": [16, 25, 43, 44, 46, 55, 64], "fill_between": [47, 55], "fill_dict": 24, "fill_valu": [28, 43], "fillchar": 64, "fillmiss": 43, "fillna": [24, 45], "fillvalu": 16, "filt": 6, "filter": [5, 6, 20, 34, 41, 42, 44, 45, 47, 49, 52, 54, 65], "filter_": 20, "filter_fruit": 20, "filter_func": 49, "filter_st": [34, 54], "filter_str": 49, "filtered_df": 28, "filterwarn": 26, "final": [20, 43, 52, 55, 60], "financi": 55, "find": [1, 3, 6, 10, 16, 21, 24, 43, 45, 46, 47, 49, 55, 56, 59, 63, 64], "find_dat": 55, "find_el": 65, "find_index": 20, "find_loc": 44, "find_similar_recip": 49, "findal": 55, "fine": [45, 49, 55], "finish": [3, 6, 39, 49], "fire": 43, "fire_exampl": 60, "firefight": 43, "first": [4, 11, 15, 16, 22, 24, 25, 26, 27, 30, 32, 34, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 54, 55, 56, 58, 60, 61, 65], "first_fiv": 58, "first_five_word": 49, "first_nam": 52, "first_sum": 40, "firstname_output_lett": 49, "fish": [45, 56], "fit": [1, 34, 43, 44, 45, 47, 49, 50, 54, 55, 56], "fit_resampl": 47, "fit_transform": [43, 44, 47, 49, 56], "fitintercept": 47, "five": [40, 45], "fix": [15, 28, 34, 39, 49, 54, 55, 61, 65], "fixabl": 61, "fixtur": [52, 55], "fl": [34, 43, 54], "fl_score": 61, "flag": 43, "flake": 45, "flake8": 61, "flask": 62, "flat": [43, 55], "flat_df": 42, "flatbush": 43, "flatiron": [43, 56], "flatten": [41, 42, 58], "flavor": [1, 45, 47, 49, 56, 58], "fleurieu": 55, "flexibl": [1, 23, 49, 52, 60, 61], "flierprop": 56, "flight": 40, "flight_data_2018_to_2022": 26, "flightdat": 42, "flipper": 60, "float": [1, 5, 6, 8, 9, 16, 19, 22, 27, 29, 45, 46, 47, 55, 58, 60, 61, 64, 65], "float16": 27, "float32": [27, 53], "float64": [27, 30, 34, 40, 41, 47, 53, 54, 55], "float_col": 27, "float_fld": 48, "float_fld_1": [], "float_fld_2": [], "float_pars": 61, "floattyp": 52, "flow": [6, 64], "flower": 64, "fluctuat": 55, "fluent": 49, "fluentli": 43, "fluff": 45, "fluid": 56, "fly": 60, "fmt_number": 60, "fn": 46, "fo": 43, "foami": 46, "focu": [1, 44], "focus": 44, "fog": 5, "fold": [43, 47, 64], "folder": [18, 24, 34, 42, 54, 60, 62, 63, 65], "follow": [1, 5, 6, 9, 18, 24, 26, 27, 34, 39, 41, 42, 45, 46, 47, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65], "follower_count": 45, "following_count": 45, "follwo": 49, "font": [44, 60], "font_dict": 44, "font_scal": 43, "font_siz": 44, "fontsiz": [47, 55], "foo": [39, 52, 60], "food": [1, 9, 13, 43, 49, 58], "food_box": 58, "food_pric": 13, "foot": 43, "footer": [44, 49, 60], "forc": [55, 60, 62], "force_all_finit": 49, "force_download": 60, "forecast": 47, "forecast_fitted_valu": 55, "forecasts_df": 55, "forest": 47, "forestdiffusiongener": 45, "forg": 47, "forget": [34, 46, 54, 61], "fork": 45, "forks_count": 63, "form": [21, 35, 49], "format": [9, 24, 27, 35, 39, 41, 42, 44, 46, 50, 51, 52, 55, 56, 58, 60, 61, 64, 65], "format_map": 64, "formatted_fil": 33, "former": 55, "formula": [34, 40, 54, 60], "forpath": 41, "fortun": 45, "forward": [43, 45], "found": [1, 6, 11, 22, 32, 34, 39, 41, 43, 44, 54, 56, 60, 61, 62, 64, 69], "found_alpha": 16, "foundat": [52, 55], "four": [45, 49], "fox": 49, "fp": 65, "fpdf": 44, "fr": [43, 45, 49], "frac": [21, 60], "fraction": [21, 45], "fragment": 44, "fragrant": 45, "frame": [27, 28, 37, 42, 50, 53, 56], "framealpha": 56, "framework": [40, 47, 48, 55], "franc": 45, "franci": 45, "francisco": [34, 43, 52, 54], "frapp": 45, "fraud": 47, "fraudul": 43, "freakishli": 43, "free": [34, 44, 54, 55, 68, 69], "freez": 62, "freeze_tim": [34, 54], "french": 43, "freq": [28, 41, 47, 49, 52, 55], "freqdistvisu": 56, "frequenc": [44, 47, 55], "frequent": [39, 45, 49, 50, 52, 64], "frequent_item": [], "frequent_str": [], "frequentitem": [], "fresh": [45, 49], "fri": 49, "fridai": 45, "friend": [35, 49], "friend_count": 45, "friendli": [43, 48, 55, 56, 68], "friends1": 35, "friends2": 35, "friends_broken_in_st": 47, "frolick": 43, "from": [1, 2, 3, 5, 6, 8, 9, 11, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 27, 28, 32, 34, 42, 43, 48, 50, 52, 53, 54, 56, 58, 59, 62, 64, 67, 69], "from_csv": 1, "from_docu": 46, "from_hugging_face_stream": 49, "from_iter": 56, "from_json": 51, "from_llm": 46, "from_opt": 58, "from_panda": 50, "from_password": 48, "from_pickl": 1, "from_pretrain": [49, 55], "from_yaml": 51, "fromisocalendar": 64, "fromisoformat": 64, "fromordin": 64, "fromtimestamp": 64, "froth": 46, "froth_milk": 46, "frozen": [34, 49, 54], "fruit": [4, 7, 10, 13, 16, 17, 20, 22, 29, 30, 35, 39, 40, 46, 48, 52, 56, 58, 61], "fruit1": 49, "fruit2": 49, "fruit_data_with_color": 56, "fruit_label": 56, "fruit_nam": 56, "fruit_subtyp": 56, "fruit_typ": 22, "fruits_str": 7, "frustrat": [34, 54], "fsb": 43, "fsql": 39, "fsspec": [47, 62], "ft": 58, "fuel": [45, 60], "fugit": 43, "fugu": [34, 39, 54], "fugue_spark": 40, "fugue_sql": 39, "full": [34, 43, 45, 47, 52, 54, 55, 58, 60, 61, 62, 63, 65], "full_match": 49, "full_nam": 63, "fulli": 56, "fullrepositori": 63, "fulltim": 43, "fulluni": 49, "fun": [21, 43, 45], "func": [2, 5, 40, 58, 61], "func2": 2, "funcnam": 64, "function": [8, 17, 19, 39, 41, 42, 43, 44, 46, 47, 49, 50, 52, 55, 56, 68], "functioncal": 46, "functool": [5, 12], "fundament": [49, 56, 65], "funni": 45, "fur_color": 56, "furb108": 61, "furb109": 61, "furnitur": 4, "furniture_loc": 4, "further": [19, 34, 40, 44, 49, 54, 61, 68], "futur": [6, 31, 40, 43, 45, 47, 55], "futurewarn": [31, 43, 45, 49, 52, 56, 60], "fuzz": 49, "fuzzi": 49, "fuzzy_join": 43, "g": [34, 35, 39, 40, 42, 43, 44, 45, 47, 49, 51, 54, 55, 62], "ga": 43, "gain": [49, 55], "gainesvil": 43, "galact": 49, "galacticdataset": 49, "game": 49, "gamma": 44, "gan": 45, "gangener": 45, "gap": [48, 55], "garden": 24, "garlic": 45, "garnish": 45, "gate": 1, "gather": 45, "gaussiannb": [47, 61], "gaza": 43, "gb": [43, 45], "gcc": 67, "gdp": 43, "gdppc": 43, "gdrive": 48, "geekcomput": 45, "gehid": 45, "gemini": 43, "gen_param": 45, "gen_x_tim": 45, "gender": [13, 43, 45, 49, 56], "gener": [6, 22, 26, 27, 41, 43, 44, 46, 47, 48, 50, 53, 61, 63, 67], "general_param": 49, "generalize_nam": 49, "generate_daily_seri": 55, "generate_data": 47, "generate_data_pip": 45, "generate_inst": 55, "generate_numb": [34, 54], "generate_prices_for_seri": 55, "generate_seri": 55, "generate_topic_wordcloud": 49, "genextrem": 44, "gensim": 49, "gentl": 45, "geocod": 44, "geoid": 45, "geoloc": 44, "geometr": 40, "geometri": 40, "georg": [45, 48], "geoseri": 40, "geospati": 44, "german": 43, "germin": 56, "get": [2, 10, 13, 16, 21, 26, 27, 29, 34, 41, 43, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65], "get_add_act": 41, "get_answ": 45, "get_classification_dataset": 47, "get_clean_dataset": 47, "get_cluster_info": 49, "get_csv_data": 6, "get_data": [6, 34, 62], "get_data_for_last_week": 34, "get_day_of_week": [34, 54], "get_discount": 5, "get_dog": [34, 54], "get_dummi": [1, 35], "get_embed": 49, "get_feature_nam": 56, "get_group_info": 45, "get_height_in_feet": 22, "get_incoming_data": 65, "get_interv": 55, "get_item_info": 46, "get_match": 58, "get_mean": [34, 54, 60, 61, 65], "get_model_matrix": 44, "get_modulo": 60, "get_multiples_of_n": 8, "get_n_max_heapq": 7, "get_n_max_sort": 7, "get_name_pric": 61, "get_num_top": 49, "get_or_create_collect": 49, "get_pattern": 58, "get_pickle_data": 6, "get_plan_detail": 9, "get_pric": [1, 9, 20, 22, 58], "get_profil": 45, "get_related_quest": 45, "get_size_per_vari": [34, 54], "get_sum": 24, "get_tensor": 48, "get_ticket": 58, "get_top": 49, "get_topic_info": 49, "get_verdict": [34, 54], "get_working_days_delta": 55, "get_youngest_pet": 9, "getenv": 59, "getfreedom": 43, "getlogg": [34, 54], "getorcr": [41, 47, 52, 55], "getsiz": 2, "ggplot": 55, "gh": 63, "gif": [45, 60], "ginger": 45, "girl": [45, 49], "giskard_model": 46, "gist": [41, 63], "git": [43, 48, 49, 55, 56, 61, 65], "github": [26, 33, 42, 43, 44, 45, 47, 49, 55, 56, 58, 61, 65, 69], "github_token": 63, "githubusercont": [26, 40, 41, 43, 55, 56, 63], "give": [4, 6, 9, 20, 22, 33, 34, 37, 43, 47, 52, 54, 55, 59, 60], "given": [5, 7, 9, 28, 34, 45, 46, 47, 49, 54, 55, 62, 64], "givennam": 44, "glass": 43, "gliner_medium": 49, "glob": 42, "global": [7, 13, 44], "globe": 45, "gmail": 65, "go": [1, 6, 21, 24, 43, 45, 46, 49, 50, 56, 63], "go_to": 65, "goal": [49, 55, 68], "god": [45, 49], "golden": [14, 45], "good": [5, 13, 20, 27, 34, 43, 45, 49, 52, 54, 59, 61], "goog": 55, "googl": [1, 43, 49, 52, 55, 65, 69], "googlenew": 45, "got": [7, 8, 24, 28, 45, 49, 61], "govern": 49, "govner": 49, "gpe": 49, "gpt": [46, 47], "grade": [5, 34, 49, 54], "grader": 49, "gradientboostingclassifi": 47, "graduat": 43, "grain": 45, "gram": 49, "grammar": [11, 32], "grandma": 65, "grandpar": 18, "granny_smith": 56, "grape": [4, 7, 9, 10, 16, 17, 20, 22, 29, 30, 61], "graph": [55, 56, 62, 64], "grate": 45, "grd": 47, "great": [43, 46, 47, 58, 61], "great_tabl": 60, "greater": [19, 37, 52], "greater_than": 19, "green": [4, 20, 33, 43, 44, 45, 46, 47, 55, 60], "greeneri": 55, "greet": 9, "greetng": 9, "gregorian": 64, "grep": 18, "grid": [6, 33, 47, 55, 56], "grid_param": 47, "grid_search": 47, "gridsearchcv": 61, "gridspec": 47, "gridspec_kw": 55, "groceri": [1, 7, 22, 46], "grocery_item": [1, 46], "groceryitemqueri": 46, "group": [8, 22, 34, 40, 42, 43, 45, 47, 50, 52, 54, 55, 56, 61], "group1": 56, "group2": 56, "group_bi": 50, "group_column": [34, 54], "groupbi": [28, 29, 34, 42, 43, 50, 52, 54, 55], "grow": [43, 45], "growth": 56, "gruvbox": 56, "gssapi": 54, "gt": [19, 43, 60, 62, 64], "guam": 45, "guarante": [41, 48], "gui": 43, "guid": [48, 49], "guidelin": [45, 61], "gz": [49, 58, 64], "gzip": 58, "h": [3, 35, 41, 43, 47, 55, 56, 64], "h1": 55, "h384": 49, "ha": [1, 5, 8, 14, 22, 26, 27, 39, 40, 41, 42, 43, 45, 47, 49, 50, 51, 55, 56, 60, 61, 68], "habitat": 44, "had": [1, 27, 34, 49, 54, 55], "hadoop": [40, 41, 52], "hagan": 45, "haha": 49, "hai": 49, "half": 43, "halfwai": 41, "hall": 45, "hallucin": 46, "hampden": 44, "hand": [19, 45, 50, 56], "handi": [11, 14, 20, 21, 32, 34, 54, 55, 56, 59, 62, 63, 64, 65], "handl": [1, 4, 9, 10, 14, 18, 19, 34, 39, 40, 41, 44, 45, 46, 47, 48, 50, 52, 54, 56, 58, 59, 63, 64, 65], "handle_unknown": [43, 47], "handler": 64, "handwritten": 60, "hansen": 45, "happen": [21, 34, 41, 61, 64], "happi": [34, 43, 54], "happiness_report_2022": 43, "har": 39, "hard": [1, 6, 43, 45, 49, 52, 56, 58, 63, 65], "hardcod": 6, "harder": [1, 4, 6, 19, 34, 50, 54, 61, 65], "harlem": [43, 56], "harm": 58, "harri": 44, "harvard": 45, "has_": 52, "has_answ": 45, "has_company_logo": 43, "has_few_return": 52, "has_high_spend": 52, "has_quest": 43, "hash": 47, "hashabl": 4, "hashtag": [45, 49], "hasn": 55, "hassl": [63, 64], "hat": 45, "hate": 39, "have": [1, 3, 4, 7, 9, 16, 19, 20, 21, 22, 24, 26, 27, 28, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68], "hbr2own": 49, "hca": 43, "he": 49, "head": [26, 34, 40, 41, 43, 44, 45, 48, 49, 50, 54, 55, 56, 58, 60, 65], "head_view": 49, "headach": 64, "header": [37, 42, 44, 49, 60, 63], "health": 43, "healthi": [49, 56], "heap": 50, "heat": [45, 64], "heatmap": 43, "heavi": 50, "heavili": 47, "heavyladybug837": 45, "heavywolf743": 45, "heerhugowaard": 56, "hei": [43, 46], "heiberg": 60, "height": [9, 22, 43, 56], "heliport": 50, "hello": [6, 9, 18, 45, 46, 58, 60, 64, 65], "help": [1, 27, 34, 37, 41, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 60, 64, 65, 67], "helper": 52, "helpfulli": 46, "her": [45, 49, 68], "here": [1, 10, 11, 19, 27, 32, 34, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65], "hero": 49, "hh": [43, 64], "hi": 55, "hidden": [34, 37, 53, 54, 61], "hierarch": [14, 47, 52, 53, 56], "hierarchi": [14, 43, 52], "hierarchicalforecast": 55, "hierarchicalreconcili": 55, "high": [6, 15, 19, 21, 43, 45, 49, 50, 52, 53, 55, 65], "high_level": 60, "higher": [34, 47, 54, 55], "highest": [37, 40], "highli": [43, 45], "highlight": [52, 53, 55, 60, 63, 64], "highlight_cel": 33, "highlight_numb": 33, "hight": 45, "hike": 49, "hill": [43, 56], "hillari": 49, "him": 45, "himself": 45, "hint": [6, 14, 60, 61, 63], "hip": 56, "histgradientboostingclassifi": 47, "histogram": 55, "histor": 55, "histori": 41, "hit": 64, "hive": [], "hl": 45, "hline": 33, "hobbi": 49, "hock": 49, "hockei": 49, "hold": [6, 20, 51, 55], "holidai": 56, "hollywood": 45, "hollywoodreport": 45, "home": [7, 31, 34, 40, 45, 48, 49, 54, 56, 62, 64], "homebrewltd": 45, "hometown": 45, "honei": 49, "honeyinthejar": 49, "hood": 56, "hook": 61, "hope": 55, "horizon": 55, "horizont": 44, "hors": [45, 49], "host": [39, 44, 45, 48, 54], "hostnam": [40, 48], "hot": [44, 45, 46], "hour": [11, 28, 32, 34, 41, 43, 54, 55, 56, 58, 64, 65], "hourli": [41, 55, 65], "hous": [43, 47, 53], "houseag": 47, "how": [1, 3, 6, 8, 11, 20, 22, 25, 28, 29, 32, 34, 39, 41, 44, 45, 46, 48, 49, 50, 52, 54, 55, 56, 58, 59, 61, 62, 63, 64], "howev": [1, 5, 6, 7, 14, 16, 19, 20, 29, 30, 34, 39, 47, 52, 54, 55, 56, 58, 59, 61, 65], "howto": 43, "hq720": 65, "hrec": 55, "href": 37, "hspace": 55, "hstreeclassifiercv": 47, "ht": 45, "html": [24, 43, 45, 46, 47, 55, 56, 60], "html_url": 63, "htmlmin": 62, "http": [1, 19, 24, 26, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 59, 60, 61, 62, 63, 65], "http_proxi": 62, "https_proxi": 62, "hudson": [43, 56], "hue": [56, 65], "huge": 50, "huggingfac": [49, 60], "huggingface_hub": 60, "human": [43, 46, 55], "humid": 56, "hundr": 49, "hunter": 55, "hurl": 45, "hydra": [34, 54], "hydra_exampl": 59, "hyperparam": 39, "hyperparamet": [47, 56], "hypertun": 47, "i": [1, 2, 3, 4, 5, 6, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "i64": 50, "ic": [49, 56, 58, 64], "ichigo": 45, "icon": 69, "icrecream": 64, "id": [25, 26, 39, 40, 41, 42, 45, 46, 47, 49, 50, 51, 52, 55, 59, 61, 63, 65], "id_00": 55, "id_01": 55, "id_1": 55, "id_var": 35, "idea": [34, 54], "ideal": [5, 19, 43, 50, 52, 56], "ident": [11, 21, 32, 52], "identifi": [9, 34, 39, 42, 44, 47, 48, 49, 53, 54, 55, 61, 64, 65], "idf": 49, "idg": 59, "idjit": 49, "if__name__": 6, "if_exist": 42, "ifnul": 39, "ignor": [13, 22, 26, 34, 43, 47, 49, 52, 54, 56, 58, 62], "ignore_index": 42, "ignore_ord": [34, 54], "ignore_warn": 47, "ihavetwoappl": 49, "ii": [43, 44], "iid": 59, "iii": 43, "ikea": 4, "illeg": 40, "illustr": [1, 9, 55], "iloc": [6, 24, 26, 27, 48, 55, 56], "im": 43, "imag": [39, 45, 56, 60, 62], "imageri": 43, "imagin": [1, 19, 28, 43, 47, 50], "imbalanc": 45, "imblearn": 47, "img": 45, "immedi": [49, 50, 58], "immut": [4, 14], "impact": [34, 50, 54, 55], "implement": [14, 15, 19, 24, 34, 41, 46, 47, 49, 52, 54, 55, 63, 67], "import": [1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 67], "imposs": 6, "improv": [6, 22, 25, 26, 42, 43, 45, 46, 47, 52, 56, 58, 60, 61, 66], "improvis": 43, "imput": [43, 47], "in_rang": [34, 54], "in_season": 20, "in_timezon": 55, "in_word": 55, "inact": 41, "inadvert": 6, "inc": [43, 44, 49], "inch": 45, "includ": [6, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 58, 61, 62, 64, 68], "include_lowest": [34, 54], "incom": [43, 45, 52, 65], "incompat": [22, 61, 62], "incomplet": [41, 64], "inconsist": [34, 39, 41, 49, 52, 54, 55, 58, 64], "inconveni": 60, "incorpor": [47, 49, 55, 68], "incorrect": [34, 42, 43, 54, 58], "increas": [11, 14, 24, 28, 32, 43, 44, 47, 52, 55, 56, 61], "increment": [1, 41, 61], "ind": 29, "inde": 22, "indent": 39, "independ": [52, 55, 56], "index": [2, 7, 16, 17, 24, 26, 27, 30, 35, 42, 43, 45, 49, 55, 61, 64], "index_col": [26, 55], "indexingerror": 29, "india": 43, "indic": [7, 16, 17, 37, 45, 47, 49, 52, 55], "indicator_id": 43, "individu": [24, 55, 61], "indol": 49, "industri": 43, "ineffici": [13, 16, 27, 41, 42, 50, 52], "inf": 55, "infer": [22, 27, 39, 42, 49, 52, 55, 65], "infer_object": 45, "infer_signatur": 47, "inferred_df": 27, "infin": 21, "infix": 58, "inflex": 55, "influenc": [47, 49], "info": [14, 27, 28, 34, 40, 46, 47, 49, 53, 54, 55, 62, 63, 64, 65], "inform": [6, 19, 20, 40, 43, 44, 45, 46, 47, 52, 53, 56, 61, 62, 64, 65], "infrequ": [43, 49], "ingest": 41, "ingredi": 45, "inher": [34, 54, 58], "inherit": 47, "ini": 65, "init": [48, 55, 62, 63], "initi": [14, 20, 34, 40, 41, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 58, 62], "initial_bal": 1, "initial_data": 41, "inject": [45, 51, 52], "ink": [11, 32], "inlier": 47, "inlin": 56, "inner": [43, 50, 52], "inner_f": 64, "inplac": [31, 61], "input": [9, 19, 20, 39, 45, 46, 47, 49, 55, 56, 59, 60, 61, 64, 65, 67], "input_data": 61, "input_df": [39, 40], "input_field": 49, "input_model": 61, "input_path": 59, "input_s": 55, "input_schema": [34, 54], "input_text": [49, 59], "input_typ": [19, 61], "input_valu": [19, 61], "input_vari": 46, "inquisit": 43, "insampl": 55, "inse": 45, "insert": [24, 34, 35, 39, 41, 46, 49, 54, 55, 64, 67], "insert_rows_sql": 39, "insid": [6, 11, 18, 32, 34, 54, 56, 58, 65], "insight": [43, 46, 47, 49, 55, 56], "inspect": 47, "inspector": 64, "inspir": [44, 47], "instal": [1, 2, 19, 20, 21, 22, 24, 26, 27, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67], "install_al": 65, "installablerequir": 47, "instanc": [6, 14, 19, 34, 44, 47, 49, 52, 54, 55, 58, 61], "instanti": [1, 34, 40, 47, 49, 54, 55, 56], "instantli": 6, "instead": [1, 2, 5, 7, 9, 13, 16, 17, 20, 21, 22, 24, 26, 27, 28, 29, 30, 34, 35, 37, 40, 41, 45, 47, 49, 50, 54, 55, 58, 60, 61, 62, 63, 64], "instruct": [28, 43, 45, 46], "instructlab": 45, "int": [2, 5, 6, 7, 8, 9, 14, 19, 22, 34, 39, 40, 42, 44, 46, 49, 51, 52, 53, 54, 56, 60, 61, 64, 65], "int64": [24, 26, 27, 28, 29, 30, 35, 40, 41, 42, 43, 45, 47, 50, 53, 55], "int8": 53, "integ": [5, 8, 11, 14, 16, 19, 22, 27, 32, 34, 39, 46, 54, 61, 65], "integer_column": 50, "integertyp": 52, "integr": [27, 34, 40, 43, 45, 48, 49, 54, 60], "intellig": 58, "intend": [24, 45, 52, 65], "intens": [41, 50], "intention": [34, 54], "interact": [34, 40, 44, 45, 47, 49, 54, 55, 58], "intercept": [44, 47, 55], "interest": [49, 55, 56], "interest_over_tim": 45, "interfac": [1, 39, 40, 43, 63, 64], "intermedi": 50, "intern": [19, 39, 42, 43, 44, 55], "internet": 43, "internship": 43, "interpol": [52, 60], "interpret": [53, 55, 62], "interquartil": [34, 54], "interrogate_exampl": 61, "intersect": 40, "interv": [41, 44, 52], "intervent": 55, "interview": 41, "intrigu": 45, "intrins": 17, "introduc": [1, 5, 6, 52, 54, 68], "intuit": [1, 14, 39, 50, 52, 55, 60, 64, 65], "invalid": [1, 5, 9, 34, 54, 60], "invalid_student_df": [34, 54], "invari": 41, "invest": 55, "invok": [22, 52], "involv": [24, 34, 41, 47, 48, 49, 50, 52, 54, 58], "io": [41, 45, 47, 48, 49, 50, 56], "ipcc": 46, "ipcc_ar6_syr_longerreport": 46, "ippc": 46, "iprogress": 56, "ipykernel_174022": 64, "ipykernel_23035": 60, "ipykernel_337430": 1, "ipykernel_38110": 16, "ipykernel_40588": 16, "ipykernel_77093": 24, "ipykernel_791962": 29, "ipynb": [18, 37, 56, 65, 67], "ipytest": 52, "ipython": [20, 43, 60, 64], "ipythonexperimentdisplai": 56, "ipyvizzustori": 56, "ipywidget": 56, "iqr": [34, 54], "iri": 56, "iris_data": 47, "irrelev": 47, "is_all_nan": 29, "is_bool_index": 29, "is_csv": 6, "is_dir": 65, "is_even": [5, 53], "is_in": 50, "is_list_like_index": 29, "is_long_term": 52, "is_mal": [34, 54], "is_mamm": 56, "is_month_end": 55, "is_month_start": 55, "is_numb": 6, "is_pet": 56, "is_post_process": 45, "is_quarter_end": 55, "is_quarter_start": 55, "is_sequ": 6, "is_subset": 10, "is_us": 6, "is_working_dai": 55, "is_year_end": 55, "is_year_start": 55, "isalnum": 64, "isalpha": 64, "isascii": 64, "isb": 43, "isdecim": 64, "isdigit": [16, 64], "isidentifi": 64, "isin": [34, 54], "isinst": [1, 6, 7, 8, 9, 14, 15, 19, 34, 46, 54], "island": [40, 55, 60], "islands_mini": 60, "islist": [34, 54], "islow": 64, "isn": 21, "isna": [29, 34, 48, 54], "isnotnul": 52, "isnow": [34, 54], "isnumer": 64, "iso": 64, "isocalendar": 64, "isoformat": 64, "isol": [34, 54], "isoweekdai": 64, "ispartialdict": [34, 54], "isprint": 64, "isra": 49, "israel": 49, "isspac": 64, "isstr": [34, 54], "issu": [5, 6, 14, 22, 27, 28, 34, 39, 42, 43, 45, 49, 52, 53, 54, 58, 61, 63, 69], "issubset": 10, "istitl": 64, "istruelik": [34, 54], "isupp": [7, 64], "itag": 65, "item": [1, 6, 24, 29, 33, 34, 39, 45, 46, 47, 49, 52, 54, 58, 60, 61, 65], "item_id": [47, 52], "item_pric": 52, "item_price_panda": 52, "item_price_view": 52, "itemid": 47, "iter": [34, 47, 54, 55, 58, 64, 68], "iterdir": 65, "itertool": [11, 12, 32, 47, 58], "ites": 49, "its": [1, 2, 6, 9, 11, 14, 20, 21, 27, 32, 33, 34, 41, 45, 47, 49, 50, 52, 54, 55, 56, 58, 60, 62, 64], "itself": [64, 67], "iv": 43, "ivers": 67, "ivi": 41, "ivy2": 41, "ivyset": 41, "j": [11, 16, 32, 43, 49, 65], "ja_cal": 55, "jake": 43, "jalakeno": 43, "jalaoeno": 43, "jalapend": 43, "jalapenh": 43, "jalapeno": 43, "jalapeto": 43, "jalaponi": 43, "jalapxno": 43, "jalqceno": 43, "jalxpeno": 43, "jamaica": 43, "jame": 45, "jane": [34, 39, 41, 52, 54], "januari": [6, 40, 64], "japan": 55, "japapeno": 43, "jar": [40, 41, 49], "jasmin": 45, "java": [40, 41, 52], "javascript": [56, 65], "jaw": 43, "jbrownle": 55, "jean": 45, "jendrikseipp": 61, "jeremi": 45, "jerk": 45, "jew": 49, "jewish": 49, "jinja2": [60, 62], "job": [5, 43, 45, 49, 63], "job_descript": 49, "job_id": 43, "joblib": [1, 2, 47], "john": [27, 34, 39, 41, 44, 46, 49, 52, 54, 65], "johnson": [41, 52], "join": [16, 18, 35, 37, 39, 44, 49, 64], "join_column": 48, "joined_df": 52, "joint": 49, "joke": 45, "jokerit": 49, "jordan": 43, "jose": 56, "josh": [4, 35, 56, 58], "jpg": [45, 65], "jpg_e15_fr_q65": 45, "jpg_e15_q65_s120x120": 45, "jr": 55, "json": [34, 41, 45, 47, 51, 60, 63, 65], "json_output_path": 58, "juic": 45, "juli": [40, 45, 56], "jump": 49, "june": [40, 46, 49], "jupyt": [33, 37, 47, 50, 55, 60, 63, 65, 68, 69], "jupyter_displai": 60, "just": [1, 13, 20, 44, 45, 46, 47, 48, 49, 55, 56, 60, 62, 63, 65], "justifi": 64, "juvenil": 47, "juvenile_clean": 47, "jylapeno": 43, "jzlapeno": 43, "k": [4, 7, 47, 49, 55, 61], "k7z": 45, "kale": 45, "kanari": 56, "kanhari": 63, "karimloo": 45, "kate": 44, "kb": [27, 64], "keep": [6, 25, 26, 34, 35, 40, 43, 45, 46, 48, 50, 52, 54, 59, 61, 63, 68], "keepend": 64, "kei": [7, 10, 25, 28, 29, 30, 34, 39, 41, 43, 44, 46, 48, 49, 50, 51, 52, 54, 56], "kendra": 45, "kept": 49, "kernel": [1, 47, 61], "key1": 25, "key2": 25, "key_func": 16, "keyboard": [39, 49, 56], "keyboardaug": 49, "keyword": [7, 19, 39, 46, 59], "keyword_processor": 49, "keywordprocessor": 49, "kh": 49, "khaki": 45, "khuen": [11, 32], "khuyen": [9, 11, 13, 18, 31, 32, 34, 35, 37, 40, 49, 54, 56, 58, 62, 64, 68], "khuyen_tweet": 45, "khuyentran": [9, 34, 41, 45, 47, 49, 51, 52, 54, 55, 56, 60, 61, 64], "khuyentran1401": [41, 43, 44, 58, 63], "khuyentran16": 45, "ki": 60, "kid": 43, "kill": 43, "kill_brows": 65, "kilomet": 58, "kind": [21, 26, 27, 49], "king": 55, "kingdom": [45, 49], "kitchen": [20, 65], "kiwi": 5, "km": 60, "kmean": [1, 49], "kmeans_file_path": 1, "kmeans_model": 1, "kneedl": 55, "kneeloc": 55, "kneighborsclassifi": [47, 61], "kneighborsregressor": 55, "kneighborstimeseriesclassifi": 55, "knn": 47, "knock": 65, "know": [6, 21, 27, 34, 45, 47, 49, 54, 55, 58, 64], "knowledg": [49, 68], "known": 60, "kotaemon": 45, "ks120626hmwcxjwjc7vk": 49, "ks120gv6c72jmszkmtd7": 49, "ks1218w78fgvpvp2kxpx": 49, "ks123k75yyk8vgh90nc": 49, "ks125ls6n7wp4s6sftck": 49, "ks1282t6std9rjz677xl": 49, "ks440w865gc4vrbw6ljp": 49, "ks7lo8p3mxb93r3c9rwl": 49, "kw_list": 45, "kw_onli": 47, "kwarg": [1, 5, 31, 58, 61, 64], "l": [2, 7, 20, 22, 27, 29, 30, 33, 34, 35, 43, 47, 54, 56, 61, 65], "l1": [6, 47], "l12": 49, "l2": [6, 47], "l3": 6, "l6": 49, "l_extendedpric": 42, "l_quantiti": 42, "l_returnflag": 42, "l_train": 43, "lab": 47, "label": [15, 29, 30, 34, 35, 39, 44, 46, 47, 49, 52, 54, 55, 56, 60], "label_": 49, "labelcol": 47, "labelcolor": 56, "labeling_funct": 43, "labelpropag": 47, "labels_": 47, "labelspread": 47, "labor": 55, "labour": 55, "labrador": 49, "lacinato": 45, "lack": [41, 44, 46, 55, 60], "ladi": 45, "lag": [47, 55], "lag120": 55, "lag144": 55, "lag168": 55, "lag24": 55, "lag48": 55, "lag7": 55, "lag72": 55, "lag96": 55, "lag_featur": 55, "lai": 56, "lake": [42, 44], "lambda": [7, 13, 16, 19, 20, 24, 27, 35, 40, 49, 50, 53, 58, 61], "lampton": 45, "landmass": 60, "lang": 49, "langchain": 46, "languag": [47, 56, 63], "laptop": [39, 42, 65], "larg": [7, 11, 24, 31, 32, 34, 35, 41, 43, 45, 47, 49, 52, 53, 54, 55, 56, 58, 61], "large_log": 16, "large_log_fil": 16, "large_num": 8, "larger": [30, 41, 42, 44, 50], "largest": [37, 47, 60], "last": [1, 4, 5, 6, 9, 16, 20, 22, 29, 34, 37, 41, 43, 45, 54, 58, 61, 67], "last_int": 22, "last_n": 55, "last_nam": 52, "last_str": 22, "last_talk": 41, "last_upd": 41, "lastli": 56, "later": [47, 55, 61], "latest": [45, 55, 62, 63], "latex": 67, "latexifi": 60, "latin": 26, "latitud": [44, 45, 47], "latt": 46, "latter": 55, "lau": 43, "laudabl": 45, "laugh": 43, "launch": [34, 46, 49, 52, 54, 69], "lauren": [4, 35], "lauri": 45, "layer": [44, 49], "lazi": [20, 49], "lazili": 16, "lazy_frame1": 50, "lazy_frame2": 50, "lazy_frame3": 50, "lazy_load": 47, "lazyclassifi": 47, "lazyfram": [34, 50, 54], "lazypredict": 47, "lcemyr5": 45, "lead": [1, 4, 5, 6, 7, 9, 11, 14, 24, 32, 34, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 56, 58, 63, 64], "leaf": 47, "learn": [1, 19, 21, 34, 45, 46, 49, 50, 52, 54, 56, 58], "learner": 49, "learning_r": 16, "least": [6, 37, 49, 65], "leav": [30, 41, 56], "lebanon": 43, "ledataset": [34, 54], "lee": 52, "left": [15, 21, 35, 55, 58, 60, 61, 64], "left_on": [25, 43], "legend": [34, 47, 54, 55, 56], "lego": 64, "leisur": 55, "lemon": 16, "len": [1, 6, 9, 34, 40, 41, 49, 54, 55, 56, 60, 61, 65], "len_list": [34, 54], "length": [7, 27, 29, 40, 47, 49, 55, 58, 61, 64], "lengthi": [4, 6, 16, 29, 53], "lenox": [43, 56], "leon": 43, "lesampl": [34, 54], "lesotho": 43, "less": [1, 2, 4, 6, 14, 16, 19, 27, 34, 37, 43, 47, 49, 50, 52, 54, 64], "less_than": 19, "lesuccess": [34, 54], "let": [1, 4, 6, 9, 10, 19, 21, 34, 39, 41, 42, 43, 45, 47, 49, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62, 65], "letter": 43, "level": [6, 14, 40, 41, 43, 48, 49, 50, 52, 53, 55, 56, 64, 65], "levelnam": 64, "leverag": [24, 34, 39, 40, 42, 49, 50, 54, 56, 63], "lex": 49, "lexicograph": 58, "lf": [34, 43, 54], "lf_summari": 43, "lfanalysi": 43, "lgb": [47, 55], "lgbmregressor": 55, "li": 55, "lib": [29, 31, 37, 40, 41, 45, 47, 49, 52, 55, 56, 58, 60, 61, 62, 64], "librari": [0, 13, 15, 16, 17, 18, 19, 20, 21, 23, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 61, 62, 64, 66, 67, 68], "life": [21, 43], "lift": 50, "light": [47, 56, 65], "lighter": [19, 64], "lightgbm": 55, "lightn": 50, "like": [3, 6, 7, 13, 14, 20, 21, 28, 29, 33, 34, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65], "likelihood": 44, "likely_unsaf": 58, "lime": 45, "limeston": 55, "limit": [8, 11, 16, 27, 32, 34, 39, 45, 46, 49, 53, 54, 55, 61], "limit_and_offset": 39, "limit_denomin": 8, "linalg": 47, "lincoln": [43, 56], "line": [1, 4, 5, 9, 13, 14, 16, 20, 21, 24, 26, 37, 39, 40, 42, 44, 48, 56, 58, 63], "line_color": 6, "line_width": 6, "linear": 47, "linear_model": [43, 47, 55], "lineardiscriminantanalysi": 47, "linearregress": [47, 55], "linearregressionlinearregress": 47, "linearsvc": 47, "lineitemsf1": 42, "lineno": 64, "linewidth": [6, 47, 55], "link": [19, 26, 28, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68], "linspac": 6, "lint": [39, 61], "linux": [34, 54, 65, 67], "lion": 1, "list": [2, 5, 8, 9, 14, 15, 22, 24, 28, 30, 34, 42, 43, 44, 45, 46, 47, 49, 54, 55, 56, 58, 60, 61, 62, 65], "list_": 13, "list_comprehens": [34, 54], "list_data": [], "list_rang": 61, "listen": 65, "lit": 52, "litellm": 45, "liter": [46, 61], "litt": 40, "littl": [43, 45], "live": [43, 44, 45, 56, 64, 69], "livingroom": 65, "lizi": 49, "ljust": 64, "ll": [43, 47, 50, 55, 58, 60], "llc": 49, "llm": 40, "llmgener": 45, "llmtestcas": [34, 54], "lmbda2": 55, "ln": 44, "lo": [34, 42, 54, 55], "load": [1, 16, 26, 39, 40, 41, 42, 43, 45, 47, 49, 51, 52, 53, 55, 56, 58, 59, 65], "load_and_split": 46, "load_breast_canc": 47, "load_credit": 47, "load_dataset": [43, 56], "load_diabet": 47, "load_dotenv": 59, "load_ext": [60, 67], "load_from_df": 47, "load_iri": [27, 43, 47, 48, 56], "load_model": 47, "load_occup": 47, "load_robot_execution_failur": 55, "load_sunspot": 55, "load_win": 56, "load_wineind": 55, "loader": [46, 47, 58], "loader_modul": 47, "loblaw": 48, "loc": [24, 25, 28, 29, 44, 49, 50, 55], "loc1": 4, "local": [47, 49, 52, 55, 60, 61, 62, 64], "local_fil": 58, "localartifact": 47, "localfilesystem": 47, "localhost": [34, 42, 49, 54], "localtim": 64, "locat": [1, 9, 34, 35, 43, 47, 48, 49, 54, 55, 65], "lock": 62, "log": [5, 16, 40, 41, 49, 52, 55, 65], "log1p": 43, "log4j": 40, "log_entri": 16, "log_loc": 64, "log_model": 47, "log_step": 64, "log_transform": 43, "loggamma": 44, "logger": [34, 54, 64], "logging_exampl": 64, "logic": [1, 5, 41, 44, 47, 56, 61], "login": [45, 65], "login_button": 65, "login_field": 65, "logist": 47, "logisticregress": [43, 47], "logisticregressioncv": 47, "lognorm": 44, "logo": 43, "loguru_exampl": 64, "loguru_vs_log": 64, "london": [42, 43], "long": [1, 11, 32, 34, 35, 39, 40, 45, 49, 52, 54, 55, 60, 61, 64], "longer": [7, 34, 45, 49, 54, 62, 64], "longitud": [44, 45, 47], "longmeadow": 44, "longtyp": 52, "look": [21, 34, 43, 44, 45, 47, 49, 54, 55, 56, 58, 62, 64], "loop": [4, 7, 13, 20, 26, 41, 42, 50, 60, 64], "loopback": 40, "loos": 48, "lord": 43, "lose": [47, 53], "loss": [27, 41, 56, 65], "lot": [1, 20, 34, 43, 45, 54, 56, 62, 64], "love": [39, 43, 45, 49], "lover": 45, "low": [6, 15, 26, 27, 41, 50, 52, 53, 55], "lower": [29, 30, 46, 47, 49, 55, 64], "lower_1": [], "lowerboundsoncoeffici": 47, "lowerboundsonintercept": 47, "lowercas": [49, 64], "lowesssmooth": 55, "lowsurf": 49, "loyal": 52, "loyal_customer_condit": 52, "loyalty_year": 52, "lr": [47, 56], "lrr": 33, "lst": [], "lstrip": 64, "lt": [19, 43, 64], "lt01": 39, "lt02": 39, "lt09": 39, "luca": 45, "lucikili": 47, "lucil": 48, "luckili": [21, 56], "lunar": 49, "lunat": 45, "luther": 55, "lynnbbt": 48, "l\u1ebb": 49, "m": [1, 3, 5, 11, 22, 26, 27, 30, 32, 34, 35, 41, 42, 43, 45, 48, 49, 50, 54, 55, 56, 61, 64], "m4": 55, "ma": 55, "machin": [1, 34, 42, 43, 46, 48, 49, 50, 53, 54, 55, 56, 58, 67], "mackai": 55, "madagascar": 43, "made": [11, 32, 45, 46, 49, 60, 63], "mae": 47, "magic": [50, 60, 67], "mahari": 48, "mai": [1, 4, 5, 19, 34, 39, 40, 41, 43, 44, 45, 47, 50, 54, 55, 56, 61, 65], "main": [1, 6, 9, 34, 40, 44, 45, 49, 52, 55, 59, 60, 61, 62, 64, 65], "mainli": 6, "maintain": [4, 5, 6, 15, 40, 41, 42, 43, 45, 49, 52, 61, 63, 65], "mainten": [52, 59, 61], "mainthread": 46, "major": [43, 47], "make": [1, 4, 5, 7, 9, 15, 16, 18, 19, 21, 22, 27, 34, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 61, 63, 64, 65, 68], "make_blob": 1, "make_classif": [43, 47], "make_copi": 64, "make_deduplication_data": 43, "make_fruit": 22, "make_pip": 47, "make_pipelin": [43, 47], "make_regress": 47, "makedir": [18, 41], "maketran": 64, "malawi": 43, "male": [13, 45, 56], "malici": [48, 51, 58, 65], "mallard": 44, "malwar": 65, "man": [46, 49], "manafort": 49, "manag": [13, 14, 34, 39, 41, 43, 45, 46, 47, 49, 50, 52, 54, 55, 56, 58, 59, 61, 63], "mandarin": 56, "mango": 10, "manhattan": [43, 56], "mani": [6, 8, 28, 45, 46, 47, 55, 56, 63, 64, 65], "manim": 60, "manipul": [18, 23, 39, 40, 41, 42, 44, 50, 52, 56, 60], "manual": [1, 14, 19, 27, 39, 40, 43, 44, 47, 48, 49, 52, 56, 58, 59, 60, 61, 63, 64, 65], "map": [6, 13, 16, 20, 40, 43, 44, 49, 64], "map_": 20, "map_pric": 40, "map_price_to_fruit": 40, "mapieregressor": 47, "mapl": 14, "march": [40, 43, 64], "margaret": 45, "mari": 52, "maria": 49, "marin": 55, "mark": 45, "markdown": [21, 37, 60, 62], "marker": [6, 34, 45, 47, 54, 56], "marker_s": 6, "markeredgecolor": 56, "markers": 6, "market": [52, 55], "market_data": 52, "market_df": 52, "market_tsdf": 52, "marsh": 44, "martin": [45, 55], "marvel": 49, "mask": [29, 49], "mask_al": 37, "mask_ani": 37, "mass": 56, "massachusett": 44, "massiv": 47, "master": [26, 34, 40, 43, 54, 55, 56, 63], "mat": 49, "match": [19, 25, 29, 30, 34, 41, 44, 46, 47, 48, 52, 54, 55, 56, 60, 61, 62, 65], "match_pattern": [11, 32], "matcher": 49, "matching_scor": 43, "mateo": 43, "math": [9, 13, 21, 37, 61, 65], "mathdatasimplifi": [49, 58, 65], "mathemat": 21, "mathrm": 60, "matplotlib": [6, 37, 40, 47, 49, 55], "matplotlib_venn": 56, "matric": 44, "matrix": [43, 44, 47], "matt": 45, "matter": [16, 43], "mauritania": 43, "max": [27, 30, 34, 35, 41, 42, 45, 47, 52, 54, 55, 64], "max_acceptable_sever": 58, "max_card": 44, "max_depth": [47, 56], "max_epoch": 55, "max_insample_length": 55, "max_leaf_nod": 47, "max_length": 49, "max_pric": 52, "max_sampl": 49, "max_step": 55, "max_tim": [34, 54], "max_val": 4, "max_valu": [34, 54], "maxblocksizeinmb": 47, "maximum": [45, 47, 49, 55], "maxit": 47, "maxsplit": 64, "maxtostringfield": 41, "mayb": [11, 32], "maybe_cal": 29, "mb": [2, 27, 47], "mcneil": 60, "md": [60, 65], "md5": 45, "me": [34, 43, 45, 54, 56, 58], "meadow": 56, "mean": [1, 6, 9, 26, 27, 28, 34, 35, 41, 42, 43, 46, 47, 49, 50, 52, 54, 55, 56, 61, 69], "mean_num": 6, "mean_pric": [35, 52], "mean_square_err": 64, "mean_squared_error": 64, "meaning": [1, 9, 34, 52, 54, 55, 61], "meaningfulli": 55, "meant": 65, "measur": [22, 44, 47, 49, 58], "measure_nois": 55, "mech": 54, "mechan": 49, "med": 45, "media": 45, "median": [34, 35, 43, 45, 47, 54, 55], "median_incom": 45, "median_income_person": 45, "medic": 49, "medinc": 47, "medium": [31, 45, 50, 52], "meet": [43, 46, 55], "meeting3": 4, "meeting_detail": 46, "meetingdetail": 46, "meetingextractor": 46, "meetup": 49, "mem": [1, 61], "member": [45, 47], "membership": 39, "memor": 56, "memori": [2, 16, 19, 26, 28, 41, 42, 47, 48, 49, 50, 55], "memory_byt": 47, "memory_profil": [1, 61], "memory_profiler_test": 61, "memory_usag": 27, "memoryerror": 41, "men": 45, "mention": 68, "meow": 56, "merg": [43, 44, 48, 50, 52, 55], "merged_df": 25, "mergeschema": 41, "merseysid": 45, "mess": 63, "messag": [6, 19, 34, 52, 54, 60, 61, 64], "messi": [1, 6, 63], "met": 16, "metaclass": 45, "metadata": [5, 41, 44, 49, 64], "meter": [22, 58], "method": [4, 11, 13, 16, 17, 18, 21, 23, 24, 27, 28, 29, 30, 31, 32, 35, 36, 39, 41, 43, 44, 45, 46, 49, 50, 52, 53, 55, 56, 58, 61, 63, 64, 68], "metric": [34, 47, 49, 54, 56, 60, 61, 64], "metric_column": 50, "metric_sc": 50, "metriccol": 52, "metrics_str": 60, "meurth": 45, "meyer": 45, "mg": 45, "mgmt": 43, "mherrmann": 65, "mi": [43, 60], "miami": [34, 54], "mib": [1, 61], "michael": [4, 27, 45, 48, 52], "microsecond": [47, 64], "microservic": 43, "microsoft": 49, "mid": [15, 43], "middl": 26, "midrul": 33, "midtown": [43, 56], "midwest": 45, "might": [1, 6, 8, 9, 14, 20, 24, 27, 29, 33, 37, 43, 47, 49, 52, 54, 56, 59, 60, 61, 62, 63, 64, 65], "mighti": 45, "migrat": 39, "mike": [39, 46], "mil": 49, "milk": [45, 46, 49], "milktea": 46, "million": [2, 26, 41, 42, 45, 49, 50], "millisecond": [50, 64], "milwauke": 56, "mime": 65, "mime_typ": 65, "mimic": 60, "min": [9, 26, 27, 34, 35, 41, 42, 52, 54, 64], "min_detectable_effect": [34, 54], "min_pric": 52, "min_round": [34, 54], "min_tim": [34, 54], "min_valu": [34, 54], "minc": 45, "mingramm": 45, "mini": 31, "minilm": 49, "minim": [45, 55, 60], "minimum": [43, 61], "minimum_ag": 45, "minimum_scor": [34, 54], "minor": [47, 52], "minut": [3, 34, 45, 54, 55, 58, 64, 68], "mirror": [58, 61], "misc": 22, "misconcept": 45, "misinterpret": 49, "mislead": 65, "mismatch": [37, 48, 52], "mispelled_food": 43, "miss": [16, 27, 33, 34, 43, 45, 46, 47, 48, 54, 55], "missingno": 62, "mission": [49, 68], "mistak": [41, 49, 56], "mistral": 46, "mistralai": 46, "misunderstand": [34, 54], "mix": [27, 40, 47, 60], "mixtur": 45, "mkdir": [18, 34, 42, 54, 65], "ml": [34, 39, 54, 58, 61], "ml_app": 47, "mlemmodel": 47, "mlf": 55, "mlflow_vers": 47, "mlmodel": 47, "mlpclassifi": 47, "mlrun": 47, "mlxtend": 49, "mm": 64, "mmm": 64, "mmmm": 64, "mobil": 47, "mock_conn": 54, "mock_cursor": 54, "mock_datetim": 34, "mock_get": 34, "mock_remov": [34, 54], "mocker": [34, 54], "mockingbird": 43, "mod": [53, 55], "mode": [24, 40, 41, 55, 56, 62], "model": [1, 33, 39, 43, 44, 45, 48, 60, 61, 63, 65], "model1": 47, "model__max_depth": 47, "model__min_samples_split": 47, "model__n_estim": 47, "model_collect": 47, "model_info": 47, "model_nam": [47, 49], "model_path": [47, 49], "model_predict": 46, "model_select": [43, 47, 48, 55, 61], "model_size_byt": 47, "model_typ": 46, "model_uri": 47, "model_uuid": 47, "model_view": 49, "modellibrari": 47, "modern": [41, 47, 50, 60], "modif": [1, 5], "modifi": [1, 4, 5, 6, 14, 15, 24, 41, 52, 58, 63, 64], "modification_tim": 41, "modul": [1, 5, 9, 13, 14, 16, 17, 20, 22, 29, 41, 45, 47, 53, 60, 61, 64, 65, 67], "modulu": [34, 54], "moment": 43, "mon": 65, "monei": 49, "monitor": [42, 48], "monk": 45, "monkey_exampl": 65, "month": [9, 28, 40, 41, 43, 45, 55, 56, 63, 64, 68], "month_nam": 43, "monthli": 55, "monthrang": 3, "moon": 49, "moor": 43, "mop": [34, 54], "moran": 45, "more": [4, 5, 7, 9, 13, 14, 15, 19, 27, 30, 33, 34, 35, 37, 39, 41, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 58, 59, 60, 63, 64, 65, 68], "more_fruit": 10, "moreov": [34, 49, 54], "mosel": 45, "most": [1, 4, 5, 6, 9, 16, 20, 21, 29, 37, 43, 47, 49, 50, 53, 56, 58, 61, 64], "most_frequ": 43, "mostli": 43, "motiv": 49, "mountain": [49, 55], "mous": [39, 42], "move": [28, 43, 45, 52, 55], "movement": 6, "movingwindowspec": 52, "mp": 50, "mp4": 65, "mp4a": 65, "mp4v": 65, "mprof": 61, "mr": [34, 44, 45, 54], "ms_per_char": 49, "msb": 43, "mse": 47, "msg": 37, "msno": 56, "mt": 56, "much": [6, 34, 43, 45, 46, 54, 55, 56, 60, 63], "mug": 45, "multi": [37, 47, 56], "multi_cel": 44, "multiarrai": 58, "multiindex": 35, "multimethod": 62, "multinomi": 47, "multinomialnb": 61, "multioutput": 64, "multipl": [1, 4, 5, 9, 19, 22, 39, 41, 44, 46, 47, 49, 55, 58, 60, 61, 64, 68], "multiple_of": 19, "multipli": [5, 7, 16, 22, 37], "multiply_func": 22, "multiply_then_divide_by_two": 22, "multiply_thre": 61, "multiprocess": [2, 40, 50], "multivari": 47, "mundan": 39, "murrai": [43, 56], "music": [43, 45], "musician": 43, "must": [1, 6, 14, 16, 19, 34, 39, 42, 46, 47, 49, 50, 54], "mvc": 43, "mwaskom": [26, 40], "my": [1, 13, 18, 24, 28, 34, 39, 43, 46, 49, 54, 58, 59, 60, 62, 63, 64, 65, 67], "my_api_key_provided_by_nixtla": 55, "my_calc": 60, "my_cod": 61, "my_data": [34, 54], "my_data_dir": 1, "my_fil": [34, 54], "my_flow": 64, "my_tabl": 39, "myapp": 41, "myfil": 65, "mypi": 22, "mypy_exampl": 61, "mysql": [], "mysql_queri": 39, "myusernam": 59, "m\u01b0\u1eddi": 49, "n": [8, 26, 34, 37, 41, 43, 45, 47, 49, 50, 51, 52, 54, 55, 56, 58, 60, 61, 62], "n1": [34, 43, 54, 55, 65], "n10": 56, "n2": [34, 54, 55], "n_class": 47, "n_cluster": [1, 49], "n_clusters_per_class": [43, 47], "n_col": 64, "n_estim": 39, "n_featur": [1, 43, 47, 55], "n_fold": 47, "n_inform": 47, "n_init": 1, "n_job": [2, 55], "n_model": 55, "n_ob": 64, "n_point": 6, "n_rang": 61, "n_redund": [43, 47], "n_repeat": 47, "n_result": [46, 49], "n_sampl": [1, 43, 47, 55], "n_seri": 55, "n_split": 43, "n_static_featur": 55, "n_test": 47, "n_train": 47, "n_window": 55, "na": 49, "na_rep": 33, "naardema": 45, "nabsurdistan": 43, "nac": 49, "naccel": 60, "nadd": 45, "nage": 65, "naiv": [16, 64], "naive_bay": 61, "nake": 39, "name": [1, 4, 9, 13, 14, 19, 20, 25, 28, 30, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67], "name_of_your_fil": 61, "nameerror": 9, "nan": [24, 25, 28, 30, 33, 34, 35, 41, 43, 54, 56], "nanim": 45, "nardslei": 45, "narr": 56, "nasa": 49, "nat": [43, 45], "nativ": [40, 41, 52, 55], "nativecodeload": [40, 41, 52], "natur": [1, 43, 46, 58], "naugust": 45, "navig": [56, 61, 63, 65], "naw": 49, "nbeat": 55, "nbring": 45, "nbsp": [33, 34, 49, 54], "nbspand": 49, "nbspend": 49, "nbspproject": 49, "nbspto": 49, "nbspyou": 49, "nbuilt": 45, "nbviewer": 47, "ncall": 58, "ncamp": 45, "nclass": 45, "nclassic": 45, "ncol": [47, 55], "ncomput": 45, "ncurrent": 41, "nd": 55, "ndanc": 49, "ndarrai": [1, 47, 58], "ndata": 45, "ndecemb": 45, "ndesign": 44, "ndf": 44, "nearestcentroid": 47, "nearli": [42, 55], "neat": 46, "necessari": [5, 35, 45, 49], "necessarili": [57, 68], "need": [1, 4, 5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 20, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64], "neg": [1, 19, 33, 34, 39, 41, 44, 46, 47, 49, 54], "negat": 49, "neighbor": [49, 55, 61], "neighborhood": 49, "neither": 47, "neocon": 49, "nerdi": 43, "ness": 46, "nest": [9, 44], "nested_data": 42, "nested_list": [], "net": 45, "netherland": 56, "network": [34, 35, 49, 55], "neutral": [45, 47], "never": [27, 43, 46, 49, 61], "new": [6, 14, 15, 26, 28, 31, 34, 35, 37, 39, 41, 42, 43, 44, 48, 49, 50, 52, 54, 55, 56, 60, 61, 62, 63, 64], "new_": 28, "new_arr": 37, "new_birth_year": 4, "new_categori": [34, 54], "new_data": [1, 6, 41, 43, 50], "new_df": [41, 43, 52, 53], "new_fil": 18, "new_index": 28, "new_method": 53, "new_ord": 5, "new_path": 44, "new_row_posit": 37, "new_sent": 49, "new_target1": 45, "new_target2": 45, "new_train1": 45, "new_train2": 45, "new_valu": [34, 54], "new_venv": 62, "newdatatyp": 1, "newlevel": [40, 41, 52], "newli": 45, "newsgroup": 49, "newsgroups_train": 56, "newspap": 49, "next": [39, 41, 45, 49, 50, 52, 55, 56, 59, 62], "nf": 55, "nfeatur": 55, "nfebruari": 45, "nfifth": 49, "nfirst": [45, 49], "nfounder": 45, "ngherkin": 45, "ngh\u00ecn": 49, "ngive": 45, "ngram": [43, 49], "ngram_scor": 49, "nhigh": 45, "nhour": 56, "nhra": 45, "nhttp": [43, 45], "ni": [43, 45, 49], "nice": [11, 14, 20, 21, 32, 34, 40, 43, 45, 49, 54, 59, 62, 64, 65], "nice_dai": [11, 32], "nicer": 56, "nidl": 60, "night": 45, "nineteen": 49, "nineteenth": 49, "nino": 45, "nio": 40, "nit": 45, "nitro": 45, "nixtla": 55, "nixtla_cli": 55, "nixtla_id_as_col": 55, "nixtlacli": 55, "nkarimloo": 45, "nl": 49, "nlargest": [7, 35], "nlong": 45, "nlp": [18, 60], "nlp_model": 47, "nltk": [47, 49], "nlynch": 43, "nmeta": 45, "nmismatch": 48, "nmiss": 48, "nn": 47, "nname": [51, 60], "nnkerri": 49, "nnumber": 52, "no_company_logo": 43, "no_company_profil": 43, "no_silent_downcast": 45, "noct": 45, "node": [47, 52, 56], "nois": [6, 47], "noise1": 6, "noise_std": 55, "nominatim": 44, "non": [16, 25, 27, 28, 29, 34, 41, 43, 47, 53, 54, 62], "non_tropical_fruit": 10, "none": [1, 5, 6, 22, 25, 27, 29, 34, 39, 41, 43, 45, 47, 49, 52, 53, 56, 58, 59, 60, 61, 64], "nonetyp": 64, "nonstandardimport": 58, "nonzero": 29, "noodl": 49, "nor": 47, "nord": 56, "norm": 44, "normal": [6, 8, 13, 15, 16, 17, 20, 21, 30, 43, 44, 49], "normalized_featur": 43, "north": [26, 43, 44, 45, 50, 55], "northeast": 56, "notat": [20, 42, 52], "note": [20, 27, 47, 55, 61], "notebook": [21, 33, 37, 46, 47, 50, 55, 60, 62, 63, 64, 68, 69], "notebook_tqdm": 56, "noth": [34, 54, 58], "notic": 55, "notimplementederror": 15, "noun": 49, "noun_extractor": 47, "noun_phras": [47, 49], "noun_phrase_extractor": 47, "nounphraseextractor": 47, "now": [1, 6, 14, 18, 21, 22, 24, 26, 29, 34, 39, 41, 43, 44, 47, 49, 50, 54, 55, 56, 62, 63, 64, 65], "np": [1, 2, 6, 24, 26, 27, 29, 33, 34, 40, 41, 43, 44, 45, 47, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 67], "np_data": [], "npalo": 45, "npartit": 50, "nperform": 45, "nphillip": 45, "npost": 45, "npreviou": 41, "nrant": 43, "nremov": 45, "nrow": [47, 55], "nsa": 49, "nsampl": 49, "nsecond": 49, "nset": 45, "nsome": 65, "nsouth": 45, "nspeed": 60, "nstack": 35, "nstop": 60, "nsw": 55, "nt": 44, "ntabl": 41, "ntake": 45, "ntarget": 45, "ntest": 45, "nthe": 45, "nthei": 44, "nthi": 49, "ntime": 43, "nto": 45, "nub": 45, "null": [27, 28, 30, 34, 39, 46, 47, 53, 54], "null_count": 41, "nullabl": [34, 54], "nulliti": 56, "num": [2, 5, 6, 7, 8, 9, 11, 16, 30, 32, 34, 35, 37, 43, 47, 52, 53, 54, 58, 60, 61, 64, 65], "num1": [5, 6, 15, 29, 34, 43, 50, 54, 60, 65], "num2": [5, 6, 15, 34, 43, 50, 54, 60, 65], "num_added_fil": 41, "num_breakpoint": 55, "num_copied_row": 41, "num_cor": 2, "num_deleted_row": 41, "num_experi": 53, "num_guest": 6, "num_list": [13, 16], "num_memb": 6, "num_record": 41, "num_removed_fil": 41, "num_row": [26, 50], "num_sampl": 55, "num_seri": 55, "num_thread": 55, "num_top": 49, "numba": 55, "numbatch": 41, "number": [2, 3, 6, 7, 15, 21, 24, 26, 27, 34, 40, 41, 43, 44, 45, 47, 50, 52, 53, 54, 55, 56, 58, 60, 61, 64, 65], "numer": [19, 27, 43, 53, 55, 58, 60, 61, 63, 64, 65], "numeric_featur": 43, "numeric_transform": [43, 47], "numerical_column": 47, "numerical_featur": 43, "numerical_transform": 43, "numexp": 13, "numfilesad": 41, "numfilesremov": 41, "numpi": [1, 2, 6, 24, 26, 27, 28, 29, 33, 34, 40, 41, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 67, 68], "numpy_arrai": 1, "numpy_memori": 27, "numpyndarraytyp": 47, "nums1": 6, "nums_2": 7, "nuniqu": 27, "nurs": 43, "nuse": 43, "nusvc": 47, "nutrient": 45, "nwe": 45, "nwintern": 45, "nwitti": 43, "nworld": 45, "ny": [42, 43], "nyep": 49, "nyou": 45, "o": [2, 6, 18, 29, 34, 41, 42, 43, 45, 46, 49, 50, 54, 55, 59, 67], "oakland": 43, "oalapeno": 43, "oan": 49, "oatmeal": 49, "obj": [1, 6, 13, 29], "object": [5, 8, 13, 14, 21, 24, 26, 27, 28, 29, 30, 31, 39, 40, 41, 43, 45, 47, 48, 49, 52, 55, 56, 58, 61, 63], "object_typ": 47, "observ": 55, "obsolet": [34, 54], "obtain": [18, 30, 39, 44, 47, 55, 68], "obviou": 6, "occasion": 45, "occur": [6, 24, 40, 49, 55, 56], "occurr": [1, 11, 29, 32, 43, 56, 61, 64], "oct": 45, "octob": [34, 40, 54], "oe": 45, "off": [50, 56], "offer": [10, 19, 26, 27, 34, 41, 45, 46, 49, 50, 52, 54, 55, 56, 58, 60, 61], "offic": [43, 65], "offlin": 46, "offset": [28, 45, 55], "offspr": 43, "oflass": 47, "often": [5, 6, 9, 34, 35, 39, 40, 42, 43, 44, 45, 47, 48, 49, 53, 54, 55, 58, 60, 63, 64, 65], "oh": [43, 45], "oi": 37, "oil": 45, "ok": [1, 34, 49, 54], "okai": 43, "old": [6, 43, 64], "old_valu": [34, 54], "old_venv": 62, "older": 41, "oldest": 52, "oliv": [4, 13, 45], "olivia": [4, 45], "omit": 61, "onc": [2, 5, 6, 20, 42, 45, 47, 49, 50, 55, 65], "one": [5, 6, 9, 11, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 35, 37, 39, 40, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 58, 60, 61, 63, 64, 65, 68], "one_month_ago": 41, "onedark": 56, "onefil": 62, "onehot": 43, "onehotencod": [43, 47], "oneormor": 58, "ones": [33, 41, 43, 46, 62], "onion": [4, 45], "onli": [1, 4, 7, 8, 11, 15, 16, 20, 22, 24, 25, 27, 32, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 55, 58, 59, 60, 61, 62, 64, 65], "onlin": 4, "only_adversari": 45, "only_generated_data": 45, "oo": 21, "op": [34, 43, 53, 54], "open": [16, 18, 23, 42, 45, 47, 55, 58, 62, 64, 68], "open_new": 65, "openai": [40, 46], "openai_api_kei": [45, 46, 63], "openai_model": 47, "openaical": 46, "openaicallparam": 46, "openaiembed": 46, "openaiextractor": 46, "opencv": 60, "openhand": 45, "openml": 49, "openstreetmap": 56, "oper": [8, 9, 22, 26, 28, 34, 43, 45, 48, 50, 54, 55, 58, 61, 62, 63, 64], "operand": [6, 61], "operationalerror": 54, "opportun": [43, 45], "opt": 45, "optim": [6, 26, 42, 44, 45, 47, 55, 56], "option": [7, 13, 24, 26, 33, 34, 39, 40, 41, 44, 45, 47, 49, 53, 54, 58, 59, 60, 61, 62, 64], "optional_schem": 58, "opu": 65, "oracl": 39, "orang": [4, 5, 7, 9, 10, 13, 16, 17, 20, 22, 25, 29, 30, 34, 35, 39, 40, 45, 48, 52, 54, 61], "orbit": 49, "orchestra": 45, "ord5": 45, "order": [5, 6, 11, 16, 27, 32, 34, 35, 37, 42, 43, 47, 50, 52, 54, 56, 58, 60], "order_bi": 40, "order_count": 52, "order_d": 52, "order_df": 52, "order_id": 52, "order_info": 52, "order_schema": 52, "orderbi": 52, "ordered1": 13, "ordered2": 13, "ordered_s": 31, "orders_df": 52, "ordin": [49, 64], "ordinal_num": 49, "oreo": 49, "org": [24, 26, 40, 41, 47, 49, 58], "organ": [1, 13, 43, 46, 47, 49, 50, 61], "orient": [30, 43], "origin": [4, 5, 6, 21, 26, 27, 29, 34, 35, 37, 41, 43, 45, 47, 49, 52, 54, 55, 59, 63, 65], "originalgener": 45, "origincitynam": 42, "orlando": [34, 54], "osaka": 45, "osmnx": 56, "other": [1, 6, 9, 14, 19, 28, 34, 41, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 58, 59, 60, 61, 63, 65, 68], "other_column": 50, "otherwis": [1, 6, 11, 32, 34, 52, 54, 60, 64], "ounc": 45, "our": [1, 6, 7, 21, 34, 41, 43, 45, 47, 49, 54, 55, 56, 58], "out": [5, 8, 21, 26, 29, 41, 43, 44, 45, 49, 55, 58, 59, 61, 63, 64], "out_of_season": 20, "out_schema": [34, 54], "outback": 55, "outcom": 55, "outdat": [61, 63], "outer": [25, 35, 48], "outlier": [34, 44, 49, 54, 55, 64], "outlin": 47, "outperform": 55, "output": [1, 6, 11, 14, 21, 32, 33, 34, 37, 39, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 55, 56, 59, 61, 62, 64, 65, 67], "output_attent": 49, "outputtenv": 45, "outsid": [1, 13], "over": [16, 21, 24, 42, 49, 52, 55, 68], "over_sampl": 47, "overal": [46, 55], "overfit": 49, "overflow": 45, "overhead": [19, 50, 52, 53, 59, 61], "overlap": [25, 43], "overli": 47, "overlook": 61, "overrid": 22, "overs": 27, "overtim": 45, "overtlybadev": 58, "overwhelm": 61, "overwrit": [6, 34, 47, 49, 54, 59, 61, 62, 65], "overwritten": 49, "owen": 44, "own": [2, 14, 20, 45, 49, 52, 60, 64], "owner": [45, 63], "ox": 37, "p": [11, 32, 39, 44, 47, 49, 52, 55, 56, 65, 67], "p1": [39, 40], "p2": [39, 40], "p3": 39, "p_test": 43, "p_train": 43, "p_val": 56, "pa": [34, 54], "pablo": 45, "pace": 43, "pacif": [26, 43], "pack": 45, "packag": [29, 31, 36, 37, 40, 41, 43, 45, 47, 49, 52, 54, 55, 56, 58, 60, 61, 63, 64], "package_nam": 47, "packagenod": 62, "pacoti": 56, "pad": 64, "page": [1, 26, 44, 47, 60, 65, 68], "page_view": 50, "pair": [4, 7, 51, 56], "pairplot": 56, "pairwis": [49, 56], "palett": 55, "palo": 45, "pan": 56, "panda": [1, 2, 5, 6, 15, 43, 44, 46, 47, 48, 49, 55, 56, 60, 61, 62, 67, 68], "pandas_ai": 40, "pandas_api": 41, "pandas_appli": 53, "pandas_dataread": 45, "pandas_df": [50, 52], "pandas_df1": 50, "pandas_df2": 50, "pandas_merg": 50, "pandas_on_spark": 52, "pandas_plus_on": 52, "pandas_read": 45, "pandas_seri": 1, "pandas_tim": [50, 53], "pandas_util": 64, "pandas_vs_swift": 53, "pandasdatafram": 39, "pandasdataset": 55, "pandaslfappli": 43, "paper": 56, "papermil": 67, "paragraph": 45, "parallel": [2, 52, 56], "parallel_appli": 40, "param": [16, 34, 40, 47, 54], "param_grid": 47, "param_nam": 47, "param_rang": 47, "paramet": [7, 14, 15, 16, 26, 27, 28, 31, 40, 42, 44, 45, 47, 49, 52, 59, 62, 64, 67], "parameter": 67, "parametr": 44, "parent": [1, 22, 41, 64], "parenthes": [11, 32], "pari": 42, "park": [43, 49, 56], "parquet": 52, "pars": [19, 49, 55, 60, 61, 63, 64], "parse_arg": 60, "parse_d": [55, 56], "parsed_data": 63, "parsed_queri": 39, "parser": [39, 60], "parsing_report": 60, "part": [5, 34, 41, 43, 44, 53, 54, 58, 64], "parti": 7, "partial": 41, "particip": 46, "particular": [6, 28, 34, 41, 54, 55], "particularli": [9, 19, 39, 47, 50, 53, 58], "partit": [47, 52, 64], "partition_bi": 41, "partition_col": 52, "partition_filt": 41, "partitionbi": 52, "partitionsoptim": 41, "partner": [43, 45], "pass": [1, 7, 13, 24, 34, 39, 45, 47, 49, 50, 52, 54, 59, 61, 62], "passeng": [40, 43, 55, 56], "passiveaggressiveclassifi": 47, "password": [39, 45, 48, 49, 54, 59, 65], "password_field": 65, "past": [21, 33, 37, 41, 43, 45, 55], "pasta": 49, "patch": [34, 54, 56], "path": [2, 34, 39, 41, 42, 44, 47, 48, 49, 54, 59, 60, 62, 65], "pathlib": [34, 39, 42, 44, 54, 65], "patienc": 45, "patricia": 45, "pattern": [6, 11, 20, 32, 35, 55, 56, 64], "pawown": 45, "payload": 49, "payment": [43, 56], "pc_1": 47, "pc_2": 47, "pca": [47, 49], "pcap": 43, "pd": [1, 2, 5, 6, 15, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 61, 62, 64, 67], "pd_df": 50, "pdf": 46, "pdf2imag": 60, "pdfminer": 60, "pdfreader": 44, "peach": 9, "peak": 55, "peel": 45, "pelt": 55, "pen": [11, 32, 55], "penalti": 47, "pencel": [11, 32], "pencil": [11, 32], "penguin": [40, 56, 60], "peninsula": 55, "peopl": [43, 49], "people_t": 41, "pepper": [4, 9, 14, 45, 49], "per": [6, 9, 26, 41, 42, 43, 49, 50, 52, 55, 59, 68], "perc_differ": [34, 54], "perc_difference_test": [34, 54], "percent": [34, 54, 60], "percentag": [34, 47, 48, 54, 55], "perceptron": 47, "perf_count": [34, 54], "perfect": [49, 65], "perform": [1, 2, 6, 19, 24, 26, 34, 35, 40, 41, 42, 43, 45, 46, 47, 52, 53, 54, 56, 60, 64], "perimat": 40, "perimet": 40, "period": [30, 45, 55, 65], "perk": 43, "permiss": 63, "permut": [11, 32], "person": [13, 14, 49], "person1": 35, "person2": 35, "person_data": 14, "perth": 55, "pet": [9, 43, 58], "pet_info": 9, "pet_info1": 9, "pet_info2": 9, "petal": 27, "peter": 45, "pgml": 39, "ph": 64, "phik": 62, "phillip": 55, "phone": [14, 42, 45, 49, 56], "php": 45, "phrase": [1, 46, 49], "phrasematch": 49, "physic": [13, 41, 52, 58], "physica": 43, "physically_ass": 47, "pi": [6, 9, 21, 56], "pic": 45, "picasso": 45, "pick": [7, 49, 61], "pickl": [1, 45, 48, 55, 58], "pickleablekmean": 1, "pickleablemixin": 1, "pickleablemodel": 1, "pickleablesvm": 1, "picklebal": 45, "pickled_data": 58, "pickled_model": 47, "pickup": [43, 56], "pickup_borough": [43, 56], "pickup_dai": 43, "pickup_hour": 43, "pickup_month": 43, "pickup_zon": [43, 56], "pickup_zone_count": 43, "pickup_zone_dist": 43, "pickup_zone_far": 43, "pictur": [18, 43, 45], "pid": 46, "piec": [1, 6, 49, 56, 68], "pii": 49, "pin": 62, "pinch": 45, "pineappl": 10, "pip": [1, 2, 19, 20, 21, 22, 24, 26, 27, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 67], "pip3": 47, "pipe": [1, 6, 40, 42, 43, 49, 50, 64], "pipelin": [1, 49, 50, 55, 58, 60], "pisc": 43, "pit": 45, "pitaya_smoothi": 56, "pizza": 49, "pke": 49, "pkl": [1, 6, 43, 47, 55, 58], "pl": [34, 50, 54], "pl_df": 50, "place": [4, 5, 6, 15, 45, 47, 49, 52, 55, 58, 64, 65], "placehold": [39, 60], "plai": [43, 49, 56], "plain": [41, 45, 65], "plain_text": 65, "plan": [9, 41, 43, 45, 50, 52], "plant": 44, "plasma": 33, "platform": [34, 40, 41, 43, 45, 47, 52, 54], "play": 45, "playbil": 45, "player": 49, "playlist": 65, "playwright": 45, "pleas": [15, 40, 45, 46, 47, 56], "plenti": 43, "plnk6m_jbrvnopnqnvrwaytz2g4nftngz": 65, "plot": [6, 37, 40, 43, 44, 45, 55, 61], "plot_anomali": 55, "plot_cv": 55, "plot_decision_region": 47, "plot_knee_norm": 55, "plot_random": 55, "plot_similar": 43, "plot_text": 56, "plot_time_seri": 6, "plotli": [45, 56], "plotstyl": 6, "plt": [6, 37, 40, 47, 49, 55, 56], "plu": 52, "pluggabl": 1, "pluggi": [34, 54], "plugin": [34, 54], "plural_noun": 49, "plural_verb": 49, "plus_on": [34, 52, 54, 64], "plus_two": 61, "pm": [11, 32, 46, 55, 56], "png": [49, 56], "po": [34, 49, 54], "poetri": 65, "point": [6, 27, 28, 34, 40, 45, 47, 49, 54, 56, 63, 65], "point1": 40, "point2": 40, "pol": 43, "polar": [43, 47, 48, 49], "polars_df": 50, "polars_df1": 50, "polars_df2": 50, "polars_merg": 50, "polars_tim": 50, "polic": 43, "polit": 46, "polycollect": 55, "polygon": 40, "polynomi": 44, "pomona": 45, "pond": 44, "poodl": 1, "poor": [34, 45, 46, 49, 54, 55], "poorli": [43, 47], "pop": 7, "poppler": 60, "popul": [34, 47, 54, 63], "popular": [19, 43, 45, 49, 50, 56, 60, 61, 66, 68], "popup": 56, "port": [39, 40, 52, 54], "portion": [16, 26], "portrait": 45, "pose": [47, 48, 55, 61], "posit": [5, 11, 16, 19, 30, 32, 33, 39, 41, 44, 46, 47, 49, 55], "posix": 64, "posixpath": [18, 34], "possibl": [6, 7, 27, 41, 45, 46, 53, 55, 60], "possibli": [4, 44], "post": [6, 11, 26, 32, 43, 45, 47, 49, 55], "post1": [47, 52], "post_period": 55, "postcod": 45, "posterior": 55, "postgr": [34, 39, 42, 54], "postgresql": 42, "pot": 45, "potenti": [1, 6, 7, 27, 45, 47, 50, 55, 58, 59, 61, 63], "poverti": 26, "power": [1, 10, 21, 23, 34, 41, 42, 44, 46, 47, 49, 50, 54, 58, 60, 62, 63, 64, 65], "pp": 44, "pp_matrix_from_data": 56, "pprint": [45, 49], "pr": 63, "practic": [7, 34, 46, 49, 54, 61, 65], "pre": [15, 42, 47, 49, 58, 61, 64], "pre_period": 55, "pre_process_doc": 49, "precis": [6, 27, 34, 40, 47, 54, 60, 64, 65], "precomput": 55, "pred": 47, "predefin": [42, 44, 49], "predic": 16, "predict": [1, 6, 33, 34, 39, 43, 45, 46, 49, 54, 56, 58], "predict_boolq": 49, "predict_ent": 49, "predict_fn": 47, "predict_r": 47, "predict_shortq": 49, "predicted_breakpoint": 55, "prediction_funct": 46, "prediction_interv": 55, "prediction_length": 55, "predictioncol": 47, "predictionfunctionmodel": 46, "predictioninterv": 55, "predictions_1": 33, "predictions_2": 33, "predictor": [44, 47], "prefect": [44, 61, 64], "prefer": [8, 18, 30, 45, 52], "prefix": 64, "prefixmarit": 44, "pregeneration_frac": 45, "premium": [9, 43], "premium_plan": 9, "prep": 45, "prepar": [44, 46, 47, 49, 56, 64], "prepend": 64, "preprocess": [39, 42, 47, 55, 56], "preprocess_text": 49, "preprocessor": [43, 47, 49], "presenc": 56, "present": [14, 34, 41, 45, 54, 55, 60, 64], "preserv": [5, 41, 58, 61], "preserveinsertionord": 41, "presid": 49, "presidenti": 49, "press": 45, "pretrain": 55, "pretti": 21, "prettier": 56, "pretty_confusion_matrix": 56, "prev": 53, "prevent": [6, 26, 34, 41, 43, 45, 54], "preview": [45, 61], "previou": [41, 50, 55, 58], "previous": [22, 27, 52], "previous_pl_df": 50, "price": [1, 4, 5, 6, 7, 9, 11, 16, 20, 26, 28, 29, 30, 32, 33, 34, 35, 39, 40, 43, 46, 47, 50, 52, 54, 55, 58, 61], "price1": [34, 54], "price2": [34, 54], "price_differ": 6, "prices_catalog": 55, "primari": [1, 34, 39, 46, 54], "primarili": 45, "primary_kei": 39, "prime": 52, "primer": 45, "primetim": 45, "princip": 47, "principl": 6, "print": [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 18, 19, 22, 24, 25, 26, 27, 29, 30, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 65, 67, 68], "print_fn": 64, "print_result": 58, "printabl": 64, "printer": 68, "prior": [41, 52], "pro": [43, 45, 49, 52], "prob": [43, 47, 49, 55], "prob_mistake_per_lett": 43, "probabilitycol": 47, "probabl": [37, 43, 47, 55], "problem": [1, 28, 39, 41, 43, 45, 47, 53, 58, 60], "problemat": [6, 41, 47], "proc": 43, "procedur": 47, "process": [1, 6, 15, 26, 27, 34, 39, 40, 41, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 58, 59, 61, 64, 65], "process_data": [6, 15, 60, 65], "process_data2": 15, "process_dict": 15, "process_dict2": 15, "process_list": 15, "process_list2": 15, "process_log_entri": 16, "process_nois": 55, "process_t": 45, "processed_data": 1, "processed_df": [15, 30, 52], "processed_text": 49, "processing_fn": [34, 54], "processor": [2, 47, 61, 67], "processors_cach": 47, "processtext": 1, "produc": [6, 46, 49, 50, 52, 55, 58], "product": [5, 34, 39, 42, 43, 46, 52, 54, 55, 60], "product_data": 39, "product_id": [39, 55], "products_to_upd": 39, "prof_df": 48, "prof_view": 48, "profil": [1, 34, 40, 43, 45, 48, 54, 61, 62], "profile_pictur": 45, "profit": 55, "program": [1, 6, 43, 45, 47, 49, 53, 61, 65], "programmat": 45, "progress": [56, 65], "progress_appli": 40, "progress_bar": 40, "prohibit": 45, "project": [13, 34, 38, 39, 45, 47, 49, 54, 56, 60, 61, 63, 65, 68], "project_uri": 47, "projectpro": 45, "prolept": 64, "promin": 49, "promis": [45, 47], "promot": [1, 45], "prompt": 40, "prompt_templ": 46, "prompttempl": 46, "prone": [1, 4, 6, 9, 14, 39, 41, 42, 44, 47, 56, 58], "pronunci": 49, "prop": 33, "prop_cycl": 56, "proper": [1, 40, 55, 64], "properli": 55, "properti": [1, 40, 45, 64], "property_typ": 49, "proport": [43, 56], "protect": [43, 45, 52], "proteincont": 45, "proven": 55, "provid": [1, 3, 5, 6, 9, 11, 14, 19, 21, 27, 29, 32, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 67, 68], "proxi": 62, "prr": 43, "pr\u00e4gt": 43, "psb": 43, "psdf": 52, "psf": 45, "psutil": 47, "psychologi": 45, "psychologist": 49, "psycopg2": [42, 54], "pt": [48, 49], "public": [43, 56, 64], "publish": 62, "publish_d": 49, "pud": 49, "pull": [48, 65], "pull_data": 65, "pull_request": 63, "puls": 26, "punch": 45, "punctuat": 49, "punkt": [47, 49], "purchas": [6, 50], "purd": 56, "purpl": 4, "purpos": [5, 22, 39, 41, 49, 55], "push": [26, 48, 50], "put": [6, 59, 65], "puzzl": 62, "pw_constant": 55, "px": 45, "py": [1, 6, 9, 16, 22, 24, 29, 31, 34, 37, 45, 47, 49, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65], "py2": 64, "py3": 64, "py4j": 52, "py_": 20, "pyarrow": [2, 52, 53], "pyarrow_ignore_timezon": 52, "pyarrow_memori": 27, "pycodestyl": 61, "pydant": [39, 46], "pydantic_tim": 19, "pydash": 12, "pydata": 24, "pyenv": [34, 55], "pyfakef": [34, 54], "pyflak": 61, "pyfunc": 47, "pyg": 56, "pygment": 64, "pyheat_exampl": 64, "pyinstrument": 62, "pyinstrument_exampl": 53, "pylabtool": [43, 56], "pypdf": 46, "pypdf2": [44, 60], "pypdfload": 46, "pypi": 62, "pyplot": [6, 37, 40, 47, 49, 55, 56], "pyproject": [61, 62], "pyspark": [40, 41, 47, 55], "pyspark_at_target": 52, "pyspark_group": 52, "pyspark_interv": 52, "pyspark_moving_stat": 52, "pyspark_oldest": 52, "pytest": [52, 61], "pytest_benchmark_exampl": [34, 54], "pytest_cach": [34, 54], "pytest_combin": [34, 54], "pytest_fixtur": [34, 54], "pytest_id": [34, 54], "pytest_mark": [34, 54], "pytest_mark_xfail": [34, 54], "pytest_param": [34, 54], "pytest_parametr": [34, 54], "pytest_repeat_exampl": [34, 54], "pytest_scop": [34, 54], "pytest_skip": [34, 54], "pytest_step": [34, 54], "pytest_sugar_exampl": [34, 54], "pytest_to_fail": [34, 54], "pytest_without_id": [34, 54], "python": [2, 17, 18, 21, 30, 36, 46, 50, 52, 63, 67], "python3": [29, 31, 34, 37, 40, 41, 45, 47, 49, 52, 54, 55, 56, 58, 60, 61, 62, 64], "python_env": 47, "python_funct": 47, "python_list": 1, "python_vers": 47, "pytorch": 48, "pytz": [52, 55], "q": [15, 30, 42, 44, 55, 56], "q1": 15, "q2": 15, "q3": 15, "q4": 15, "q_01": [], "q_05": [], "q_10": [], "q_25": [], "q_75": [], "q_90": [], "q_95": [], "q_99": [], "qa": [46, 60], "qalapeno": 43, "qcut": 15, "qe": 49, "qg": 49, "qq": 52, "quack": [1, 42], "quadraticdiscriminantanalysi": 47, "qualifi": 45, "qualiti": [34, 43, 45, 48, 54], "quantifi": [49, 55, 58], "quantil": [15, 29, 45], "quantiti": [34, 48, 50, 52, 54, 58], "quarter": 55, "quartil": [15, 34, 54], "quartile_bin": 15, "qubit": 43, "queen": [43, 45, 56], "queensland": 55, "queri": [26, 34, 40, 44, 46, 50, 54, 55, 62], "query1": 52, "query2": 52, "query_embed": 49, "query_result": [42, 49], "query_str": 44, "query_text": [46, 49], "query_tool": 46, "question": [21, 34, 43, 45, 46, 54, 55, 60], "qui": 49, "quick": [45, 48, 55, 63], "quickest": 45, "quickli": [9, 26, 40, 45, 47, 49, 50, 56, 64], "quiet": [42, 51, 61], "quikli": 49, "quintile_bin": 15, "quot": [34, 45, 49, 50, 52, 54], "quuci": 49, "r": [1, 11, 18, 32, 43, 47, 49, 50, 58, 60, 65], "r0lgodlhaqabaiaaap": 45, "r2": 56, "r_ui": 47, "race": 45, "racewai": 45, "radian": 65, "radii": 56, "radiu": [6, 9], "rais": [1, 6, 7, 9, 14, 15, 19, 22, 29, 34, 37, 41, 54, 58, 60, 61, 64], "ramin": 45, "ramsrigouthamg": 49, "rand": [26, 50, 56, 58], "randi": 45, "randint": [1, 2, 6, 13, 27, 28, 34, 40, 41, 45, 50, 53, 54], "randn": [55, 56, 62], "random": [1, 2, 6, 13, 26, 27, 28, 34, 40, 41, 43, 44, 47, 50, 53, 54, 55, 56, 58, 62], "random_num": 7, "random_numb": 27, "random_st": [1, 43, 47, 55, 61], "randomcharaug": 49, "randomforestclassifi": 47, "randomli": 49, "randomoversampl": 47, "randomsplitt": 43, "randomus": 45, "rang": [1, 2, 6, 7, 11, 13, 22, 26, 27, 32, 34, 40, 41, 42, 43, 45, 46, 47, 50, 52, 54, 55, 56, 61], "range_of": 43, "rangebackwindowsec": 52, "rangebetween": 52, "rangeindex": [27, 28, 53], "rank": [47, 49], "rapper": 43, "rare": [34, 54], "rarelabelencod": 43, "rate": [34, 47, 54, 55, 56], "rather": [26, 41, 43, 49, 55], "rating_scal": 47, "ratings_data": 47, "ratings_dict": 47, "ratings_matrix": 47, "ratio": [7, 11, 32, 49, 53, 55], "ration": 21, "ravel": 47, "raw": [26, 40, 41, 43, 45, 47, 55, 56, 63], "raw_text": 45, "rawpredict": 47, "rawpredictioncol": 47, "rb": [1, 55, 58], "rbf": [1, 47, 55], "rd": 55, "re": [1, 5, 6, 8, 15, 21, 22, 31, 34, 44, 45, 47, 49, 50, 54, 55, 58, 60, 61, 65], "reach": [34, 54, 65], "read": [1, 5, 6, 7, 16, 18, 34, 37, 39, 41, 42, 43, 45, 46, 49, 50, 52, 53, 54, 55, 58, 60, 61], "read_csv": [1, 6, 26, 28, 40, 41, 43, 48, 49, 50, 55, 56], "read_delta": 50, "read_html": 26, "read_parquet": [26, 41, 42], "read_pdf": 60, "read_pickl": [6, 43], "read_sql": [39, 42], "read_tabl": 56, "read_text": [18, 34, 39, 54], "readabl": [4, 7, 15, 16, 22, 24, 34, 39, 49, 52, 54, 55, 60, 61, 65, 68], "reader": [44, 47], "readi": [45, 49], "reading_tim": 49, "readm": 33, "readthedoc": 56, "real": [21, 34, 39, 46, 49, 54], "real_label": 33, "realis": 45, "realist": 55, "rearrang": 50, "reason": [34, 54], "rebal": 47, "recal": 60, "recent": [1, 4, 5, 6, 9, 16, 20, 29, 37, 49, 58, 61, 64], "recipe_embed": 49, "recipe_scrap": 45, "recipient_email": 65, "recogn": 49, "recommend": [49, 60], "recomput": 9, "reconcil": 55, "reconstruct": 51, "record": [28, 30, 39, 41, 43, 48, 52, 53, 56], "recov": 41, "recoveri": 41, "recreat": [41, 47], "recruit": [43, 49], "rectangl": 56, "rectifi": 46, "recurs": [48, 58], "recursivecharactertextsplitt": 46, "red": [1, 4, 20, 33, 43, 45, 47, 48, 60], "reddit": [45, 50], "redo": 62, "reduc": [1, 5, 9, 27, 28, 34, 45, 50, 52, 53, 54, 56, 65], "reduct": [27, 47, 49], "redund": [1, 6, 15, 47, 50], "refactor": 1, "refer": [26, 49, 60, 68], "refid": 45, "refinedweb": 49, "reflect": [40, 43, 55], "refund": [34, 54], "refus": 49, "regex": [55, 58], "region": [26, 50, 55, 56], "regist": [15, 45, 52, 56, 64], "regparam": 47, "regress": [47, 55], "regression_coverage_scor": 47, "regressor": 47, "regrex": [11, 32], "regular": [34, 43, 45, 47, 52, 54], "rehabilit": 43, "rehears": 45, "reject": [20, 41], "rel": [34, 37, 49, 54, 55], "relat": [45, 49, 50, 52, 65], "related_quest": 45, "relation_nam": 39, "relationship": [35, 44, 45, 52, 56], "relative_to": 18, "releas": [40, 42, 49, 67], "release_d": 19, "relev": [34, 50, 54], "reli": [34, 49, 54], "reliabl": [46, 47], "religion": 43, "remain": [7, 21, 34, 41, 43, 45, 47, 54, 61], "remaind": 8, "remark": 37, "rememb": [6, 21, 43], "remo": 49, "remot": [47, 48, 58, 63], "remote_fil": 58, "remoteauth": 48, "remotedir": 48, "remov": [6, 27, 31, 34, 41, 43, 45, 49, 50, 54, 56, 58, 60, 64], "remove_diacrit": 49, "remove_digit": 49, "remove_punctu": 49, "remove_url": 1, "remove_whitespac": 49, "removeprefix": 64, "removesuffix": 64, "remsen": 43, "renam": [42, 43, 49, 52, 55], "render": [47, 56, 60], "render_notebook": 56, "reorder": [1, 50, 58], "rep": 43, "repartit": 41, "repeat": [1, 5, 6, 9, 15, 20, 47, 49], "repeatedli": [15, 16], "repetit": [4, 5, 34, 44, 49, 54, 65], "replac": [1, 6, 9, 20, 22, 34, 39, 42, 43, 44, 47, 52, 54, 55, 61, 63, 64], "replace_keyword": 49, "replace_with": 43, "repo": [61, 63], "repo_nam": 63, "report": [40, 41, 45, 46, 48, 53, 55, 56, 61], "repositori": [45, 65], "repr": 64, "repres": [7, 14, 21, 24, 41, 44, 47, 49, 52, 64], "represent": [14, 41, 42, 47, 49, 55], "representative_doc": 49, "reproduc": [34, 41, 43, 47, 50, 54, 55, 59], "republ": 43, "reqs1": 62, "reqs2": 62, "request": [34, 45, 47, 51, 62], "requir": [5, 14, 16, 19, 28, 34, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 58, 60, 61, 64, 65], "required_educ": 43, "required_experi": 43, "rerun": [2, 47], "resampl": [47, 52], "rescu": [43, 45], "rescuer": 43, "research": 49, "reserv": 1, "reset_index": [35, 42, 43, 55], "reshap": [43, 47, 58], "resid": [16, 43], "resolut": [41, 64, 65], "resolv": [40, 41, 47], "resourc": [34, 49, 53, 54, 61, 68], "resp": 63, "respect": [43, 44, 55, 65], "respond": 46, "respons": [29, 34, 44, 45, 55, 63], "rest": [6, 16, 26, 27, 45, 61, 63], "restaur": 46, "restrict": [1, 55], "result": [2, 4, 5, 6, 7, 15, 16, 19, 24, 26, 27, 29, 34, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65], "result1": [6, 52], "result2": [6, 52], "result_df": 52, "result_panda": 50, "result_polar": 50, "resum": [49, 60], "resume_download": 60, "retain": [41, 52], "retrain": [49, 65], "retriev": [39, 41, 45, 46, 48, 49, 52, 55], "retrievalqa": 46, "return": [1, 2, 4, 6, 7, 8, 9, 11, 14, 15, 16, 19, 20, 22, 24, 26, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65], "return_scor": 43, "return_tensor": 49, "return_two": 6, "return_valu": [34, 54], "return_x_i": [27, 43, 47, 48, 53], "returntyp": 52, "retweeeet": 49, "retweet": 49, "reus": [5, 6, 9, 34, 52, 54, 60], "reusabl": [1, 5], "rev": [47, 61], "reveal": [47, 55], "revenu": [15, 42, 50, 52], "revenue_level": 15, "revers": [7, 35], "review": [39, 41, 46, 63], "revis": [6, 60, 61], "reviv": 45, "rewrit": [21, 34, 39, 41, 54], "rewrite_time_m": 41, "rfind": 64, "rib": 45, "rice": 45, "rich": 39, "ride": 49, "ridgeclassifi": 47, "ridgeclassifiercv": 47, "ridicul": 43, "right": [15, 21, 35, 45, 55, 58, 60, 63, 64, 69], "right_on": [25, 43], "rindex": 64, "ring": [43, 45], "ringslap": 45, "rins": 45, "risk": [41, 45, 47, 48, 51, 52, 55, 58, 59], "rivalri": 49, "rjust": 64, "rm_file": [34, 54], "rmt_auth": 48, "rmt_dir": 48, "rmtree": 65, "rnn": 55, "ro": 47, "robert": [45, 48], "roberta": 49, "roboflow": 45, "robot_execution_failur": 55, "robust": [34, 46, 49, 52, 54], "roc": 47, "roc_curv": 61, "rock": 49, "rocki": 49, "rodriguez": 49, "role": [6, 34, 54, 56], "roll": 55, "ron": 45, "root": [18, 21, 34, 47, 49, 54, 64], "root_mean_square_err": 64, "rootdir": [34, 54], "rotat": 43, "roughli": [30, 49], "round": [7, 34, 45, 47, 53, 54, 58, 60], "row": [2, 26, 27, 33, 39, 40, 41, 42, 43, 46, 47, 50, 52, 53, 55], "row_group_s": 26, "row_index": 24, "row_num": 52, "row_numb": 52, "rowname_col": 60, "rpartit": 64, "rpt": 55, "rsplit": 64, "rsquo": 43, "rss": 44, "rstrip": 64, "ru": 49, "rue": 45, "ruff": 22, "rule": [45, 47, 61], "run": [2, 6, 7, 20, 26, 39, 40, 41, 42, 45, 46, 47, 49, 50, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69], "run_id": 47, "run_interact": 60, "run_pend": 65, "run_process": 65, "run_test": [34, 54], "runpi": 53, "runtim": [34, 41, 54, 58, 63], "rust": [34, 41, 50, 54], "rwanda": 43, "s1": 27, "s2": 27, "s2v_reddit_2015_md": 49, "s3": [55, 56, 58], "s3_client": 58, "s3_file": 58, "s_df": 55, "s_email": 65, "s_numpi": 27, "s_pyarrow": 27, "safe": [14, 22, 47], "safe_open": 48, "safer": 41, "safeti": [51, 52, 58, 61], "sagittariu": 43, "saharan": 26, "sai": [43, 50, 58, 65], "said": 55, "salari": [15, 41, 43, 52], "salary_gt_0": 41, "salary_in_thousand": 52, "salary_level": 15, "salary_na": 43, "salary_rang": 43, "sale": [41, 42, 52, 55], "sales_feb": 42, "sales_jan": 42, "salt": 45, "sam": 52, "same": [1, 5, 6, 7, 9, 11, 14, 16, 17, 20, 25, 26, 29, 30, 32, 35, 37, 39, 43, 47, 49, 52, 53, 55, 56, 58, 62, 64, 65], "samefil": 18, "sampl": [1, 6, 24, 34, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 61, 64, 65], "sample_data": 47, "sampledata": 56, "samplelesuccess": [34, 54], "sampler": 45, "san": [34, 43, 52, 54, 56], "sanctuari": 45, "sander": 49, "sankeywidget": 56, "sapporo": 45, "sarah": [46, 52], "sat": [49, 65], "satisfi": [7, 37, 52, 64], "saturatedfatcont": 45, "saturdai": [11, 32, 45], "sauc": [45, 49], "savannah": 43, "save": [1, 27, 34, 39, 41, 42, 43, 44, 45, 46, 47, 50, 54, 56, 58, 59, 60, 62, 63, 65], "save_figur": 47, "save_fil": 48, "save_path": 50, "save_result": [34, 54], "savefig": 56, "savepath": 62, "saw": [34, 54, 58], "say_hello": 6, "sc": [40, 41, 52], "scalabl": [22, 55], "scale": [44, 52, 56], "scale_color": 56, "scaled_featur": 56, "scaler": [43, 47], "scam": 45, "scan": 52, "scan_csv": 50, "scan_result": 46, "scan_time_m": 41, "scatter": [47, 56], "scatterplot": [49, 56], "scenario": [9, 34, 47, 52, 54, 55], "scene": 52, "schema": [34, 39, 40, 41, 42, 47, 50, 52, 54], "schemaerror": [34, 54], "schemarerror": [34, 54], "scheme": [44, 62], "school": [21, 43, 45], "scie": 49, "scienc": [18, 40, 43, 44, 45, 47, 49, 55, 56, 57, 63, 68], "scientif": [36, 56], "scientist": [1, 40, 42, 45, 47, 49, 52, 55, 63, 65, 66], "scikit": [56, 64], "scipi": [47, 53], "scontent": 45, "scoop": 56, "scope": [34, 54], "score": [5, 34, 39, 43, 47, 49, 54, 56], "scorer": 49, "scott": 45, "scrape_m": 45, "scrape_repo": 62, "scrape_us": 62, "scratch": 47, "screen": [49, 65], "screenshot": 45, "script": [42, 59, 61, 62, 65], "sdk": [45, 58], "seaborn": [26, 40, 43, 49, 62], "seal": 48, "seamless": [39, 40, 55], "seamlessli": [34, 39, 43, 47, 50, 54, 55], "search": [11, 32, 41, 44, 46, 55, 59, 61], "search_term": 49, "search_top": 49, "season": [6, 20, 45, 49, 55, 56], "season_length": 55, "seasonal_data": 6, "sec": [21, 44, 55, 64], "second": [4, 5, 19, 20, 22, 24, 34, 37, 42, 43, 45, 49, 50, 52, 54, 55, 56, 58, 64], "second_sum": 40, "secondari": 45, "secret": [51, 63], "section": [2, 6, 9, 13, 15, 16, 17, 26, 30, 35, 40, 43, 45, 48, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 68], "secur": [43, 47, 48, 49, 52, 54, 58], "see": [2, 4, 6, 11, 21, 24, 26, 32, 34, 41, 43, 45, 47, 49, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65], "seed": [2, 6, 7, 13, 27, 41, 43, 49, 50, 55, 56], "seed_topic_list": 49, "seem": 47, "seen": [45, 60], "segment": [41, 42, 49, 52], "segment_custom": 52, "select": [8, 24, 26, 34, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 54, 55, 56, 58, 61], "select_dtyp": 50, "select_target": 39, "selector": [33, 45, 65], "self": [1, 14, 19, 22, 29, 34, 44, 47, 52, 54, 55, 58, 61, 64], "self_inst": 61, "sell": [45, 55], "semant": [44, 46], "send": [43, 47], "send_kei": 65, "sender_email": 65, "senior": [43, 52], "sens": 49, "sense2vec": 49, "sensit": 43, "sent": [11, 32, 49], "sentenc": [11, 32, 34, 45, 49, 54], "sentence_transform": 49, "sentencepiec": 49, "sentencetransform": 49, "sentiment": [34, 39, 46, 47, 49, 54], "sentiment_analyz": 47, "sentimentanalyz": 47, "sentimetn": [34, 54], "seoul": 45, "sep": [35, 64], "sep_mark": 60, "sepal": 27, "separ": [1, 6, 7, 8, 14, 24, 30, 34, 41, 42, 48, 49, 52, 54, 56, 58, 59, 62, 64], "seper": 59, "septemb": 40, "sequenc": [6, 16, 34, 54, 65], "sequenti": 50, "serd": 51, "seri": [1, 3, 6, 27, 34, 45, 50, 54, 62], "serial": [1, 34, 39, 54, 55, 58], "serialization_format": 47, "series_ddf": 47, "series_with_pric": 55, "seriou": [43, 58], "serv": [1, 40, 45], "server": [42, 47, 48, 54, 62], "servic": [40, 43, 44, 52, 58, 61], "session": [39, 69], "sessionfinish": [34, 54], "set": [1, 5, 9, 15, 16, 17, 22, 24, 28, 40, 41, 42, 43, 45, 46, 47, 48, 49, 52, 55, 56, 59, 61, 62, 64, 65], "set_font": 44, "set_index": [28, 55], "set_label": 56, "set_openai_kei": 47, "set_openai_org": 47, "set_opt": [45, 56], "set_output": 43, "set_size_inch": 55, "set_table_styl": 33, "set_them": 56, "set_time_rang": 45, "set_titl": [43, 47], "set_verbosity_error": 49, "set_xlim": 56, "set_xtick": 56, "set_xticklabel": [43, 56], "set_ylim": 56, "set_ytick": 56, "set_yticklabel": 56, "seth": 45, "setloglevel": [40, 41, 52], "settingwithcopyerror": 24, "settingwithcopywarn": 24, "setup": [42, 47, 60, 61, 62, 64, 65], "setuptool": 47, "sever": [2, 6, 9, 20, 34, 47, 54, 55, 58, 60], "seward": [43, 56], "sex": [43, 56], "sf": 55, "sgd": 56, "sgdclassifi": 47, "sh": 49, "sha1": 45, "sha256": 45, "shade": 55, "shallow": 6, "shape": [1, 26, 34, 37, 40, 47, 48, 50, 54, 55, 56], "shape_match": 48, "share": [1, 14, 22, 45, 46, 47, 62, 63], "sharei": 47, "sharp": 55, "she": [45, 49, 68], "sheet": [33, 48], "shell": 65, "shipping_fe": 6, "shirt": [45, 58], "shit": 43, "shoe": [34, 54], "shoelac": 40, "shop": [34, 54], "short": [6, 43, 45, 46, 53, 55, 56, 58, 65], "shorten": [6, 29], "shorter": [7, 29], "shot": 55, "should": [1, 19, 34, 39, 47, 49, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65], "shouldn": 22, "show": [1, 2, 6, 8, 9, 13, 15, 16, 17, 19, 26, 28, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 67], "show_figur": 47, "show_heatmap": 64, "show_html": 48, "show_info": 1, "show_tre": 56, "showa": 55, "showcas": 52, "shown": [11, 32, 34, 37, 50, 54], "shrinkag": 47, "shutil": 65, "shuttl": 49, "si": 65, "si1": 43, "si2": 43, "sicher": 43, "sick": 56, "side": [43, 45, 52, 55, 56, 64], "side_effect": 34, "sierra": 43, "sigma": 55, "sign": [43, 56, 65, 68], "signal": [34, 54, 65], "signatur": [47, 51, 64], "signific": [1, 26, 27, 34, 43, 47, 49, 54, 55], "significant_digit": [34, 54], "significantli": [44, 50, 52, 55, 56], "silenc": 61, "silli": 43, "sim_randomwalk": 55, "similar": [1, 15, 25, 46, 47, 49, 50, 55, 61, 64], "similarityencod": 43, "similaryencod": 43, "simmer": 45, "simpl": [1, 6, 14, 19, 28, 39, 43, 45, 46, 47, 49, 52, 55, 56, 58, 60], "simplefilt": [43, 49, 52, 56], "simplefunctionregistri": 52, "simpleimput": [43, 47], "simplepickleio": 47, "simpler": [5, 17, 18, 19, 42, 45, 47, 52, 64], "simpli": [1, 14, 21, 24, 28, 34, 37, 41, 43, 45, 50, 53, 54, 56, 63, 64, 69], "simplic": [41, 49], "simplifi": [6, 44, 45, 48, 49, 56, 65], "simplist": 47, "simul": [6, 41, 54, 55], "simultan": [7, 52], "sin": [6, 21, 56, 60], "sinc": [4, 5, 6, 22, 28, 29, 30, 34, 41, 42, 45, 47, 49, 54, 55, 56, 60, 61, 62], "singl": [4, 10, 15, 24, 39, 41, 42, 43, 44, 45, 47, 49, 50, 55, 58, 60, 64, 65], "single_fil": 60, "singular_noun": 49, "sink": 20, "sir": 45, "site": [29, 31, 37, 40, 41, 45, 47, 49, 52, 55, 56, 58, 60, 61, 62, 64], "situat": [4, 5], "sitzprob": 45, "six": [43, 52, 64], "sixti": 49, "size": [2, 27, 29, 34, 40, 41, 43, 44, 45, 47, 49, 50, 52, 54, 55, 56, 60, 68], "size_byt": 41, "sk": 46, "sk_model": 47, "skill": 46, "skill_db": 49, "skill_extractor": 49, "skill_extractor_class": 49, "skill_id": 49, "skillet": 45, "skillextractor": 49, "skip": [16, 37, 58, 65], "skip_first_two": 58, "sklearn": [1, 27, 43, 45, 48, 49, 53, 56, 61, 64, 67], "sklearn_pyfunc": 47, "sklearn_vers": 47, "sklearnmodel": 47, "sklego": 64, "skllm": 47, "skllmconfig": 47, "skrub": 43, "skub": 43, "slack": 65, "slahzi": 49, "slant": 60, "slate": [6, 45], "sleep": [34, 40, 49, 54, 58, 64, 65], "slice": [16, 24, 45], "slide": 56, "slide1": 56, "slide2": 56, "slightli": 6, "slow": [13, 34, 50, 54, 56], "slower": 27, "slowest": [34, 54], "slyboot": 49, "sma": 55, "sma1": 55, "sma2": 55, "smacross": 55, "small": [5, 13, 31, 34, 35, 41, 44, 45, 50, 54, 55, 61], "small_cnn": 49, "small_font_threshold": 44, "smaller": [6, 26, 27, 30, 34, 37, 54], "smallest": [27, 37, 53], "smart": 43, "smile": 43, "smith": [41, 49, 52], "smoke": 43, "smooth": [50, 56], "smooth_data": 55, "smooth_fract": 55, "smoother": 55, "smoothi": 1, "sn": [43, 49, 56], "snappi": 42, "snapshot": [49, 55], "snippet": [44, 45, 63, 65, 68], "snippet_data": 45, "snippet_str": 45, "snippet_str_bodi": 45, "snippet_typ": 45, "snoop": 60, "snorkel_exampl": 43, "snowflak": 48, "so": [1, 6, 14, 16, 22, 37, 41, 43, 45, 47, 49, 56, 58, 60, 62, 63, 65], "social": 43, "socialtoken": 49, "sodiumcont": 45, "soft": [47, 49], "soften": 45, "softwar": [43, 47], "soi": 45, "solar": 56, "sold": 56, "sole": 49, "solid": 49, "solut": [43, 45, 46, 47, 52, 55, 61], "solv": [27, 39, 41, 50, 53, 58, 60, 61, 62], "solver": 62, "some": [0, 1, 2, 6, 7, 9, 13, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 30, 34, 35, 36, 38, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68], "someth": [34, 49, 54, 64, 65], "sometim": [8, 14, 20, 24, 26, 33, 34, 37, 43, 54, 55, 56, 61, 62, 63, 64, 65], "somewhat": 43, "song": 19, "song1": 19, "sorri": 46, "sort": [16, 27, 37, 52], "sort_valu": [27, 31, 42, 43, 52, 60], "sortino": 55, "sour": [4, 22], "sourc": [19, 22, 23, 41, 49, 55, 56, 58, 60, 61, 62, 63, 64, 65, 68, 69], "source_not": 60, "source_url": 47, "south": [26, 43, 45, 50, 55, 56], "soybean": 56, "space": [1, 11, 32, 39, 43, 44, 49, 64], "spaci": [49, 62], "spam": 45, "span": 40, "spanish": [13, 43], "spare": 49, "spark": [41, 47, 48, 50], "spark_2": 41, "spark_catalog": 41, "spark_data": 52, "spark_df": 55, "spark_local_ip": 40, "spark_sql_queri": 39, "sparkexecutionengin": 40, "sparkr": [40, 41, 52], "sparksess": [41, 47, 52, 55], "sparkstringutil": 41, "sparkui": [40, 52], "sparse_output": 43, "spatial": 40, "speak": [43, 45], "spec": [47, 55, 62], "speci": [1, 40, 43, 56], "special": [1, 40, 43, 45, 47, 48, 53], "specialist": 43, "specif": [6, 7, 19, 30, 39, 41, 42, 43, 44, 45, 46, 47, 49, 52, 55, 56, 58, 59, 60, 62], "specifi": [2, 5, 6, 11, 14, 20, 32, 33, 34, 35, 37, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67], "speed": [6, 7, 26, 27, 42, 49, 58], "speed_kmh": 58, "spell": 49, "spell_correct_elong": 49, "spellingaug": 49, "spend": [43, 47, 49, 55, 59], "spent": 53, "spici": 45, "splat": 7, "split": [6, 35, 44, 47, 49, 55, 56, 64], "split_data": 61, "splitaug": 49, "splitconfig": 61, "splitlin": 64, "sport": [49, 55], "spot": 47, "spread": 68, "springfield": 14, "sprinkl": 45, "spy": 55, "sq": [43, 56], "sql": [47, 49, 55], "sql_metadata": 39, "sql_metdata": 39, "sqlalchemi": [39, 42], "sqlfluff_exampl": 39, "sqlite": [42, 46, 60], "sqlite3": [39, 42, 46], "sqn": 55, "sqrt": [21, 40, 46, 60, 65], "squad": 60, "squar": [21, 43, 44, 52, 56], "square_numbers_udf": 52, "square_root": 65, "squared_list": [], "squared_np": [], "squarenumb": 52, "src": 60, "sriracha": 45, "sroccoli": 43, "ss": 64, "ssh": 48, "st": [14, 55], "st06": 39, "stabl": [24, 56], "stack": [47, 56, 61], "stacked_df": 35, "stackoverflow": 45, "stacktrac": 64, "stad": 56, "stage": [40, 52, 63], "stai": [6, 7], "stakehold": 49, "stand": [24, 67], "standard": [1, 15, 34, 40, 47, 54, 55, 58, 61, 62, 64], "standardize_data": 1, "standardizedatastrategi": 1, "standardscal": [43, 47, 56], "star": [45, 65], "star_button": 65, "star_script": 65, "stargazers_count": 63, "start": [5, 6, 7, 11, 21, 27, 28, 30, 32, 34, 37, 41, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 60, 62, 64], "start_chrom": 65, "start_dat": [26, 34, 39, 41], "start_run": 47, "start_t": 52, "start_tim": [50, 58], "startswith": [20, 64], "stat": 55, "statannot": 56, "state": [1, 34, 41, 44, 45, 47, 49, 54, 55, 56, 63, 64, 65], "statecitypricestrstri64": [34, 54], "statement": [1, 4, 5, 7, 15, 24, 29, 37, 41, 49, 52, 61, 64, 65], "static": [22, 56], "static_0": 55, "static_1": 55, "static_featur": 55, "staticmethod": 1, "station": 49, "statist": [29, 34, 35, 41, 44, 47, 48, 52, 54, 55, 62, 64], "statisticsinput": 61, "statisticsoutput": 61, "statu": [1, 34, 41, 43, 54], "statuscod": 1, "std": [1, 6, 26, 41, 42, 47, 50, 55], "std_dev": [], "stddev": [34, 54], "stdout": 64, "step": [1, 28, 43, 47, 49, 50, 52, 55, 56, 58, 60, 61, 63, 64, 65], "stephen": 45, "steps_data": [34, 54], "stepwis": 55, "stewart": 45, "stick": 61, "still": [27, 34, 41, 47, 54, 61, 65], "stir": 45, "stock": [6, 39, 45], "stock_pric": 6, "stop": [11, 32, 37, 45, 49, 53, 56], "stop_word": 56, "stopword": 49, "storag": [2, 47, 48, 50, 51], "store": [1, 2, 7, 14, 20, 27, 35, 39, 41, 44, 45, 46, 47, 55, 56, 58], "store1": 25, "store2": 25, "store_id": 55, "stori": 45, "stp": 45, "str": [1, 2, 6, 7, 9, 11, 14, 16, 19, 22, 24, 32, 33, 34, 35, 39, 43, 44, 45, 46, 50, 51, 54, 55, 56, 60, 61, 64], "str__": 1, "straight": 43, "straightforward": 48, "strasbourg": 45, "strategi": [1, 15, 34, 43, 47, 54], "stratifiedkfold": 61, "strawberri": 56, "stream": 65, "streamlin": [43, 44], "streamlit": 49, "streamlit_app": 49, "street": [14, 45], "strength": 56, "stress": 45, "strftime": [34, 56, 64], "strict": 64, "strictli": [43, 55], "string": [16, 19, 22, 28, 34, 35, 41, 43, 45, 52, 53, 54, 59, 60, 61, 64], "string_with_d": 55, "stringio": 48, "stringtyp": 52, "strip": [45, 49, 64], "strip_interact": 60, "strong": [49, 55], "strongli": [56, 63], "strptime": [3, 55, 64], "structfield": 52, "structtyp": 52, "structur": [1, 18, 19, 40, 42, 45, 47, 49, 55, 60, 62, 65], "struggl": [48, 53], "stub": 65, "student_df": [34, 54], "student_schema": [34, 54], "studi": 45, "stuff": [20, 43], "style": [6, 44, 49, 52, 55, 61, 64], "sub": [1, 21, 26, 49, 56, 60, 62, 64], "subclass": [1, 22, 58], "subject": [47, 49], "submit": [41, 64, 69], "subpar": [34, 54], "subplot": [47, 55, 56], "subscript": 9, "subscriptionplan": 9, "subsequ": [6, 42, 55], "subset": [7, 26, 35, 41, 43, 49, 50, 55, 56], "subset_i": 6, "subset_x": 6, "substant": 55, "substitut": [39, 49, 52, 60], "substr": [45, 46, 58, 64], "subtitl": 60, "subtl": 58, "subtract": [3, 55], "succe": 34, "success": [6, 34, 47, 54, 65], "successfulli": [41, 46, 62, 64], "suck": 49, "suddenli": 62, "suffici": 55, "suffix": [48, 64], "suffixgener": 44, "sugar": [45, 49], "sugarcont": 45, "suggest": [47, 56], "suitabl": [5, 27, 49, 64], "sum": [1, 3, 5, 6, 7, 20, 24, 28, 34, 35, 40, 42, 49, 50, 52, 54, 55, 60, 61], "sum_": 6, "sum_all_column": 6, "sum_num": 6, "sum_test": [34, 54], "summar": 35, "summari": [34, 48, 49, 54, 55, 63], "summarytyp": [], "summer": 43, "sunda": 49, "sundai": [11, 32, 34, 54, 55, 64], "sunspot": 55, "super": [1, 63], "super_tre": 56, "superior": [27, 47], "supervis": [45, 47], "supervisor": 43, "suppli": 60, "support": [34, 44, 45, 46, 47, 49, 54, 55, 58, 60, 63, 64, 65], "suppos": [1, 41], "suppress": 49, "suppress_warn": 55, "sure": [22, 34, 47, 49, 54], "surg": 41, "surnam": 44, "surpass": 49, "surprisingli": 49, "surround": 60, "susan": 45, "susanli2016": 56, "suscept": 41, "sushi": 49, "sv": [34, 48, 54], "svc": [1, 47], "svc__c": 47, "svc__gamma": 47, "svd": 47, "svm": [1, 47, 61], "swap": [1, 11, 32, 58], "swapcas": 64, "sweet": [1, 4, 20, 34, 47, 54, 58], "sweeten": 49, "sweetness_percentag": 46, "swifter_appli": 53, "swifter_tim": 53, "swim": 56, "switch": [4, 48, 56, 64], "sy": [34, 50, 54, 64], "symbol": [5, 52, 60, 62], "symmetr": 35, "synchron": 63, "synonym": 49, "synonymaug": 49, "syntax": [1, 9, 14, 17, 39, 40, 42, 51, 52, 56, 58, 60, 63, 64], "synthes": 43, "synthesi": 46, "syr": 46, "system": [34, 41, 42, 45, 46, 49, 50, 54, 56, 58], "s\u00e8ntenc\u00e9": 49, "t": [1, 4, 7, 14, 15, 16, 19, 20, 21, 22, 24, 28, 34, 39, 40, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 58, 60, 62, 64, 65], "t31": 45, "t39": 45, "t5": 55, "t_x": 55, "t_y": 55, "t_z": 55, "tab": [56, 64], "tab10": [55, 56], "tab20": 56, "tab20r": 56, "tab_head": 60, "tab_source_not": 60, "tab_stubhead": 60, "tabl": [4, 33, 34, 39, 40, 42, 46, 54, 64], "table_nam": 39, "table_path": 41, "tablefmt": 33, "tablelist": 60, "tablespoon": 45, "tablet": 42, "tabsiz": 64, "tabul": 33, "tabular": [33, 44, 47, 50, 53, 55], "tabularpredictor": 47, "tag": [55, 67], "tail": [43, 50, 55, 58], "tailor": 49, "take": [2, 3, 5, 13, 16, 21, 27, 34, 45, 46, 49, 50, 52, 53, 54, 55, 56, 58, 64, 65], "taken": [47, 55, 56], "talk": 45, "tamari": 45, "tampa": [34, 54], "tamper": 51, "tan": 21, "tangl": 62, "tanzania": 43, "tar": [49, 64], "target": [27, 39, 41, 43, 45, 47, 55, 56, 65], "target_col": 55, "target_nam": 56, "target_tim": 52, "target_transform": [47, 55], "task": [34, 39, 41, 42, 43, 45, 46, 47, 49, 50, 52, 54, 55, 56, 60, 64, 65], "task1": 64, "task2": 64, "tast": [4, 20, 22, 45], "tauru": 43, "taxi": [43, 56], "td": 56, "te": 43, "tea": [1, 46], "teach": 49, "teacher": 45, "team": [43, 45, 47, 49, 52, 65], "teardown": [34, 54], "teaspoon": 45, "tech": 43, "technic": 56, "techniqu": [47, 49, 55], "technologi": [43, 44, 49], "tediou": [4, 39, 49, 50, 55, 64, 65], "telecommut": 43, "tell": [27, 47, 56, 61], "temp": [52, 58], "temperatur": [46, 47, 56, 58], "templat": [46, 49], "tempo_at_target": 52, "tempo_group": 52, "tempo_interv": 52, "tempo_moving_stat": 52, "tempo_oldest": 52, "tempor": 43, "temps_f": 58, "ten": [7, 14, 19, 60], "tender": 45, "tensor": [47, 55], "term": [21, 44, 47, 49, 55, 60], "termcolor": 60, "termin": [34, 47, 49, 53, 54, 59, 60, 61, 62, 65, 67], "ternari": 45, "terrac": 43, "terribl": 44, "test": [6, 19, 41, 43, 46, 47, 48, 55, 56, 61, 64], "test_add_two": [34, 54], "test_approx": [34, 54], "test_bark": [34, 54], "test_benchmark_exampl": [34, 54], "test_calc_suit": [34, 54], "test_calculate_average_empty_list": [34, 54], "test_calculate_average_two_num": [34, 54], "test_calculation_with_approx": [34, 54], "test_calculation_without_approx": [34, 54], "test_cas": [34, 47, 54], "test_cget_mean": [34, 54], "test_chatbot": [34, 54], "test_concat": [34, 54], "test_contain_word_1": [34, 54], "test_contain_word_2": [34, 54], "test_contain_word_different_cas": [34, 54], "test_contain_word_exact": [34, 54], "test_d": [34, 54], "test_data": [43, 47, 52, 55], "test_database_interact": [34, 54], "test_df": 45, "test_divide_by_0": [34, 54], "test_divis": [34, 54], "test_extract_senti": [34, 54], "test_fetch_user_from_db": 54, "test_fetch_user_from_db_with_mock": 54, "test_fixtur": [34, 54], "test_floats_are_commut": [34, 54], "test_freezegun": [34, 54], "test_func_complex": 58, "test_func_simpl": 58, "test_function_1": [34, 54], "test_function_2": [34, 54], "test_gen": 55, "test_generate_numb": [34, 54], "test_get_data_fail": 34, "test_get_data_for_last_week": 34, "test_get_data_succe": 34, "test_get_day_of_week": [34, 54], "test_get_dog": [34, 54], "test_get_mean": [34, 54], "test_hypothesi": [34, 54], "test_ind": 56, "test_index": 43, "test_is_float": [34, 54], "test_list_of_float": [34, 54], "test_log": [34, 54], "test_long_running_funct": [34, 54], "test_main": 34, "test_modulu": [34, 54], "test_parametr": [34, 54], "test_pd": 55, "test_pick": [34, 54], "test_plus_on": [34, 54], "test_postgr": [34, 54], "test_processing_fn": [34, 54], "test_query_result": [34, 54], "test_query_return_correct_number_of_row": 52, "test_refurb": 61, "test_repeat_exampl": [34, 54], "test_rm_fil": [34, 54], "test_save_result": [34, 54], "test_siz": [43, 47, 61], "test_step": [34, 54], "test_tabl": [34, 54], "test_text_contain_word": [34, 54], "test_tmp_path": [34, 54], "test_unix_f": [34, 54], "test_walk": [34, 54], "test_with_forecast": 55, "test_with_unittest_mock": [34, 54], "testabl": 47, "testasia": 45, "testcas": [34, 54], "testdb": 54, "testdog": [34, 54], "testfind": [34, 54], "testmod": [34, 54], "testset": 47, "testus": 54, "text": [1, 6, 7, 11, 16, 18, 32, 34, 39, 45, 46, 54, 58, 64, 65], "text1": [11, 32], "text2": [11, 32], "text_bodi": 44, "text_column": 1, "text_contain_word": [34, 54], "text_gener": 46, "text_processor": 49, "text_splitt": 46, "textblob": [24, 34, 47, 54], "textpreprocessor": 49, "textual": [44, 49], "textur": 46, "textwrap": 53, "tf": 49, "tfidf": 49, "th": [34, 49, 54, 55], "thai": 45, "than": [2, 7, 13, 19, 26, 27, 29, 30, 34, 37, 41, 42, 47, 49, 50, 52, 53, 54, 55, 56, 61, 64, 65, 68], "thank": [1, 45], "thankless": 39, "thanksgiv": 55, "theatermania": 45, "theatr": [43, 56], "thedachshundown": 45, "thei": [1, 2, 4, 5, 6, 24, 29, 34, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 58, 59, 60, 68], "them": [6, 8, 11, 22, 24, 27, 32, 34, 42, 43, 47, 49, 52, 54, 55, 56, 58, 59, 61, 62, 63, 68], "theme": 44, "therebi": 48, "therefor": [34, 43, 54], "thi": [0, 1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "thick": 45, "thin": [43, 45, 54], "thing": [6, 9, 17, 21, 34, 43, 45, 49, 54, 58, 62], "thinh": 35, "think": 43, "thinli": 45, "third": [34, 50, 54], "thirti": 45, "those": [6, 37, 45, 46, 49, 55, 64, 65], "though": [6, 27, 42, 47, 52], "thought": [6, 34, 54], "thousand": [8, 11, 32, 43, 49], "thread": [49, 50], "three": [10, 11, 32, 34, 45, 49, 52, 54, 55, 56, 60, 64], "threshold": [29, 43, 44, 47], "through": [1, 34, 39, 46, 49, 52, 54, 55, 56, 58, 61, 64, 65], "throughout": 15, "throw": [14, 24, 45], "thrown": [34, 54], "thu": [6, 8, 21, 26, 41, 47, 52, 62], "thumb": 45, "thumbnail": 45, "thumbnail_url": 65, "tiburon": 43, "ticket": 58, "tiger": 1, "tightli": 60, "tiiuae": 49, "tiktoken": 46, "time": [1, 3, 5, 6, 7, 9, 13, 16, 19, 26, 27, 39, 40, 41, 42, 46, 49, 50, 56, 58, 59, 60, 61, 62, 63], "time1": 2, "time2": 2, "time_": 47, "time_col": 55, "time_column": 55, "time_func": 5, "time_func_complex": 58, "time_func_simpl": 58, "time_func_with_wrap": 5, "time_heapq": 7, "time_of_dai": 65, "time_of_week": 65, "time_period": 28, "time_sort": 7, "timedelta": [6, 34, 52, 54, 55, 64], "timegpt_fcst_df": 55, "timeit": [2, 6, 7, 13, 19, 26, 41, 42, 50, 53], "timer": [34, 54], "timeseri": 55, "timeseriesanalysiswithpython": 55, "timeseriessplit": 61, "timestamp": [52, 56, 64], "timestep": 55, "timetupl": 64, "timetz": 64, "timezon": [45, 55, 64], "timothycroslei": 61, "tip": [26, 43, 56, 68], "titl": [6, 14, 19, 33, 43, 44, 45, 47, 49, 55, 56, 60, 64, 65], "titlecas": 64, "tjp": 49, "tm": 44, "tmp": [1, 16, 29, 41, 50, 64], "to_csv": [2, 26, 28, 42, 56, 60], "to_datetim": [26, 28, 43, 45, 55], "to_df": 42, "to_dict": [56, 58], "to_do_tonight": 7, "to_excel": [33, 60], "to_html": [46, 60], "to_json": [51, 60], "to_latex": 33, "to_list": 49, "to_ltx": 37, "to_markdown": 60, "to_panda": [41, 42, 48], "to_parquet": [2, 26, 41, 42], "to_pickl": 1, "to_pyarrow_dataset": 42, "to_sql": 42, "to_sqlit": 60, "to_timestamp": 52, "to_timezon": 55, "to_uppercas": 50, "to_yaml": 51, "todai": [7, 11, 19, 24, 32, 34, 46, 47, 49, 54, 56, 64], "todf": 41, "todo": [34, 54, 61], "togeth": [34, 45, 46, 50, 54, 56, 58], "togo": 43, "token": [49, 51, 55, 63], "token_pattern": 49, "tokyo": [42, 45, 55], "tokyo_night": 56, "tokyo_tim": 55, "tokyo_tz": 55, "tol": [43, 47], "toler": [34, 47, 54], "toll": [43, 56], "tom": [49, 52], "tomato": 13, "toml": [61, 62], "tong": 49, "toni": 45, "too": [6, 34, 41, 43, 47, 49, 54, 61], "tool": [10, 11, 23, 32, 39, 43, 44, 45, 46, 47, 50, 51, 56, 58, 61, 63, 65, 66, 67], "tooltip": 56, "toordin": 64, "top": [14, 15, 41, 45, 46, 47, 49, 52, 55, 56, 60, 65, 69], "top_filter_quantil": 45, "top_github_scrap": 62, "top_imag": 49, "top_indic": 49, "top_k": 49, "top_n_top": 49, "topic": 46, "topic_model": 49, "topic_num": 49, "topic_scor": 49, "topic_word": 49, "topics_": 49, "toprul": 33, "torch": [48, 49, 55], "torch_dtyp": 55, "total": [1, 11, 27, 28, 32, 34, 39, 43, 50, 52, 53, 54, 55, 56], "total_pric": 20, "total_purchas": 52, "total_revenu": 52, "total_sal": 42, "total_tim": 45, "total_weight": 1, "totalconsideredfil": 41, "totalfil": 41, "totalfilesskip": 41, "totals": 41, "tote": 45, "touch": [18, 34, 54], "tough": 45, "tourism": 55, "toward": [49, 68], "tpp": 49, "tqdm": [55, 56, 64], "tqdmexperimentalwarn": 55, "tqdmwarn": 56, "tr": 43, "trace": 64, "traceback": [1, 4, 5, 6, 16, 20, 29, 37, 58, 61], "track": [2, 5, 34, 41, 45, 47, 48, 49, 54, 58, 65], "trackback_test": 9, "trade": 6, "tradit": [4, 6, 9, 34, 41, 42, 46, 47, 49, 50, 52, 54, 55, 56, 65], "tradition": [41, 42], "traffic": 43, "trail": 64, "train": [39, 45, 47, 48, 49, 56, 65], "train_d": [34, 54], "train_data": [43, 47], "train_df": [43, 45], "train_fake_job": 43, "train_index": 43, "train_model": 65, "train_pd": 55, "train_siz": 55, "train_test_split": [43, 47, 48, 55, 61], "train_your_nicest_model": 65, "trainer_kwarg": 55, "training_data": 55, "tran": [49, 68], "transact": [41, 45, 50], "transaction_d": 52, "transfatcont": 45, "transfer": [40, 48, 55], "transfer_to": 48, "transform": [39, 40, 44, 46, 47, 49, 55, 56, 60, 64], "transit": [55, 56], "translat": [49, 64], "translation_t": 43, "transluc": 45, "transmiss": 51, "transpar": [6, 47, 58, 60], "transpil": 39, "travel": [41, 43, 50], "travers": 58, "treasur": 43, "treat": [42, 47], "tree": [18, 47, 61], "treeaggreg": 47, "trend": 55, "trend1": 6, "trendforecast": 55, "trendreq": 45, "tri": [21, 26, 49], "trial": 49, "triangleq": 60, "trick": [3, 21, 63], "tricki": 48, "trigger": 6, "trigsimp": 21, "trim": [29, 52], "trip": [55, 56], "tropic": 1, "tropical_fruit": 10, "true": [1, 5, 6, 8, 9, 10, 13, 16, 18, 26, 27, 29, 30, 31, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65], "true_breakpoint": 55, "trump": 49, "truncat": [41, 49, 52], "trust": [43, 47, 56], "truth": 37, "try": [2, 7, 19, 21, 24, 34, 35, 37, 40, 41, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 58, 60, 61, 62, 64, 65], "ts_col": 52, "tscv": 43, "tsdf": 52, "tseri": 28, "tub": 45, "tune": [47, 55, 56], "tupl": [4, 6, 13, 16, 29, 47, 50, 52, 58, 61, 64], "turbinado": 45, "turbo": [46, 47], "turn": [1, 4, 20, 24, 26, 33, 45, 49, 65], "turtl": [43, 56], "tuscan": 45, "tutori": [60, 64], "tv": [43, 45], "tweet": 45, "twenti": [45, 49], "twice": [4, 6, 9, 37], "twitter": [45, 49, 51], "two": [1, 5, 6, 9, 10, 11, 13, 15, 16, 28, 30, 32, 33, 35, 40, 41, 43, 48, 49, 50, 52, 55, 56, 65], "txt": [18, 34, 47, 54, 56, 58, 59, 61], "txtmarker": 60, "type": [4, 14, 19, 21, 29, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64], "type_": [1, 47], "type_error": 61, "type_example_right": 22, "type_example_wrong": 22, "typecheck": 22, "typeerror": [1, 4, 5, 6, 16, 19, 46, 60, 61], "typeguard": [34, 54], "typehint": 61, "typer": 62, "typer_exampl": 60, "typevar_exampl": 22, "typic": [14, 42, 49, 50, 55, 58, 60], "typing_annot": 22, "typing_fin": 22, "typing_liter": 22, "typo": [9, 43, 49], "tz": [45, 64], "tzinfo": [55, 64], "tzname": 64, "u": [1, 20, 21, 34, 41, 43, 44, 45, 46, 49, 51, 52, 54, 55, 56, 59, 61, 62], "u4": 55, "ubuntu": 63, "uc": 51, "ui": [64, 65], "uid": 55, "ukctvrjsol0": 65, "un": [43, 56, 61], "unabl": [19, 40, 41, 47, 52, 61], "unalign": 29, "unavoid": 55, "unbeliev": 43, "uncas": 49, "uncertainti": 55, "unclear": [34, 52, 54, 58], "uncompress": 2, "und": 43, "undefin": [47, 61], "undefined_vari": 61, "under": [34, 45, 47, 54, 65], "underfilled_job_titl": 43, "undergra": 59, "underli": [39, 49, 55], "underscor": 1, "understand": [1, 5, 6, 7, 9, 18, 34, 39, 46, 47, 49, 52, 54, 56, 58, 59, 61, 62, 63, 64], "undesir": 44, "undo": [34, 41, 54], "unequ": 7, "unevalu": 21, "unexpect": [4, 6, 14, 24, 55, 56, 58], "unfamiliar": 47, "unfil": 47, "unfold": 58, "unhash": 4, "unicod": 62, "unicorn": 43, "unidecod": 49, "unifi": [43, 56, 61], "uniform": [41, 44, 50, 56], "uninstal": 62, "unintend": [1, 6], "unintention": 6, "union": [40, 61], "uniqu": [10, 27, 35, 45, 51, 55, 56], "unique_id": 55, "uniquecarri": 42, "unit": [6, 9, 22, 44, 45, 55], "unitedst": 55, "unitregistri": 58, "univers": [43, 45], "universal_tagset": 49, "unix_timestamp": 52, "unknown": [4, 9, 43, 49], "unless": [6, 39], "unlik": [55, 65], "unlink": 65, "unmock": 54, "unnecessari": [5, 15, 42, 50, 52, 61], "unnot": 7, "unordered1": 13, "unordered2": 13, "unpack": 49, "unpack_contract": 49, "unpack_hashtag": 49, "unpickl": 48, "unread": 58, "unrel": 45, "unreli": [34, 54], "unsaf": [40, 41, 58, 61], "unsafe_2": 40, "unsafefileerror": 58, "unseen": 47, "unsort": 61, "unstar": 65, "unstar_button": 65, "unstructur": [49, 55], "unsupervis": 43, "unsupport": [1, 6], "until": [16, 20, 34, 45, 47, 49, 50, 52, 54, 61, 65], "untouch": 41, "untrack": [34, 54], "untrust": 58, "unus": [31, 61], "unusu": 29, "unwant": 50, "unyt_arrai": 58, "up": [2, 6, 7, 11, 21, 30, 32, 34, 41, 42, 43, 45, 46, 47, 49, 54, 55, 56, 62, 63, 65, 68], "upcom": 46, "updat": [5, 6, 39, 44, 45, 50, 56, 60, 62, 63, 67], "updated_pl_df": 50, "updates_data": 41, "upgrad": [55, 59], "upload": [49, 58], "upload_fil": 58, "upon": 48, "upper": [29, 30, 39, 43, 47, 52, 55, 56, 64], "upper_1": [], "upper_c": 52, "upperboundsoncoeffici": 47, "upperboundsonintercept": 47, "uppercas": [7, 64], "urchad": 49, "ureg": 58, "uri": 47, "url": [1, 41, 45, 49, 51, 58, 62, 63], "urllib": 45, "urlopen": 45, "urlsafeseri": 51, "us": [0, 2, 7, 9, 13, 15, 17, 18, 21, 23, 30, 31, 33, 36, 38, 41, 46, 48, 49, 50, 51, 53, 57, 60, 61, 62, 68, 69], "us_cal": 55, "us_holidai": 55, "usa": [45, 55], "usabl": 64, "usag": [19, 28, 42, 46, 47, 48, 50, 52, 59, 60, 62], "use_adversari": 45, "user": [9, 18, 19, 34, 37, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 60, 61, 62, 64, 65], "user1": [29, 39, 51, 58], "user2": [29, 39, 58], "user3": [29, 39], "user_ag": 44, "user_data": 4, "user_guid": 24, "user_id": [47, 50, 54], "user_instal": 56, "userattr": 19, "userid": 47, "usernam": [39, 45, 48, 49, 59, 63, 65], "username_field": 65, "userpydant": 19, "userwarn": [47, 49, 52, 56, 59], "usual": 43, "utc": [55, 64], "utc_now": 55, "utc_time_cr": 47, "utcfromtimestamp": 64, "utcnow": 64, "utcoffset": 64, "utctimetupl": 64, "utf": 64, "util": [20, 34, 37, 39, 40, 47, 49, 50, 52, 53, 54, 55, 56, 60, 62, 64, 65], "utils_func": 55, "utilsforecast": 55, "uuid": 45, "uuu": 64, "v": [4, 19, 45, 55, 56, 61], "v0": [46, 61], "v1": [25, 42, 49, 61], "v2": [25, 49, 61], "v3": 63, "v4": 53, "va": 56, "vacat": 56, "vagu": [6, 43], "val": [6, 24, 25, 27, 28, 52, 55], "val1": [6, 34, 52, 54], "val2": [6, 34, 52, 54], "val3": [34, 54], "val_df1": 25, "val_df2": 25, "val_i": 25, "val_x": 25, "valapeno": 43, "valid": [1, 5, 41, 49, 60, 61, 64], "valid_pct": 43, "validate_python": 61, "validation_curv": 47, "validationerror": [19, 61], "valu": [1, 5, 9, 11, 14, 15, 19, 25, 26, 27, 32, 34, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 61, 64], "valuabl": [1, 63, 68], "value1": 50, "value1_sum": 50, "value2": 50, "value2_mean": 50, "value_column": [34, 54, 55], "value_count": [30, 43], "value_i": [25, 50], "value_right": 50, "value_var": 35, "value_x": [25, 50], "valueerror": [1, 7, 9, 14, 19, 20, 34, 37, 54, 64], "values_chang": [34, 54], "van": 56, "vanna": 45, "var": [6, 11, 24, 32, 60], "var_": 43, "var_0": 43, "var_1": [43, 64], "var_2": [43, 64], "var_3": [43, 64], "var_4": 43, "var_5": 43, "var_nam": 35, "vararg": 47, "varargs_typ": 47, "varchar": [34, 42, 54], "vari": [34, 54, 55], "variabl": [5, 6, 7, 9, 14, 21, 22, 34, 35, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 61, 64, 65, 67], "varianc": 55, "variat": [15, 34, 43, 49, 54, 60], "varieti": [45, 47, 55, 58], "variou": [1, 5, 14, 22, 34, 42, 47, 48, 49, 52, 55, 60, 62], "varkw": 47, "varkw_typ": 47, "vbl8dny6b4anbtbbky3": 51, "vc": 47, "vcodec": 65, "vcs_commit": 47, "ve": [19, 45], "vector": [46, 47, 49, 56], "veget": [45, 46], "vegetarian": 43, "veggi": 13, "vehicl": 43, "venezuela": 43, "venn2": 56, "venn3": 56, "venv": [29, 31, 34, 37, 40, 41, 45, 47, 49, 52, 54, 56, 58, 60, 61, 62, 64], "ver": 49, "verbos": [1, 4, 16, 37, 39, 42, 44, 47, 49, 50, 60, 63, 65], "verbose_feature_names_out": 43, "veri": [11, 14, 32, 43, 45, 55, 57, 65], "verif": 61, "verifi": [41, 51, 52, 60], "vernal": 55, "versa": 4, "versatil": [1, 47, 60], "version": [21, 31, 34, 45, 47, 49, 50, 52, 54, 55, 56, 58, 60, 61, 62, 63, 64, 67, 68], "version_info": [34, 54], "versu": 24, "vertic": 44, "very_long_str": 61, "veteran": 55, "vi": [49, 56, 65], "vice": 4, "victoria": 55, "video": 45, "vie": 45, "vietnam": 43, "view": [24, 26, 27, 41, 43, 47, 48, 49, 53, 56, 59, 62, 63, 68], "vikparuchuri": 45, "villag": [43, 56], "vinegar": 45, "violat": [6, 41, 61], "violetbag": 45, "viral": 45, "virgil": 45, "virgo": 43, "virtual": [52, 65], "virtualenv": 47, "visi": 55, "visibl": 65, "vision": 62, "visit": [19, 55, 56, 61], "visitor": 44, "visitor_bodi": 44, "visitor_text": 44, "visual": [8, 40, 43, 45, 48, 63, 67], "visualize_barchart": 49, "visualize_top": 49, "viz": 47, "vladivostok": 45, "vmax": 43, "vmin": 43, "vnd": 63, "volatil": 55, "volum": [1, 9, 52, 55], "vote": 47, "vp9": 65, "vs1": 43, "vs2": 43, "vscode": 37, "vsketch": 56, "vulner": [46, 52, 58], "vv": [34, 54], "vvs2": 43, "w": [18, 42, 43, 49, 55, 58], "wa": [7, 34, 41, 49, 52, 55, 58, 60, 61, 63], "wad": 45, "wade": 45, "wai": [2, 4, 5, 6, 7, 9, 10, 13, 19, 20, 24, 26, 28, 29, 34, 43, 45, 47, 49, 54, 55, 58, 60, 63, 64, 68], "wait": [34, 45, 54, 65], "wake": [11, 32], "wale": 55, "walk": [1, 34, 49, 54, 55, 56, 60], "wall": 50, "walmart": [20, 34, 35, 54, 58], "want": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 43, 45, 47, 48, 49, 50, 51, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68], "wanted_list": 45, "war": 49, "warehous": 49, "warm": 45, "warmup": [34, 54], "warmup_iter": [34, 54], "warn": [26, 34, 40, 41, 43, 49, 52, 54, 56, 60, 64, 65], "was_imposs": 47, "washington": [45, 55], "washingtonpost": 45, "wast": [34, 54, 59], "watch": 45, "water": [44, 45], "wave": 59, "wb": [1, 43, 55, 58], "we": [1, 2, 4, 5, 6, 7, 8, 9, 11, 15, 19, 20, 21, 22, 26, 27, 29, 32, 34, 39, 41, 42, 43, 45, 46, 47, 49, 50, 52, 54, 55, 56, 58, 59, 65, 67], "weak": 46, "weather": [46, 49], "web": [19, 43, 47, 51, 68], "webbrows": 65, "webdriv": 65, "webdriverwait": 65, "webm": 65, "webpag": 45, "websit": [45, 58, 63], "wednesdai": 65, "week": [28, 34, 43, 55, 56, 64, 65], "weekdai": [34, 43, 54, 64], "weekday_nam": 43, "weekend": 49, "weekli": 65, "weigh": 7, "weight": [1, 19, 47, 49, 58], "weight1": 48, "weight2": 48, "weightcol": 47, "welcom": [45, 60], "well": [1, 43, 47, 49, 50, 56, 63], "wemak": 61, "went": 49, "were": [5, 49, 54, 55], "west": [43, 45, 50, 56], "western": 55, "wget": [42, 49, 50], "what": [20, 34, 40, 41, 43, 45, 46, 47, 49, 50, 54, 56, 58, 60, 62, 63, 64], "wheel": 47, "when": [1, 3, 4, 8, 9, 11, 14, 16, 19, 20, 21, 22, 24, 29, 32, 33, 35, 39, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64], "whenmatchedupd": 41, "whennotmatchedbysourceupd": 41, "whennotmatchedinsert": 41, "where": [1, 4, 5, 9, 39, 40, 41, 43, 46, 47, 50, 52, 53, 54, 55, 56, 58, 61, 64], "wherea": [34, 49, 52, 54], "whether": [18, 29, 34, 37, 45, 47, 52, 54, 55, 64], "which": [4, 6, 7, 11, 14, 20, 22, 24, 26, 27, 30, 32, 34, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 61, 62, 64, 65], "while": [1, 2, 5, 9, 19, 20, 22, 24, 30, 34, 35, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65], "whiskerprop": 56, "white": [33, 45, 56], "whitespac": [39, 60, 64], "whl": 64, "who": [49, 52, 58], "whose": [8, 24, 28, 29, 30, 37, 56], "why": [14, 21, 45, 47, 48, 49, 60, 68], "wide": [27, 34, 35, 54, 55, 68], "wider": 46, "width": [27, 56, 64], "wifi": 65, "wiki": 26, "wikipedia": 26, "wild": 49, "wildcard": 39, "wilei": 60, "wilkinson": 44, "willianfuk": 55, "willing": 43, "wilson": [45, 52], "win": 55, "window": [49, 52], "windowspec": 52, "windsor": 43, "wine": 56, "wine_typ": 56, "winspe": 56, "winter": 56, "wintern": 45, "wise": [34, 54], "wish": [21, 58, 60, 64], "wit": 43, "with_column": 50, "with_frag": 44, "with_latex": 60, "with_path": 44, "with_queri": 44, "with_slot": 1, "with_trend": 55, "withgroupedstat": 52, "within": [1, 6, 34, 40, 43, 44, 45, 47, 49, 52, 54, 55, 56, 58, 63], "without": [5, 6, 8, 9, 14, 15, 16, 20, 26, 27, 29, 34, 39, 40, 41, 42, 44, 47, 49, 50, 52, 53, 54, 55, 56, 60, 62, 63, 64, 67], "without_slot": 1, "withrangestat": 52, "wlp111s0": 40, "women": 45, "wonder": 56, "woof": 22, "worcest": 45, "word": [29, 34, 43, 46, 54, 56, 58, 64], "word_count": 49, "word_frequ": 49, "word_scor": 49, "wordlist": [47, 49], "wordnet": 49, "wordninja": 49, "work": [1, 4, 8, 14, 15, 16, 19, 21, 24, 29, 40, 42, 43, 45, 47, 48, 49, 50, 53, 56, 58, 59, 60, 61, 62, 63, 65, 67, 68], "workaround": 41, "worker": [40, 43, 49, 52], "workflow": [1, 42, 43, 47, 49, 56, 63], "working_hour": 55, "workload": [40, 52], "world": [18, 26, 45, 46, 49, 58, 60, 65], "worldwid": 55, "worri": 21, "worst": 55, "would": [21, 27, 34, 43, 49, 50, 54, 55], "wouldn": [20, 21, 34, 40, 43, 54, 59, 62, 64, 65], "wp": 49, "wrap": [5, 43, 46, 52], "wrapper": [5, 46, 54, 58, 61], "wratio": 49, "write": [1, 2, 5, 18, 20, 33, 37, 39, 41, 42, 45, 47, 48, 53, 56, 59, 60, 61, 62, 63, 64], "write_deltalak": [41, 42, 50], "write_text": [18, 34, 54, 65], "writefil": [1, 6, 9, 22, 34, 39, 47, 49, 53, 54, 59, 60, 61, 62, 64, 65], "writer": [41, 42, 50], "writfil": [34, 54], "written": [34, 41, 43, 50, 54, 69], "wrong": [1, 5, 6], "wrong_calc": 58, "wrote": 68, "wsm": 43, "www": [1, 45, 46, 49], "x": [1, 6, 7, 16, 21, 24, 25, 27, 34, 35, 37, 40, 41, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 58, 60, 61, 64, 67], "x20": 60, "x2_muzaxc2cax9w6lz6": 45, "x7f": 60, "x86_64": 67, "x_b": 44, "x_c": 44, "x_coord": 40, "x_df": 55, "x_dirti": 43, "x_enc": 43, "x_is_even_and_neg": 6, "x_label": [6, 56], "x_preprocess": 43, "x_resampl": 47, "x_shift": 40, "x_test": [43, 47, 48, 55], "x_train": [43, 47, 48], "x_transform": 43, "x_valu": 56, "xgboost": 39, "xi": 47, "xlabel": [6, 44, 45, 47, 55], "xlnet": 49, "xlsx": 33, "xml": [41, 65], "xpath": 65, "xt": 43, "xtick": [47, 56], "xticklabel": 43, "xtremedistil": 49, "xvf": 49, "xwnpqwtd": 45, "xx": [43, 45, 55], "y": [1, 3, 6, 16, 21, 25, 27, 34, 35, 37, 40, 43, 44, 45, 47, 48, 49, 53, 54, 55, 56, 60, 61, 62, 64, 67], "y1_valu": 56, "y2_valu": 56, "y3_valu": 56, "y_actual": 47, "y_column_nam": 39, "y_coord": 40, "y_df": 55, "y_fitted_df": 55, "y_hat_df": 55, "y_is_odd_and_posit": 6, "y_label": [6, 56], "y_name": 43, "y_pi": 47, "y_pred": [47, 55, 64], "y_predict": 47, "y_rec_df": 55, "y_resampl": 47, "y_shift": 40, "y_test": [43, 47, 48, 55, 56], "y_test_df": 55, "y_test_pr": 47, "y_test_scor": 47, "y_train": [43, 47, 48], "y_train_df": 55, "y_train_pr": 47, "y_train_scor": 47, "y_true": 64, "y_type": 64, "yakutsk": 45, "yaml": [47, 51, 59, 61, 65], "ye": [20, 21, 56, 63], "year": [3, 9, 40, 43, 45, 49, 55, 56, 64], "year_first_hir": 43, "yellow": [1, 4, 43, 44, 45, 48, 49, 56], "yellowbrick": 56, "yemen": [43, 45], "yep": 49, "yesterdai": 41, "yet": [6, 50, 55], "yh5baekaaealaaaaaabaaeaaaictaeaow": 45, "yi": 47, "yield": [52, 55], "yjp2stit_vgpqrm9oeibsydfg8ba": 45, "ylabel": [6, 44, 47, 55], "ylorrd": 43, "yml": 65, "yo": 46, "yoga": 49, "york": [42, 43, 45, 49, 52, 56], "yorkvil": [43, 56], "you": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 69], "your": [2, 3, 5, 9, 15, 16, 20, 21, 27, 28, 29, 30, 37, 42, 43, 45, 46, 50, 51, 52, 55, 58, 59, 60, 62, 68, 69], "your_api_kei": 46, "your_api_token": 40, "your_email": 65, "your_github_token": 63, "your_kei": 47, "your_local_fold": 63, "your_nicest_paramet": 65, "your_openai_api_key_her": 45, "your_organis": 47, "your_second_email": 65, "yourfileid": 51, "yournam": 63, "yourself": [6, 61, 64], "youtu": 65, "yt": 65, "ytick": [47, 56], "yticklabel": 43, "ytimg": 65, "yy": [], "yyyi": 64, "z": [6, 25, 35, 43, 44, 47, 60, 61], "z5jceahnv3aax9ihcdv": 45, "z_score": 47, "z_squar": 44, "zaleski": 45, "zambia": 43, "zero": [6, 34, 48, 54, 55, 56, 64], "zerodivisionerror": [6, 65], "zeroshotgptclassifi": 47, "zfill": 64, "zimbabw": 43, "zip": [14, 40, 47, 49, 51, 55, 61], "zipcod": 59, "zon": 56, "zone": [43, 55], "zoo": 56, "zoom": 56, "zu": 43, "zucchifi": 43, "zucchini": 43, "zucchtni": 43, "zucchzni": 43, "zuck": 45, "zuckerberg": 45, "zuckhini": 43, "zycchini": 43, "zza": 55, "\u00b5": [6, 26, 41, 42, 50], "\u00bc": 45, "\u03bc": []}, "titles": ["<span class=\"section-number\">2. </span>Python Built-in Methods", "<span class=\"section-number\">2.7. </span>Classes", "<span class=\"section-number\">2.9. </span>Code Speed", "<span class=\"section-number\">2.8. </span>Datetime", "<span class=\"section-number\">2.5. </span>Dictionary", "<span class=\"section-number\">2.6. </span>Function", "<span class=\"section-number\">2.10. </span>Good Python Practices", "<span class=\"section-number\">2.3. </span>List", "<span class=\"section-number\">2.2. </span>Number", "<span class=\"section-number\">2.11. </span>New Features in Python", "<span class=\"section-number\">2.4. </span>Set", "<span class=\"section-number\">2.1. </span>String", "<span class=\"section-number\">3. </span>Python Utility Libraries", "<span class=\"section-number\">3.1. </span>Collections", "<span class=\"section-number\">3.7. </span>Data Classes", "<span class=\"section-number\">3.3. </span>Functools", "<span class=\"section-number\">3.2. </span>Itertools", "<span class=\"section-number\">3.6. </span>Operator", "<span class=\"section-number\">3.9. </span>pathlib", "<span class=\"section-number\">3.10. </span>Pydantic", "<span class=\"section-number\">3.4. </span>Pydash", "<span class=\"section-number\">3.5. </span>SymPy", "<span class=\"section-number\">3.8. </span>Typing", "<span class=\"section-number\">4. </span>Pandas", "<span class=\"section-number\">4.1. </span>Change Values", "<span class=\"section-number\">4.6. </span>Combine Multiple DataFrames", "<span class=\"section-number\">4.5. </span>Create a DataFrame", "<span class=\"section-number\">4.8. </span>Manipulate a DataFrame Using Data Types", "<span class=\"section-number\">4.3. </span>Work with Datetime", "<span class=\"section-number\">4.7. </span>Filter Rows or Columns", "<span class=\"section-number\">4.2. </span>Get Certain Values From a DataFrame", "<span class=\"section-number\">4.9. </span>Sort Rows or Columns of a DataFrame", "<span class=\"section-number\">4.10. </span>String", "<span class=\"section-number\">4.11. </span>Style a DataFrame", "<span class=\"section-number\">4.12. </span>Testing", "<span class=\"section-number\">4.4. </span>Transform a DataFrame", "<span class=\"section-number\">5. </span>NumPy", "<span class=\"section-number\">5.1. </span>NumPy", "<span class=\"section-number\">6. </span>Data Science Tools", "<span class=\"section-number\">6.13. </span>SQL Libraries", "<span class=\"section-number\">6.11. </span>Better Pandas", "<span class=\"section-number\">6.16. </span>Delta Lake", "<span class=\"section-number\">6.17. </span>DuckDB", "<span class=\"section-number\">6.2. </span>Feature Engineer", "<span class=\"section-number\">6.1. </span>Feature Extraction", "<span class=\"section-number\">6.3. </span>Get Data", "<span class=\"section-number\">6.18. </span>Large Language Model (LLM)", "<span class=\"section-number\">6.5. </span>Machine Learning", "<span class=\"section-number\">6.4. </span>Manage Data", "<span class=\"section-number\">6.6. </span>Natural Language Processing", "<span class=\"section-number\">6.14. </span>Polars", "<span class=\"section-number\">6.8. </span>Sharing and Downloading", "<span class=\"section-number\">6.15. </span>PySpark", "<span class=\"section-number\">6.9. </span>Tools to Speed Up Code", "<span class=\"section-number\">6.12. </span>Testing", "<span class=\"section-number\">6.7. </span>Time Series", "<span class=\"section-number\">6.10. </span>Visualization", "<span class=\"section-number\">7. </span>Cool Tools", "<span class=\"section-number\">7.3. </span>Alternative Approach", "<span class=\"section-number\">7.1. </span>Tools for Best Python Practices", "<span class=\"section-number\">7.7. </span>Better Outputs", "<span class=\"section-number\">7.5. </span>Code Review", "<span class=\"section-number\">7.9. </span>Environment Management", "<span class=\"section-number\">7.8. </span>Git and GitHub", "<span class=\"section-number\">7.6. </span>Logging and Debugging", "<span class=\"section-number\">7.4. </span>Workflow Automation", "<span class=\"section-number\">8. </span>Jupyter Notebook", "<span class=\"section-number\">8.1. </span>Jupyter Notebook", "Efficient Python Tricks and Tools for Data Scientists", "<span class=\"section-number\">1. </span>How to Read This Book"], "titleterms": {"": [4, 6, 7, 15, 16, 19, 20, 29, 30, 35, 37, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 64], "0": [26, 27, 28], "1": 61, "10": [7, 9], "11": 9, "12x": 50, "2": [2, 16, 26, 27, 30, 48, 49], "23": 53, "3": [4, 7, 9, 47, 49, 52], "36": 49, "5": 52, "9": 4, "A": [6, 13, 16, 34, 39, 40, 48, 50, 54, 55, 56, 58, 65], "At": 65, "Be": [6, 22], "Being": 67, "For": [6, 16, 44, 49], "If": [6, 29], "Into": [25, 35, 44, 62], "Its": 62, "Not": [6, 13, 22, 34, 54], "OR": 6, "One": [6, 11, 13, 32, 34, 37, 45, 47, 49, 53, 54, 55, 56, 63, 64, 65], "That": [6, 22, 43, 58], "The": [2, 6, 11, 13, 28, 30, 32, 34, 41, 44, 48, 49, 54, 55, 56, 58, 67, 68], "Their": [27, 29], "Will": 6, "With": [4, 11, 16, 20, 25, 32, 34, 40, 54], "_": 6, "__call__": 1, "__main__": 6, "__name__": 6, "__repr__": 1, "__str__": 1, "ab": [34, 54], "about": [45, 67, 68], "abstract": 1, "acceler": 49, "access": [18, 28, 30, 58], "accur": 47, "accuraci": [34, 46, 54], "across": 67, "ad": [1, 10], "adapt": 1, "add": [14, 22, 28, 40, 53, 55, 56, 64], "add_datepart": 55, "adjust": 56, "aeon": 55, "after": [28, 34, 54, 65], "again": 64, "agg": 35, "aggreg": [35, 50], "ai": [40, 43, 46, 49], "align": 35, "all": [6, 7, 25, 29, 30, 34, 37, 54], "almost": [11, 32], "alphanumer": 58, "also": 45, "altern": [49, 58], "an": [5, 6, 7, 11, 13, 16, 21, 22, 24, 32, 37, 45, 47, 49, 56, 65], "analysi": [33, 34, 47, 50, 52, 54, 55, 61], "analyt": 42, "analyz": [49, 61], "ani": [7, 37, 60, 62, 64], "anim": [56, 60], "annot": [22, 44, 56, 65], "anoth": [4, 11, 15, 18, 25, 29, 32, 63], "anywher": [], "api": [45, 52, 56, 63], "app": 49, "append": [7, 41], "appli": [7, 15, 16, 24, 35, 40, 53], "applic": [56, 62], "approach": [16, 55, 58], "approx": [34, 54], "ar": [7, 13, 18, 37, 65], "arbitrari": 5, "argpars": 60, "argsort": 37, "argument": [5, 6, 15, 16], "arima": 55, "arithmet": 3, "around": 48, "arrai": [27, 30, 37, 52, 58], "articl": [11, 32, 49], "ask": 45, "assert": [34, 54], "assert_almost_equ": 37, "assess": 55, "assign": [6, 24, 34, 35, 54], "assist": 43, "associ": 7, "astral": 63, "attent": 49, "attr": 19, "attract": 56, "attribut": [1, 20], "augment": 49, "author": 68, "auto": [39, 55], "autogluon": 47, "autom": [42, 45, 49, 55, 63, 65], "automat": [55, 56, 61, 65], "autoremov": 62, "autoscrap": 45, "avail": 13, "averag": 28, "avoid": [6, 43, 52], "ax": 37, "back": 51, "background": 33, "backtest": 55, "bar": [34, 40, 54, 64], "base": [3, 7, 15, 25, 27, 28, 29, 34, 37, 44, 54, 62, 65], "basic": [21, 47], "beartyp": 61, "beauti": [59, 64], "befor": 28, "benchmark": [34, 54], "bert": 49, "bertop": 49, "berttop": 49, "bertviz": 49, "best": [11, 14, 32, 41, 44, 52, 59], "better": [1, 16, 40, 60], "between": [2, 7, 14, 30, 34, 37, 48, 54, 56, 58], "beyond": [41, 49, 55], "big": 52, "bin": 30, "blaze": 50, "blox": 56, "book": [68, 69], "boolean": [16, 29], "box": 58, "bracket": 58, "branch": 63, "break": [34, 54], "bring": 63, "browser": [63, 65], "build": [43, 47, 49, 60], "built": 0, "bundl": 62, "calcul": [3, 11, 30, 32, 40, 49, 60], "call": [1, 15, 58], "callabl": 22, "camelot": 60, "captur": [47, 56], "case": [34, 54], "catch": 6, "categor": [24, 27, 31, 43, 44], "categori": [24, 34, 35, 43, 54], "causal": 55, "cell": 33, "certain": [11, 30, 32, 37], "chain": [20, 24, 52], "chainmap": 13, "chang": [24, 30, 37, 55, 65], "charact": [11, 32], "chart": 56, "chatgpt": 47, "check": [6, 7, 10, 18, 34, 37, 54, 58, 61], "checker": 61, "checklist": 49, "choic": 7, "choos": [34, 54], "chroma": 49, "chrono": 55, "chunk": [20, 26], "class": [1, 14, 19, 22, 34, 54, 56], "classif": 55, "classifi": 47, "claus": 5, "clean": [6, 7, 16, 49], "cleaner": [1, 9, 52, 65], "clear": 44, "cli": [60, 63], "click": 60, "clip": 29, "clone": 62, "close": 1, "cloud": 58, "code": [1, 2, 5, 6, 9, 11, 24, 32, 34, 39, 43, 44, 45, 47, 49, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 67], "codebas": 61, "collect": 13, "collect_al": 50, "color": 33, "column": [24, 25, 26, 27, 28, 29, 30, 31, 35, 37, 52, 55], "columnar": 42, "combin": [13, 15, 16, 25, 34, 40, 54], "combine_first": 25, "comma": [11, 32], "command": [59, 60, 64, 65], "comment": 61, "commit": 63, "common": 60, "compar": [2, 14, 48, 60, 62, 64], "comparison": [1, 3, 37, 47, 48, 50, 52], "complex": [6, 39, 41, 52], "compon": [39, 44], "comprehens": [4, 7, 56, 64], "compress": 16, "comput": [30, 35, 50, 55], "concaten": 6, "concept": 60, "concurr": 2, "condens": 6, "condit": [6, 7, 9, 34, 37, 52, 54], "confirm": 8, "confus": 56, "consist": 46, "consol": 64, "constraint": 41, "cont_cat_split": 44, "contain": [29, 30, 58], "content": [43, 65], "context": 22, "contigu": 49, "continu": 44, "contract": 49, "control": [11, 32, 34, 48, 54], "convers": [27, 58], "convert": [28, 39, 49, 55, 58], "cool": 57, "copi": [6, 26, 62], "corpora": 56, "correl": [30, 43, 56], "corrwith": 30, "count": [13, 29, 30], "counter": [6, 13], "cover": [], "cpu": 2, "creat": [1, 6, 13, 18, 26, 34, 35, 39, 44, 45, 47, 49, 52, 54, 56, 59, 60, 62, 65], "cross": [35, 43, 55], "crosstab": 35, "csv": [26, 28, 42, 50], "cummax": 30, "cumsum": 30, "cumul": [15, 30], "current": [15, 18, 24, 30], "curv": 47, "custom": [1, 20, 25, 43, 49], "cut": 30, "dai": 55, "dask": [39, 40], "data": [1, 7, 13, 14, 16, 19, 26, 27, 28, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 61, 67, 68], "databas": [34, 39, 54], "dataclass": [9, 51], "datacommon": 45, "datacompi": 48, "datafram": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 45, 50, 52, 53, 54], "datapoint": 28, "dataset": [2, 42, 43, 45, 47, 48, 49, 50], "date": [3, 11, 19, 28, 32, 55], "datefind": 55, "dateoffset": 28, "datetim": [3, 26, 28, 55, 64], "dead": 61, "deal": 47, "debug": [11, 32, 64], "decim": [8, 11, 32], "decis": [47, 56], "declar": [1, 22, 34, 50, 54], "decompos": 47, "decor": [5, 46, 58], "deep": [34, 54, 65], "deepcheck": [34, 54], "deepcopi": 6, "deepdiff": [34, 54], "deepev": [34, 54], "deepli": 20, "default": [6, 13, 14], "default_factori": 14, "defaultdict": 13, "defin": 49, "delet": 41, "delta": [41, 50], "dendogram": 56, "depend": [22, 62], "deriv": 21, "descript": [34, 54, 60], "deseri": [51, 58], "design": 1, "desktop": 65, "detect": [11, 32, 46, 47, 55, 56, 65], "determin": 47, "df": [25, 29, 30], "df_shrink": 53, "diagram": 56, "dict": 4, "dictdiff": 58, "dictionari": [4, 13, 17, 20, 24, 30, 39, 58], "diff": 30, "differ": [7, 16, 30, 34, 35, 37, 48, 54, 58, 67], "difflib": [11, 32], "dimens": [47, 49, 56], "dimension": [47, 56], "directli": 45, "directori": [18, 34, 54], "dirti": [34, 43, 54], "dirty_cat": 43, "discoveri": 56, "discret": 30, "disk": 2, "displai": [33, 56, 67], "distfit": 44, "distinguish": 1, "distribut": [44, 47, 48, 52], "divid": 26, "divis": 8, "do": 6, "docopt": 59, "docstr": [34, 54, 61], "doctest": [34, 54], "document": 59, "don": [6, 59], "dot": 58, "doubl": [4, 8, 37], "download": [51, 63, 65], "drag": 56, "drift": 56, "drive": 51, "drop": [43, 56], "dropwhil": 16, "dt": 28, "dtreeviz": 56, "dtype": 27, "duck": 1, "duckdb": 42, "duplic": 6, "durat": 3, "dvc": 48, "dynam": [39, 55, 60], "e": 63, "each": [5, 7, 24, 30, 35], "eas": [56, 63], "easi": [47, 48, 55], "easier": [33, 52], "easiest": [48, 56], "easili": 42, "effect": [6, 35], "effici": [6, 16, 26, 27, 34, 40, 41, 42, 43, 49, 50, 54, 61, 68], "effortless": 51, "effortlessli": 55, "ekphrasi": 49, "eleg": 58, "element": [7, 16, 20, 24, 25, 30, 37, 44], "elementwis": 24, "els": [4, 5, 6], "email": 65, "embed": 49, "embrac": 1, "encod": [24, 43], "end": 3, "enforc": [41, 61], "engin": [40, 43, 44, 47, 49, 55], "english": 49, "enhanc": [1, 5, 9, 11, 25, 32, 43, 49, 52], "ensur": [1, 46], "enum": 1, "enumer": 6, "env": 59, "environ": [51, 62], "equal": [11, 30, 32, 34, 37, 54], "equat": [21, 67], "erad": 61, "error": [6, 34, 52, 54], "estim": [47, 49, 55], "evalu": [7, 52], "evenli": 37, "evid": 56, "exampl": [34, 54], "except": [6, 24, 34, 54], "exclud": [27, 29], "execut": [2, 9, 20, 34, 50, 54, 60, 62, 64, 65], "expand": [21, 49], "expect": [34, 54, 68], "expert": 49, "explicit": 65, "explod": 24, "explor": 64, "exponenti": 55, "express": [11, 16, 29, 32, 50, 58], "extend": 7, "extens": [1, 56], "extern": [34, 46, 54], "extract": [39, 44, 45, 46, 49, 55, 58, 60], "f": [11, 32], "facebook": 45, "factor": 21, "fail": [34, 54], "failur": [34, 54], "fake": 45, "faker": 45, "fals": 47, "falsifi": [34, 54], "familiar": 55, "fashion": 43, "fast": [47, 49, 50, 55, 61], "fastai": [44, 53, 55], "fastapi": 47, "faster": [42, 50, 53], "featur": [3, 9, 43, 44, 47, 48, 55], "feel": 58, "fetch_openml": 45, "few": 60, "fewer": 6, "field": 19, "figur": 56, "file": [18, 28, 34, 41, 42, 51, 54, 59, 61, 62, 63, 65], "fill": 24, "filter": [7, 16, 26, 29, 50, 58], "final": 22, "find": [4, 7, 11, 20, 28, 30, 32, 34, 44, 54, 58, 61], "fine": 9, "finish": 65, "fire": 60, "first": 7, "fix": 26, "fixtur": [34, 54], "flag": 6, "flaki": [34, 54], "flashtext": 49, "flatten": [20, 37], "flatten_deep": 20, "flexibl": [22, 55], "flick": 58, "float": [34, 54], "floor": 8, "flow": 56, "flowchart": 56, "fluke": 48, "folium": 56, "forecast": 55, "fork": 63, "format": [8, 11, 32, 33, 49], "formatt": 39, "formula": 44, "forward": [8, 24], "four": 6, "fraction": 8, "freez": [34, 54], "freezegun": [34, 54], "frequenc": [28, 43, 49, 56], "frequent": 24, "friendli": 52, "from": [4, 7, 17, 18, 26, 29, 30, 35, 37, 39, 40, 41, 44, 45, 46, 47, 49, 51, 55, 60, 61, 63, 65, 68], "fromkei": 4, "frozen": 14, "fugu": 40, "fuguesql": 39, "function": [1, 2, 5, 6, 7, 15, 16, 20, 21, 22, 24, 34, 40, 54, 58, 60, 61, 64, 65], "functiontransform": 43, "functool": 15, "fuzzi": 43, "gain": 40, "galat": 49, "gdown": 51, "gener": [16, 34, 45, 49, 54, 55, 56, 60, 62, 65], "geograph": 40, "geopanda": 40, "geopi": 44, "get": [1, 4, 6, 7, 8, 11, 17, 18, 20, 28, 30, 32, 35, 37, 45, 47, 67], "get_close_match": [11, 32], "getattr": 1, "getter": 1, "gif": 56, "giskard": 46, "git": [34, 54, 63], "github": 63, "github1": 63, "githubkit": 63, "gliner": 49, "gluont": 55, "good": 6, "goodby": 27, "googl": [45, 51], "gpt": 63, "gradient": 33, "grain": 9, "graphviz": 56, "great": 60, "gridsearchcv": 47, "group": [16, 20, 28, 30, 35], "groupbi": [16, 35], "grouper": 28, "guid": [50, 68], "handcalc": 60, "handl": [6, 27, 42, 43, 55], "har": [49, 50, 55], "hard": 59, "hardwar": 67, "have": 6, "heapq": 7, "heartrat": 64, "heatmap": 64, "helium": 65, "hierarch": 55, "high": [47, 56], "highlight": 33, "hint": 22, "hiplot": 56, "holidai": 55, "home": 18, "how": [5, 43, 47, 60, 69], "html": 26, "human": [58, 60], "hvplot": 56, "hydra": 59, "hyperfin": 64, "hypothesi": [34, 54], "i": [7, 8, 13, 21, 22, 34, 47, 54], "ibi": 40, "icecream": 64, "id": [34, 54], "idea": 56, "ignor": [6, 7], "iloc": 30, "imbalanc": 47, "imodel": 47, "implement": 1, "import": [47, 61, 62, 65], "improv": [1, 5], "includ": [25, 27], "incorpor": [34, 54], "indefinit": 49, "index": [6, 11, 20, 28, 29, 32, 37], "indic": 6, "infer_object": 27, "inflect": 49, "inform": [49, 59, 67], "inherit": 1, "init": 14, "input": [22, 34, 52, 54], "insert": 25, "insight": 40, "inspect": 64, "instal": 63, "instanc": 1, "instantli": [34, 54], "instead": [4, 6, 8, 59], "integr": [1, 21, 39, 46, 47], "intellig": 56, "inter": 7, "interact": [39, 56, 60, 63], "interfac": [55, 59, 60], "internet": 45, "interpret": [47, 49, 56], "interrog": 61, "intersect": 10, "interv": [28, 30, 37, 47, 55], "intuit": 58, "ipysankeywidget": 56, "ipython": [56, 65, 67], "ipyvizzu": 56, "isin": 29, "islic": 16, "isort": 61, "issu": 46, "item": [4, 7, 13, 15, 17, 20, 35], "itemgett": 17, "iter": [4, 7, 15, 16, 24], "itertool": 16, "itsdanger": 51, "jinja": 60, "join": [6, 7, 43, 50, 52], "junk": 61, "jupyt": [44, 56, 66, 67], "kei": [4, 13, 16, 45, 58], "keyword": [5, 45, 49], "knee": 55, "kneed": 55, "knockknock": 65, "label": 43, "lake": [41, 50], "lambda": 5, "languag": [45, 46, 49, 55], "larg": [2, 8, 16, 26, 42, 46, 50, 60], "largest": [4, 35], "later": 52, "latex": [21, 33, 37, 60], "latexify_pi": 60, "lazi": [47, 50, 52], "leab": [34, 54], "leakag": [43, 47], "learn": [39, 43, 47, 55, 65], "length": [16, 37], "letter": 60, "level": 1, "leverag": [26, 52, 55], "librari": [12, 34, 39, 50, 54, 55, 56, 58, 65], "lightn": 49, "lightweight": [13, 49, 65], "like": [1, 55], "limit": 21, "line": [6, 45, 47, 49, 53, 55, 59, 60, 61, 64, 65], "linspac": 37, "linter": 39, "list": [4, 6, 7, 11, 13, 16, 17, 20, 27, 29, 32, 35, 37, 64], "liter": 22, "llm": [34, 45, 46, 47, 49, 54], "load": 50, "loc": 30, "local": [58, 63], "locat": [25, 44, 45, 56], "log": [34, 47, 48, 54, 64], "logic": [6, 52], "loguru": 64, "look": 60, "loop": [6, 16], "loss": 7, "lovelyplot": 56, "lump": 49, "lux": 56, "machin": [39, 47, 65], "made": [47, 48, 52, 55], "magent": 46, "magic": 1, "magika": 65, "maintain": [34, 54], "make": [6, 14, 26, 53, 58, 60], "make_column_transform": 43, "makefil": 65, "manag": [42, 48, 62], "mang": 13, "manimml": 60, "manipul": [10, 27, 35, 58], "map": [7, 24, 56, 58], "mapi": 47, "mark": [34, 54], "markdown": [33, 65], "massiv": 49, "master": 10, "match": [9, 11, 20, 32, 43, 49, 58], "math": [60, 67], "matplotlib": 56, "matplotx": 56, "matrix": 56, "matter": 6, "max": [4, 7, 37], "maxim": 46, "maximum": 30, "maya": 55, "mayb": 58, "mean_squared_error": 47, "meaning": [6, 49], "media": 49, "melt": 35, "memori": [1, 27, 52, 53, 61], "merg": [4, 25, 41], "mermaid": 56, "met": [34, 54], "metadata": [22, 39, 47], "method": [0, 1, 6, 7, 14, 15, 20, 22, 34, 37, 47, 54], "minim": 1, "mirascop": 46, "mismatch": [34, 41, 43, 54], "miss": [4, 24, 28, 56, 61], "missingno": 56, "misspel": 43, "mixin": 1, "ml": [47, 60], "mlem": 47, "mlflow": 47, "mlforecast": [47, 55], "mllib": 47, "mlxtend": 47, "mock": [34, 54], "mode": [26, 50], "model": [19, 34, 46, 47, 49, 54, 55, 56, 58], "modelkit": 47, "modern": [61, 65], "modul": [58, 62], "modular": [1, 52, 56], "modulu": 8, "monkeytyp": 65, "month": 3, "more": [1, 6, 16], "most": 24, "motiv": 21, "move": 48, "multilin": [11, 32], "multipl": [6, 7, 8, 11, 13, 17, 24, 25, 32, 34, 35, 42, 50, 52, 54, 56], "mutabl": [6, 14], "mypi": 61, "mysql": 39, "n": [7, 20, 28, 35], "name": [5, 6, 29, 34, 35, 44, 49, 54], "namedtupl": 13, "nan": 29, "natsort": 58, "natur": [45, 49], "ner": 49, "nest": [4, 6, 14, 16, 20, 42, 52, 58], "network": 45, "neural": 55, "neuralforecast": 55, "never": [6, 64], "new": [1, 9, 18, 24, 45], "newspaper3k": 49, "nice": 56, "ninja": 49, "nlp": 49, "nlpaug": 49, "non": 55, "normal": 14, "notat": 58, "notebook": [44, 56, 65, 66, 67], "notedown": 65, "notif": 65, "notifi": 65, "np": 37, "null": [25, 58], "num2word": 49, "number": [5, 8, 11, 19, 28, 30, 32, 37, 49], "numer": [8, 49], "numpi": [30, 36, 37, 58], "object": [1, 6, 20, 34, 35, 51, 54, 60, 64], "occurr": 13, "omit": [5, 20], "onc": [34, 54], "onli": [5, 6, 14, 29, 34, 54], "open": [1, 63, 65], "openml": 45, "oper": [1, 3, 4, 6, 7, 10, 15, 17, 21, 24, 35, 37, 39, 40, 41, 42, 52], "operatorn": 9, "optim": [1, 24, 27, 41, 50, 52, 61], "order": [7, 13, 31], "ordereddict": 13, "ordinari": 60, "organ": [34, 54, 63, 65], "out": [52, 60], "outlier": [29, 47], "outlin": 46, "output": [46, 60], "over": [1, 30, 34, 35, 37, 45, 47, 54], "overfit": 47, "overridden": 22, "overwrit": 41, "packag": [62, 67], "pad": [11, 32], "page": [45, 63], "paint": 56, "pair": 16, "pairwis": 30, "pampi": 58, "panda": [23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 45, 50, 52, 53, 54, 64], "pandarallel": 40, "pandas_udf": 52, "pandasai": 40, "pandera": [34, 54], "paper": 60, "parallel": [40, 50], "paramet": [4, 6, 22, 34, 54, 61], "parameter": 52, "parametr": [34, 54], "parent": 18, "parquet": [2, 26, 41, 42], "pars": [42, 44, 58], "parse_d": [26, 28], "parsera": 45, "partial": 15, "partit": 41, "pass": [5, 6, 51], "path": 18, "pathlib": 18, "pattern": [9, 49, 58], "pct_chang": 30, "pd": 30, "pdf": [44, 60, 68], "pendulum": 55, "peopl": 45, "people_also_ask": 45, "per": [34, 54], "percentag": 30, "perform": [8, 49, 50, 55, 61], "perfplot": 61, "period": 28, "pick": [34, 54], "pickl": 47, "pigeon": 44, "pint": 58, "pip": [62, 63], "pipe": [24, 58], "pipelin": [43, 47, 64], "pipreq": 62, "pivot": 35, "pivot_t": 35, "plant": 20, "plot": [47, 56], "plot_seri": 55, "plural": 49, "pmdarima": 55, "poetri": 62, "point": [5, 55], "polar": [34, 50, 54], "posit": 37, "possibl": [22, 34, 54], "post": 14, "postgresml": 39, "postgresql": [34, 39, 54], "power": [52, 55], "practic": [6, 14, 52, 59], "pre": 55, "precis": [37, 44], "predict": [47, 55, 65], "pregex": 58, "prepar": [43, 55], "preprocess": [43, 49], "present": 56, "pretti": 56, "prettymap": 56, "prevent": [7, 47], "previou": [24, 28], "principl": 1, "print": [11, 21, 32, 33, 64], "printabl": 68, "prior": 30, "privat": 1, "probabilist": 55, "probablepeopl": 44, "process": [16, 42, 49, 50, 52], "produc": [45, 64], "product": [16, 47], "profil": [53, 64], "program": 64, "programmat": 43, "progress": [34, 40, 54, 64], "project": [48, 62], "prompt": 46, "properti": [28, 34, 54], "prototyp": 47, "public": 45, "pull": 63, "pyarrow": [26, 27, 42], "pydant": [19, 61], "pydash": 20, "pydep": 62, "pyfiglet": 60, "pygwalk": 56, "pyheat": 64, "pyinstal": 62, "pyinstrument": 53, "pyod": 47, "pypdf": 44, "pyserd": 51, "pyspark": 52, "pytest": [34, 54], "python": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 32, 34, 39, 40, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 68], "pytrend": 45, "pytub": 65, "qcut": 30, "quadrat": 48, "qualiti": [41, 61], "quantstat": 55, "queri": [29, 39, 41, 42, 49, 52], "questgen": 49, "question": 49, "quick": 49, "quickli": 44, "r": [41, 55], "rais": 24, "random": [7, 35, 45], "randomli": 7, "rang": 28, "rank": 37, "rapid": 47, "rapidfuzz": 49, "rare": 43, "ravel": 37, "re": [11, 32], "read": [14, 26, 28, 63, 69], "read_csv": 42, "readabl": [1, 5, 6, 9, 11, 25, 32, 47, 53, 56, 58, 64], "reader": 45, "real": [43, 64], "receiv": 65, "recip": [45, 49], "recommend": 47, "reduc": [15, 39, 49], "reduct": 56, "refurb": 61, "refurbish": 61, "region": 47, "regular": [11, 32, 58], "reindex": 28, "rel": 18, "relat": [34, 54], "relationship": 55, "relev": [46, 55], "reliabl": [34, 41, 54], "remov": [10, 37, 61, 62], "removestar": 65, "repeat": [34, 54], "repetit": 15, "replac": [11, 24, 28, 32, 37, 49, 65], "report": [60, 64], "repositori": 63, "represent": 1, "request": 63, "requir": [1, 62], "rerun": 65, "resampl": 28, "result": 8, "resum": [34, 54], "return": [5, 13, 27], "reus": 67, "reusabl": 52, "revers": 4, "review": 61, "rich": [60, 64], "risk": 1, "rmse": 47, "robust": [43, 55], "rocketri": 65, "roll": 28, "row": [24, 25, 28, 29, 30, 31, 35, 37], "ruff": 61, "run": [34, 54, 65, 67], "runtim": [61, 65], "ruptur": 55, "safe": [41, 48, 51, 58], "safer": 52, "safetensor": 48, "sai": 27, "same": [18, 34, 54, 67], "sampl": [7, 35], "sankei": 56, "save": 2, "scalabl": 47, "scale": [47, 55], "scan": [41, 46], "schedul": 65, "scienc": [1, 38, 48], "scientif": 60, "scientist": [50, 68], "scikit": [43, 47, 55], "scrape": 45, "scraper": 45, "script": [6, 60], "seaborn": 56, "search": [45, 49], "second": [7, 63], "secur": 59, "select": [7, 27, 28, 29, 30, 52], "select_dtyp": 27, "selectexpr": 52, "selenium": 65, "semant": 49, "send": 65, "sensit": 59, "separ": [2, 44], "sequenc": 49, "sequencematch": [11, 32], "sequenti": 16, "seri": [24, 28, 29, 30, 35, 43, 47, 52, 55], "serial": 51, "servic": [34, 45, 54], "session": [34, 54], "set": [10, 34, 50, 54], "set_categori": 31, "setter": 1, "setup": [34, 54], "share": [34, 51, 54], "shift": [28, 30], "short": [34, 54], "shorter": 58, "should": [6, 22, 68], "show": [34, 54], "shrink": 53, "shuffl": 52, "side": 6, "sign": [11, 32], "signal": 55, "signific": 56, "silli": 45, "similar": [11, 32, 43, 48], "simpl": [40, 41, 48, 50], "simplifi": [1, 7, 9, 14, 15, 19, 21, 34, 39, 40, 41, 42, 43, 46, 47, 50, 52, 54, 55, 58, 63, 64], "simul": 34, "singl": [5, 52, 62], "singledispatch": 15, "singular": 49, "size": [30, 35], "sketch": 43, "skill": 49, "skillner": 49, "skip": [34, 54], "skipif": [34, 54], "sklearn": [47, 55], "slash": 8, "slice": [6, 49], "slide": 55, "slot": 1, "smart": [27, 48, 64], "smart_open": 58, "smooth": 55, "snippet": 61, "snoop": 64, "snorkel": 43, "snscrape": 45, "social": [45, 49], "solut": [41, 49, 50], "solv": [21, 43], "sort": [7, 31, 58, 61], "sound": 65, "sourc": 45, "space": [2, 37, 55], "spacy_streamlit": 49, "spark": [39, 40, 52, 55], "speadsheet": 48, "special": 21, "specif": [28, 31, 34, 37, 54, 65], "specifi": [22, 25, 26], "speed": [2, 41, 50, 53, 64], "split": [11, 20, 24, 32, 43], "sql": [39, 40, 41, 42, 48, 52], "sqlfluff": 39, "sqlglot": 39, "sqlite": 39, "sqlitedict": 39, "sqlmodel": 39, "squar": 47, "squarifi": 56, "squeez": 37, "stack": 35, "standard": [49, 52], "star": 63, "starmap": 16, "start": [3, 65], "statement": [6, 9, 39], "static": [1, 55, 61, 65], "stationari": 55, "statist": [45, 49, 56], "statsforecast": 55, "step": [34, 54], "stock": 55, "stop": [4, 6, 34, 54, 64], "storag": [41, 42, 58], "store": [48, 59], "stori": 56, "strategi": 55, "stratifi": 43, "stream": [16, 50], "streamlin": 55, "strict": 7, "string": [1, 6, 7, 11, 24, 27, 32, 39, 44, 49, 55, 58], "strip": 60, "structur": [9, 13, 14, 44, 46, 52], "style": [20, 33, 39, 56], "sub": [11, 32], "subset": [10, 27, 29], "substitut": 21, "substr": [11, 32], "suffix": 25, "sugar": [34, 54], "suit": [34, 54], "sum": 30, "sumi": 49, "summar": [49, 63], "supercharg": 47, "supertre": 56, "support": 43, "surpris": [6, 47], "sweetviz": 48, "swifter": 53, "symbol": 21, "sympi": 21, "syntax": [50, 55], "synthet": 45, "system": 47, "t": [6, 59], "tabgan": 45, "tabl": [26, 35, 41, 43, 52, 60], "tabul": 35, "tabular": [43, 45], "tabularpanda": 43, "take": [30, 37], "task": [2, 6], "templat": [39, 60], "tempo": 52, "temporari": [34, 52, 54], "tensor": 48, "termin": 63, "test": [34, 37, 45, 49, 52, 54], "text": [33, 44, 47, 49, 55, 56, 60], "textaci": 49, "textblob": 49, "texthero": 49, "textstat": 49, "tfcausalimpact": 55, "than": [6, 16], "theme": 49, "theoret": 44, "thi": [68, 69], "three": 47, "through": 16, "time": [2, 20, 28, 34, 43, 45, 47, 52, 53, 54, 55, 64, 65], "timedelta": 3, "timegpt": 55, "timelin": 64, "timeseriessplit": 43, "timestamp": 28, "tmp_path": [34, 54], "to_dict": 30, "to_markdown": 33, "togeth": 49, "token": 56, "tool": [38, 40, 48, 49, 53, 55, 57, 59, 60, 62, 64, 68], "top2vec": 49, "topic": 49, "tqdm": 40, "trace": 55, "traceback": [9, 64], "trade": 55, "train": [34, 43, 54, 55], "transform": [24, 29, 35, 43, 50, 52, 58], "tree": [56, 60], "treemap": 56, "trend": 45, "trick": 68, "trigonometr": 21, "true": [7, 14], "trust": 51, "try": 6, "tsfresh": 55, "tsmoothi": 55, "tupl": 7, "turn": [7, 27, 30, 35, 37], "twice": [34, 54], "two": [4, 7, 14, 18, 25, 34, 37, 47, 54, 58, 60, 62, 64], "txt": 62, "type": [1, 6, 9, 15, 22, 27, 61, 65], "typehint": 22, "typer": 60, "typevar": 22, "udf": 52, "udtf": 52, "ultim": 55, "umap": 56, "underfit": 47, "underscor": [6, 8], "understand": [43, 55], "unevenli": 55, "union": [4, 9, 10, 22], "uniqu": 60, "unit": [13, 34, 52, 54, 58], "unittest": [34, 54], "unleash": 55, "unnam": 26, "unpack": 7, "unpivot": 35, "unstag": [34, 54], "unstructur": 44, "untrust": 51, "unus": 62, "unyt": 58, "unzip": 7, "up": [37, 50, 53], "updat": [4, 25, 41, 52], "upsert": 41, "url": 44, "us": [1, 3, 4, 5, 6, 8, 11, 14, 16, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 34, 35, 37, 39, 40, 42, 43, 44, 45, 47, 52, 54, 55, 56, 58, 59, 63, 64, 65, 67], "usag": [1, 27, 53, 61], "user": 45, "util": 12, "v": [5, 6, 14, 34, 41, 47, 50, 52, 54, 63], "valid": [19, 34, 43, 47, 54, 55], "valu": [4, 6, 7, 13, 16, 20, 22, 24, 28, 29, 30, 33, 35, 37], "variabl": [1, 8, 27, 44], "variou": 45, "vector": [24, 52], "venn": 56, "verifi": [34, 54], "versa": 65, "version": [41, 48], "vice": 65, "video": 65, "view": [52, 60, 64], "virtual": 62, "virtualenv": 62, "visual": [47, 49, 55, 56, 60, 62, 64], "vizro": 56, "vultur": 61, "wai": [1, 16, 41, 48, 52, 56], "walru": 9, "wat": 64, "watchfil": 65, "watermark": 67, "web": [45, 49], "websit": [26, 65], "weight": 7, "wget": 63, "what": [21, 68], "when": [5, 6, 7, 13, 25, 26, 28, 34, 47, 54, 65], "where": [37, 65], "whereami": 65, "whether": 8, "while": 6, "why": 6, "whylog": 48, "widget": 56, "window": 55, "withcolumn": 52, "within": [28, 30, 67], "without": [1, 45, 58], "word": [11, 32, 49, 53], "wordfreq": 49, "work": [20, 28, 34, 39, 52, 54, 55], "workalendar": 55, "workflow": 65, "world": 43, "wrapper": 45, "write": [4, 6, 9, 22, 26, 34, 43, 44, 52, 54, 58, 65], "x": [9, 22], "xfail": [34, 54], "y": [9, 22], "yarl": 44, "year": 28, "yellowbrick": 47, "you": [65, 68], "your": [1, 6, 11, 13, 14, 22, 24, 32, 33, 34, 35, 39, 40, 41, 44, 47, 48, 49, 53, 54, 56, 61, 63, 64, 65, 67], "youtub": 65, "zero": [11, 32], "zip": [7, 16], "zip_longest": 16}})